Hello.
Welcome to running Python programs with
TextWrangler on the Macintosh.
So I'm here in Google, and I've typed
TextWrangler
and I can just go to the TextWrangler
website.
And we're going to download TextWrangler.
And we're playing with usability.
I guess we've got just a little, nice
little download button here, Download Now.
Okay, so we're going to download.
Right there, that, maybe that'll work.
Okay, so here we come.
[BLANK_AUDIO]
Okay, so now it's downloaded and is
mounting up the image.
And so I'll come over here and all
we do is we drag the TextWrangler into
Applications.
And then since I'm not a super user on
this account I have
to authenticate, which means I have to type
an account and a password.
And I've already done this once and so I'm
not going to bother copying it but
So we'll cancel this but it will copy in
and you'll have TextWrangler installed.
And I can close all these windows.
And you have TextWrangler, and I'm
going to unmount this
TextWrangler drive so I have a nice, clean
desktop.
So I want to run TextWrangler, and the
easiest way is to start in
with Spotlight, and do TextWrangler, and
click on TextWrangler when it comes up.
And so it's going to ask me a few
questions when we first start out.
And it's got this cool little window here
which I'm going to close that shows us
recently opened documents.
And so I'm going to write some Python code
here.
And I'm going to say print
hello world, oops.
I want to say hello world.
And now I'm going to save this, by saying
File>Save As and I'm going to instead of
going
straight to my desktop you may not, you
might
not have to push this little button to see
these.
I'm going to make a folder called
assignment 0.
And then inside assignment 0, I am going
to name my file firstprog.py.
Now you'll notice that this assignment 0
appeared as
soon as I made it in the desktop, because
this
folder Desktop under Places is the same
as as my desktop.
So now I'm going to save my file. And so
you'll notice that it does what's called
syntax coloring and shows me the fact that
it's
now got a double quoted string in hello
world.
So now I'm going to run Python.
Now there's couple of ways to do it.
First, I'll show you the built-in way in
TextWrangler.
You go up to here, #!
And say, Run in Terminal.
And this will start up a terminal and then
run the Python command interpreter and
feed it our program.
So we say Run in Terminal.
And so, there's some stuff here.
This is just sort of cruddy overhead.
But right here it basically is my output
for my
program, and it says oh, in the file
Users/demo/Desktop
we got a syntax error on line 1: Hello
World, invalid syntax.
Now it doesn't, doesn't tell us much about
how we might fix this, showing just how,
not clever Python is, but it certainly
knows that we've made a mistake. But we
know it's in line one so let's go back and
take a little more closer.
We meant to say print, oh I forgot the t.
So let's go ahead and say t and we'll save
it.
Oh, I didn't mean to lock it. I'll just
save it.
File>Save.
And then I'm going to run it Python
again, Run in Terminal.
And then I see my little Python output.
So you gotta realize that everything other
than this bit here is
the Python output. And I can make changes,
and I close each time.
Hello there, world.
Oops, hello there world.
And I will use a shortcut.
Now, this Cmd+S, there's a little Apple
symbol,
Apple+S will save it, so I'm not going to
actually save it.
I'm just going to save it with Cmd+S and
then I'm going
to run it, oops, I didn't mean to run a
debugger.
No way, did not want to do that.
Close, die.
Let's try that again.
I'm going to run it in Terminal.
And then away we go and you'll see that my
program has changed.
And so we can see that I can run this
program and change it over and over.
Now after a while this will get kind of
tiring.
I'll hide the terminal, get rid of it.
And especially when you need to be in a
particular directory and if you're
opening files and so you're going to want
to run the terminal by hand.
And learn a few terminal commands, and so
I'm going to type Terminal.
Terminal is, we've actually been using
this, but
now I'm going to open a separate one.
And now I'm at this command prompt where I
can type commands.
Make that a little bit bigger so you can
see it better.
And one of the commands is ls, which
stands
for, I don't know, list all my files or
something.
In Windows, this would be dir but in Unix,
it's ls. And
one of the folders that I see is the
Desktop folder there.
So I am going to say, cd Desktop, and then
I'm going to say ls, and
you'll see I have effectively this little
folder that I have got there
is shown as one of the folders is in, in
my Desktop folder.
So, it's a subfolder.
So, I'm going to go into assn, oops, n0,
and do another ls.
Now, if you're wondering where you're at,
you can always
type this command pwd, which stands for
print working directory.
So, I'm in the main hard drive
under Users/demo/Desktop/assn0, and then
within assn0 I've
got one file, firstprog.py.
If I want a little more detail, I add
minus l to my ls and it
can tell me that it's a file, how big it
is, when it was created, et cetera.
Now if I want to run this, I simply type
the command python firstprog.py.
And Python says start the Python
interpreter
and then feed it firstprog.py, and then
Python
runs my little program and gives me
output.
Now a couple of shortcuts.
First shortcut, hit the up arrow.
And you can hit the up arrow a couple of
times.
You can hit it a couple of times.
I am hitting up arrow.
Then I'll hit down arrow and I can run
previous commands.
Okay?
I can also type part of a file name like
python fir and then hit tab and it actually
auto completes
because it knows the file name and looks
at
the file name and it says oh, fir is the
beginning of the only f-, there's only one
file
that begins with fir, so I'll finish it
for you.
And so, the command line is pretty easy.
So, if you want to make a change, you can
just have the command line sitting there
in one window.
And make a change.
And I'm going to just hit Cmd+S to save
it, and then I'm going to come here.
I'm going to hit up arrow, and I'm going
to hit Enter.
So now I can, you know, make a mistake,
like a syntax error.
I can hit Cmd+S to save it, then I can
go over here and hit up arrow, and run it
again.
And it tells me whoa, line two you've got
a syntax error.
And then I will go ahead and fix this,
print sorry.
And so now my command, now I've got valid
Python and
if I hit up arrow, and hit Enter, it says
two lines.
Print sorry.
Now you'll also notice that it's doing what's
called syntax coloring.
It's showing us what part's keywords,
what part's not a keyworld, word, and I
don't know if you noticed, but when I had
the mistake it was black.
Because blue means it's a Python keyword,
prin is just
text, so it doesn't really know what we
meant by that.
And then when I get the syntax right, it
turns blue.
It's, it's not really critical.
It's just, it helps you understand what's
going on.
Syntax coloring gives you good clues.
You can see what line you're on, down
here in
the lower left-hand corner what line
you're on, what column you're in.
And that can actually help you as you look
at syntax errors
when it tells you oh, this syntax error is
on line two.
So that gives you a good start to using
downloading and installing text edit and
using it to do Python on on Macintosh.
Thank you.

