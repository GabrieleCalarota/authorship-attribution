[SOUND] Now we study
another interesting issue,
called mining closed sequential patterns.
The algorithm mining
this is called CloSpan.
So what is closed sequential patterns?
Similar to closed frequent itemsets.
The closed sequential pattern s means if
there exists no superpattern s prime and
this s prime and s have the same support,
then s is a closed sequential pattern.
In another word, close pattern means for
the same support,
you will find the longest one.
That's the closed pattern.
The, the other ones probably,
does not really matter, okay?
For example, let's look at this example.
Suppose we find three sequences, a b c
with support 20, abcd with support 20,
and support 20, and
abcde with support of 15.
Which ones are closed?
Abcd is closed in the sense, for
support 20, abcd is the longest one.
Okay.
Then abcde is also closed because
the support is 15, there's no longer 1.
And 15, which, you know,
is a super sequence of abcde.
So there are two ways to mine
closed sequential patterns.
One way is you first mine all
of the sequential patterns.
Then you find out which one is closed.
Like this, abc,
you can knock it down, then you get
set of closed sequential patterns.
But this is not very efficient.
What we want is directly mine
close sequential patterns.
This will reduce the number of redundant
patterns to be generated in the middle.
But it will attain the same expressive
power because it's a lossless compression.
So there's a very interesting property.
Like this.
If s is a superset of s1,
s is closed if and only if two
project DBs have the same size.
Let's look at this.
For example, for these sequence DBs,
if you find f, the project database.
And another sequence is af.
This is the project database.
If these project database
have exactly same size,
then this actually means af is closed.
Essentially, you only need to mine one,
that means you can merge them, okay?
So you will be able to
develop two kinds of pruning,
one called Backward Subpattern Pruning,
okay?
This is a subpattern,
you can, you can prune it.
Another Backward Superpattern pruning,
so probably see.
There you can use
Superpattern to chop up the,
the Subpattern you will get into this,
okay.
So with this spirit we can develop
a efficient algorithm called CloSpan,
it greatly enhance
the processing efficiency.
I'm not I'm going to discuss very detail.
For details, you can read this paper, it
gives you all the detail on the CloSpan.
[MUSIC]

