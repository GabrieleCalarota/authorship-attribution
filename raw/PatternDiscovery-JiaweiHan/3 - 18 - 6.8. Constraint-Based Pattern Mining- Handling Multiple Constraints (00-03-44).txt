[SOUND] Now we study
the very last session in
this lecture,
handling multiple constraints.
Sometimes a user may have
multiple constraints.
He may want to enforce those
constraints in the mining process.
In many cases, if we have more
constraints, it's beneficial to
use those multiple constraints at
the same time in pattern mining.
But the problem could be,
sometimes different constraints may
require potentially different
item-ordering methods.
So if there exists an order R,
that makes both c1 and c2,
these two constraints, convertible.
Then, which order we should try to sort?
Usually, we try to sort order
that benefits the pruning most.
For example,
we can sort order to turn them
into anti-monotonic constraints because
the anti-monotonic constraints have
more pruning power than
monotonic constraints.
But if there exists conflicting
ordering between c1 and c2,
the problem becomes we need to sort the
data in, in first, one constraint first,
then enforce the other constraints
when mining the projected databases.
'Kay.
For example, suppose we have
two constraints, c1 and a c2.
C1 says the average of the profit
of the item set is greater than 20.
C2 says the constraints is average of the
price of the items is, is less than 50.
So, suppose we know c1 may
have more printing power,
that means unlikely,
that every profit will be greater than 20.
But c2 has less printing
power because unlikely,
the average price will be greater than 50.
Okay.
So, in that case, we may,
you know, try to use the,
we can sort the profit descending
order then use constraint c1 first.
Then in the projected database, we can
sort transaction in price ascending order.
Why ascending?
Because ascending, we return this
one into anti-monotonic constraint.
Similar thing is while we
saw profit descending order,
is we can turn c1 into
anti-monotonic constraints.
In that sense, we prune the database
in different project database.
So these two ordering to the height
stand is not a conflict to any.
So in summary, in this lecture we
discussed different kinds of constraints
may lead to different pruning strategy.
We discussed pattern space pruning with
pattern anti-monotonic constraints and
pattern monotonic constraints.
We discussed data space pruning with
data anti-monotonic constraints.
We discussed how to use
succinct constrains in pruning.
We also discussed how to handle
convertible constraints and
a multiple constraints, so
we can see constraint pushing and
day mining in pattern discovery is
pretty interesting and is sophisticated.
Here are a set of research papers
you may like to read to deepen your
understanding on what we have discussed so
far.
Thank you.
[MUSIC]

