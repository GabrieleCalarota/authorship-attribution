[SOUND] Now, we introduce another kind of
constraints called succinct constraints.
So, what is succinct constraints?
We say, if a constraint c can be enforced
by directly manipulating the data,
then we say c is succinct.
Succinctness can be used to prune
both data and pattern space.
Let's look at the first example.
To find the patterns without item i,
one possible way to do it is remove
i from the database, then mine it.
That one,
essentially is pruning those item sets or
those patterns that containing i.
So this is pattern space pruning.
Then, then second example,
to find those patterns containing item i.
This one we can mine by only
do the i projected database.
That essentially is if any transaction
that does not contain item i,
it can be removed right away.
This is data space pruning.
The third example c3,
this transaction is succinct.
In the context is we can start with only
those items whose price is less than or
equal to v.
In the mean time, we also can remove
transactions with high price items only.
The first half,
we can think is a pattern space pruning.
The second part,
we can think is data space pruning.
Remember, for the same transaction
c3 we already discussed.
We can say,
this one is a monotone constraints or
data anti-monotone constraint.
So the constraints can
play multiple roles,
it really depends on how do you use it.
So for example four, constraints
c4 is not succinct in the sense,
because these S.Price keep
increasing by keep adding new items.
So there's no way you can
directly manipulate data to
satisfy this constraint, so
reinforce this constraint.
So, that's why c4 is not succinct.
[MUSIC]

