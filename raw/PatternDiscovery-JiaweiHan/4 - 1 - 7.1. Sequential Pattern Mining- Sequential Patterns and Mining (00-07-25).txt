[SOUND].
Now we come down to a new lecture
called sequential pattern mining.
So, to study sequential pattern mining
we're going to cover the following
topics in different sections.
First, we are going to discuss
sequential pattern and
sequential pattern mining, the concept.
So, the first thing is, we should say
sequential pattern mining is very useful,
has very broad applications.
One application could be in
customer shopping sequences.
For example, you get a loyalty cards for
your, you know, shops.
You may want to see, maybe one customer
likely going to first buy a laptop,
then a digital camera,
then a smart phone, within six months.
If this forms a pattern
you may be able to,
to try to do some kind of advertisement
to other similar customers,
or you know serving some new incentive for
this customer.
Like a medical treatment, form sequences,
natural disaster like
earthquake happening.
It may have some sequences of natural and
also human phenomenon.
Science engineering,
a lot of things are processes.
They evolve along with time.
Similarly, stocks, markets, they,
they have some kind of duration sequences.
Weblog click streams,
calling patterns, for telephone, and
other things forming sequences.
Even for software engineering, the program
execution from sequential patterns.
The biological sequences,
very, very useful and
helpful analysis like DNA sequences,
protein sequences.
So we'll see, trying to get
sequential patterns out of those
very big, vast applications could
be very useful and important.
Actually, we can distinguish
transaction databases usually
may not be important to
look their time effect.
Sequence databases,
they have time stamp attached with it.
Time shared databases usually the time.
Things happened actually along the even or
equivalent time intervals.
Sometimes it's very consecutive.
Then for sequential patterns,
actually there are two kinds.
One is a gapped, another is non-gapped.
The gapped pattern means you do allow
to have gaps within those patterns.
The non-gapped patterns means you
will not allow these patterns.
The sequence everything is important.
The concept of these are important
if you gapped then you have
to treat them very seriously.
For example, for shopping transactions,
probably, you don't care, customer in
the middle of buying some other things,
so it's not important to study the gaps.
Click streams,
sometimes you may say, you know, some
click streams you may care about gaps.
Some probably do not care
about gaps that much.
For biological sequences in
many cases you do carry gaps.
So the protein sequence or DNA sequences,
if you insert many things in
the middle of the two DNA sets, sometimes
you may complete change the function.
So, let's look at the customer's
shopping sequence
as a major example to study how
to do sequential pattern mining.
Sequential pattern mining essentially is,
you give me a set of sequences.
The algorithm is trying
to find the complete set
of frequent subsequences satisfying
the certain minimum support threshold.
Let's look at this example.
We have a sequence database containing
like a four customer shopping sequences.
Okay, what's the meaning of this?
We will look at this particular sequence.
This sequence the parentheses means this
one is within the same shopping basket.
Then, after that you get another one,
ab, that means this ab,
you know, following ef, but
ab is getting together at the same time.
Similarly, the f getting together,
but following ab then c, then b, okay?
That means each one of these
you can think is an element.
It may contain a set of items,
or you call events.
Then these one event
may follow another one.
The items within the event, the order is
not important because they are in the same
shopping basket, but for our convenience
we can solve them alphabetically.
Then what is subsequence?
Actually, any substrings within this one,
you probably can see,
here the subsequence, you may have a gap.
For example you say,
you can have a, you have bc,
bc actually you would drop this a.
You can drop complete ac, then you get d.
You can chop one in half, you can get a c.
So, this one is a subsequence
of this longer sequence.
Then, sequential pattern mining.
The sequential pattern essentially is,
you, if you set up support.
Like, a minimum support is 2.
That means at least the two
sequences contain these subsequence.
You find those subsequence.
This is a sequential pattern.
For example, ab getting together then c.
In these sequence they base they based
this is a pattern of support, too.
So sequential pattern mining
algorithm is you try to
develop algorithm which are efficient,
scalable.
And these algorithms should find
complete set of frequent subsequences,
we call sequential patterns.
And also should be able to incorporate
various kinds of user-defined constraints.
For sequential pattern mining,
actually Apriori property,
the property we have used in
frequent pattern mining still holds.
For example, if we say a subsequence
f sub 1 is infrequent,
then any of this super-sequence
can now be frequent.
So that's almost the same idea as Apriori.
So based on this idea we actually
can develop lots of algorithms.
One represented the algorithm called GSP,
Generalized Sequential Pattern Mining
developed in 1996.
Another one is a vertical format based
mining or SPADE, developed in year 2000.
The third one we're going to introduce is
pattern-growth methods called PrefixSpan,
developed in year 2001.
And then we are going to study
mining closed sequential patterns,
called CloSpan.
Finally, we're going to discuss
constraint-based sequential
pattern mining.
[MUSIC]

