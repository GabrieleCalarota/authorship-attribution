[SOUND] We're going to use two dimensional
graphics a lot when we visualize data.
We're used to using two dimensional
graphics, for example, for
plotting functions.
And so we'll focus on two dimensional
graphics now as we look at methods for
using graphics for visualization.
What we're going to learn is
the difference between vector graphics,
which are used to specify two dimensional
graphics, and raster graphics,
which are used to display
two dimensional graphics.
And then we'll look at the coordinate
system, specifically that are used for
each of them.
Vector Graphics are the graphics
that used for drawing.
We're used to drawing.
We take a pen, and
we'll put our pen down at one point.
And then we'll move our
pen across the paper.
And then lift our pen up at
another point and you get a nice,
straight line between them,
a nice continuous line.
In Raster Graphics, these are the graphics
that are used, for example,
for our televisions and our phones,
they are a rectilinear ray of pixels and
these pixels are assigned colors and
by assigning.
Certain pixels, certain colors you
can represent those same shapes.
So you will draw a shape using vector
graphic to describe a point where you want
to start a line and
a point where you want to stop a line.
You'll get either a straight line or
smooth curved line between them.
Those will be converted to
Raster Graphics for display,
which will consist of the pixels
that get illuminated along that path
in order to display that path that
you described with vector graphics.
So this process is called Rasterization.
And so we'll specify a primitive
as in a vector graphics format.
We'll describe Vertices,
points on the plane,
and then we will connect
those points with strokes.
In this case with straight lines,
but they could be curved paths and
then those strokes can enclose a region.
And so we can fill that region and
we may assign a color for that region.
And for strokes we may assign a color and
a width of the stroke.
Or have the strokes stylized,
say with dashed lines, or so on.
The process of Rasterization
starts with these Primitives
defined by these few data points.
And converts them into an array of pixels
so that they can be displayed, and so
this raster format representation of
this triangle is as an array of pixels.
And the dashed lines represent
the original Primitive on the left,
superimposed over the array of
pixels that are representing it.
And in this case, we have pixels along
the edges that are colored blue, and
pixels in the filled in
region that are colored pink.
And you'll notice, when we rasterize
a shape, we can get Aliasing.
And that's the fact that this nice
straight line here in our vector
graphics representation,
appears as a stair-cased line.
You get these stair step artifacts when
you Rasterize a smooth, straight line and
because those stair steps try
to look like the original line,
but look a little bit different,
we call that an alias.
And that problem is called Aliasing.
When we draw primitives in two dimensions,
when we want to draw shapes for
two dimensional graphics, for
example for plotting functions.
We're going to need the coordinate
system in which to draw those shapes so
we know where to place the vertices for
example of the triangle.
And so
we need to define a coordinates system.
And these coordinates I will call Canvas
Coordinates they are the coordinates that
we use to draw things is with.
In this case, the Canvas Coordinates
have been defined to go minus one,
minus one to one, one.
And so
they set up the square region of a plane.
The origin will be here in the middle.
You can define your canvas
coordinates to be anything you like.
You want to define them to
be something convenient so
you can draw your shapes
without a lot of trouble.
In this case I've drawn a plot of
a parabola, the parabola y = x squared.
And so I've got a curved path starting at
this point here going to this point here,
and I've defined my canvas coordinate
system to be something convenient for
that plot.
In this case I've started it
going from minus one-eighth,
minus one-eighth to one-and-one-eighth,
one-and-one-eighth.
And that's so that, as I move one-eighth,
one-eighth in, I'm at the point
0,0 in my coordinate system and I can
draw my plot going from 0,0 to 1,1 here.
And then I've got an additional
eighth of a unit surrounding the plot
in order to add metadata like that
title of the visualization and
draw the axis and label the axis.
So, that's convenient, but, as I'm
resizing the display, I may want the fonts
to be larger or smaller, and I'll need
a bigger margin surrounding the plot.
Or, I may want the plot to be larger and
the margin to be smaller.
In two dimensional computer graphics,
we can set up higher
archival coordinate systems.
This just means you have
a canvas in a canvas.
In this case we have a yellow canvas
that is a coordinate system for
the entire plot the entire visualization.
And then we have an inner canvas
that is a coordinate system just for
the plotted data.
In this case, the parabola.
And so I set up the outer coordinate
system to go from 0,0 to 1,
1 in this region.
And then I've set up an inner
coordinate system to go from one-tenth,
to nine-tenths, and one-tenth, one-tenth,
to nine-tenths, nine-tenths here.
And I've defined it's coordinates
system to go from (0,0) to (1,1).
So now I can plot inside
this coordinate system
using coordinates that are convenient for
plotting this parabola,
and then I can plot in this
outer coordinate system.
Using coordinates convenient for drawing
the decorations, the axis, and the title.
And so we can define whatever coordinate
system we want, wherever we want,
in order to make it more convenient
to draw two dimensional graphics.
There's also Screen Coordinates.
These are the coordinates that
are used for raster graphics for
display of the information.
And in this coordinate system,
we have a grid going
from (0,0) to whatever
our screen resolution is.
In this case, since we go from (0,0) we
go to our horizontal resolution minus 1,
vertical resolution minus.
That's one.
If our screen resolution was 100, 100,
we'd be going from (0,0) to (99,99).
And the pixels are located
on this grid intersections.
And so, you have a integer coordinate for
each pixel location.
Which is useful when you're actually
displaying an image using these pixels.
You want to be able to locate
each one of these pixels and so
there is a canvas to screen transformation
that happens, so we're going to define
our coordinate system going from some left
bottom point to some right top point.
And then we're going to plot
using those coordinates, and
those coordinates are going to be
converted to the corresponding
pixel locations on our display screen.
And those pixel locations are going to be
defined some place on the display screen,
starting with (x,y) and
going to the point (x+w-1).
And then y + the height in pixels- one.
So, this coordinate system
happens automatically, and
you can define these
coordinates to be anything.
And you can define these coordinates to
be any location on the screen, and so
your 2D graphics that you're
plotting on your canvas
can be automatically resized and
repositioned anywhere on the screen
just by controlling this canvas
to screen transformation.
You can also work directly in
screen coordinates by setting
up a canvas to screen transformation
that uses canvas coordinates that
match up with your screen coordinates.
In this case, you're just setting your
left edge and your bottom edge to x and y.
And your right edge and your top edge
to x and y + the width minus- 1 and
the height- 1.
And in this case you can specify the
coordinates of your primitives and vector
graphics using the same coordinates of the
pixels that they will be translated to.
I don't recommend doing this because when
you are working in screen coordinates
you are not going to know what your
output screen display might be.
It could be a cell phone it could be a
television it could be a watch It could be
a video wall, and all of those
will have different resolutions.
And you want to make sure that
your two-dimensional graphics is
properly displayed.
It's not too small or too large,
when it's displayed on different devices.
So it's better to work in some canvas
coordinates that's convenient for you.
And let the canvas to
screen transformation,
worry about converting it to
the corresponding pixels.
So what have we learned?
We've learned that vector graphics
is used to describe shapes and that
raster graphics are what we use to display
those shapes using a table of pixels.
And that we can set up coordinates that
are convenient for us to plot in a canvas,
and those coordinates are different
from the raster coordinates
that we used to display the canvas.
And we can set up
canvases within a canvas,
which allows us to divide up the screen
in ways that make it more convenient for
us to Set up a two dimensional
visualization display.
[MUSIC]

