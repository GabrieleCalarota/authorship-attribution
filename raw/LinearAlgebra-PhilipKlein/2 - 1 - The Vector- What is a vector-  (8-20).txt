
Complex numbers are so convenient for 
applying geometric transformations like 
rotations, scaling and translation in two dimensions, that you kind of like 
find something similar that works in 
higher dimensions. 
For example, three dimensions. 
Hamilton thought a lot about this 
problem. 
Hamilton was kind of a prodigy, he 
learned Latin, Greek, and Hebrew by five. 
And by ten he'd learned a total of 12 
languages including Persian, Arabic, 
Hindustani, and Sanskrit. 
Now, he'd been puzzling over the issue of 
how to go beyond two dimensions, using 
something like complex numbers for a long 
time. 
When inspiration hit him, and he came up 
with these equations. 
Unfortunately, the time he came up with 
these equations, he was on a walk with 
his wife. 
And he was so taken with the idea, he, he 
wrote, wrote down the equations in, the 
most convenient place. 
Which was the stone bridge he happened to 
be passing. 
For this act of vandalism, in fact, 
there's a plaque on the bridge 
commemorating it. 
Now, as you can tell from this quote, 
Hamilton was not a ma, a modest guy. 
He thought this was the solution. 
And it is very convenient, the, the 
numbers that you get in this way are 
called quaternions, and they're still 
used today. 
But there's another concept that's used 
even more frequently and that's due to 
Gibbs. 
Gibbs was a Yale man, started at Yale at 
age 15 and eventually became a professor 
there. 
He had an idea Vector analysis, that 
displaced quaternions for a lot of 
applications. 
Now he didn't publish his notes for a 
long time. 
Finally, he published them 20 years 
later. 
And he wasn't a complete hit. 
There were those who still believed in 
quaternions. 
For example Peter Guthrie Tait who was a 
supporter of quaternions, but even though 
quaternions are still used today vectors 
are used much more. 
So what's a vector? 
This is what you might think is a vector. 
A list of numbers in this case four 
numbers, this is called a 4-vector over 
the field of real numbers. 
We'll use Python's list sometimes to 
represent vectors using this notation and 
the set of all 4-vectors over the real 
numbers is written R4. 
This notation might remind you of the 
notation r to the d the set of functions 
from d to r. 
And in fact I want us to think about 
vectors as functions, so our 4-vector you 
might think of as a function from zero, 
one, two, three, to the real numbers. 
F to the d is the notation for the set of 
functions from zer, zero, through d minus 
1 to F. 
Here's another example, using the field 
of GF2. 
GF2 to the 5 is the set of all 5-element 
sequences made up of zeros and ones. 
So for example, zero, zero, zero, zero, 
zero. 
Here's another example. 
Let words be the set of all english 
words. 
Now in information retrieval a popular 
way of representing documents is to 
forget the structure of the document, 
forget the syntax. 
And just represent the document by a bag 
of words. 
That is, a mapping from the set of words 
to the numbers, specifying for each 
English word, if the document's in 
English, how many times that word occurs. 
So we're often going to use Python's 
dictionaries to represent functions. 
So, for example, this is the function 
that represents the vector we just talked 
about. 
What about representing a document that 
is a word bag, a function from the set of 
all English words to their real numbers? 
Well, this representation starts looking 
not so good, because they are a lot of 
English words and documents don't tend to 
include them all. 
We adopt the convention that, key value 
pairs where the value is zero can be 
omitted from the dictionary. 
So the document, the rain in Spain falls 
mainly on the plain, would be represented 
by, by this function. 
We haven't represented those words that 
don't occur in the document. 
A vector most of whose entries are zero 
is called a sparse vector. 
And if no more than k of those entries 
are nonzero, we say the vector is 
k-sparse. 
A k-sparse vector can be representing, 
represented using space proportional 
decay. 
For example, when we're using this bag of 
words model, we can represent all the 
documents in a corpus of documents. 
And the total space required is no more 
than the sum totals of the length of the 
document. 
Now, most signals acquired using physical 
sensors such as images or sound are not 
sparse coming in. 
But there are ways of achieving a sort of 
artificial sparsity by suppressing some 
of that signal. 
That's the idea of lossy compression, and 
we'll get to that later in the course. 
So what can we represent with vectors? 
We've already seen, we can represent 
documents. 
We can represent binary strings. 
And this will be useful in cryptographic 
applications. 
We can use a vector to represent a 
collection of attributes. 
For example the voting record of a 
senator, or the demogra, demographic 
record of a consumer, or characteristics 
of cancer cells. 
We can also use it to represent the state 
of a system. 
For example, a population of different 
countries in the world or the number of 
copies of a virus in a computer network. 
The state of a pseudorando, a 
pseudorandom number generator, or the state of a game called lights out. 
You can also use it to represent a 
probability distribution, 
which is, after all, a mapping from some 
set to the real numbers. 
Here's a way we can use it to represent 
an image. 
An image, you ordinarily think of an image 
as a grid of pixels and each pixel is 
represented by an intensity. 
Well, you can think of this as a mapping 
from the pixel coordinates to the real 
numbers. 
So, this image is represented by this 
function. 
Which we can interpret as a vector. 
We can also represent points in space. 
This is one of the original uses of 
vectors. 
So we'll be taking a closer look at this 
application. 
We saw that complex numbers can be 
represented by points on the plane. 
In such a way that we can carry out 
geometric transformations in a simple 
way. 
We're going to use vectors to represent 
points. 
And we'll see how these same operations 
can be represented using operations on 
vectors. 
Let's try this in Python. 
Let's start with a, a list of vectors 
represented as lists of length two. 
We can plot these using the same module 
complex numbers. 

