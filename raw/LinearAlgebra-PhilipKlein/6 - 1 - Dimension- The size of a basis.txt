The key fact for this week is that
all bases have the same size.
And we use this as the basis for answering
many of the questions that we have been
struggling with for quite a while.
We start with the Morphing Lemma.
The Morphing Lemma states that for
any vector space, big V,
spanned by a finite set S of vectors, for
an linearly independent set
B of vectors in big V,.
The cardinality of B is at
most the cardinality of S.
And before we prove it,
let's see what we can use it for.
We can prove that any basis for
the vector space
big-V is a smallest generating set for
that vector space big-V.
So how do we prove that?
Let B be a basis for big V.
So, certainly B is a generating set for
big V.
After all, it's a basis.
Let S be a smallest generating set for
big V.
By the Morphing Lemma, the cardinality of
B is no more than the cardinality of S.
So because S is a smallest generating set,
so is B.
And here's another consequence.
All bases for
a vector space big V have the same size.
Well, they're all smallest generating
sets so they have to have the same size.
So here's the lemma we're going to prove,
and the way we're going to prove it is.
We're going to start with a set of
generators, S, and modify it bit by bit,
injecting vectors of B one by one
while preserving the cardinality.
And how are we going to do that?
We're going to use the Exchange Lemma.
So, here's the Exchange Lemma.
We discussed the exchange
lemma a while back.
Suppose S is a set of vectors and
A is a subset of that set.
Now suppose there's a vector, Z,
in the span of S such that A together
with Z is a linearly independent set.
Then there's a vector in S and
not in A, the protective set,
such that the Span of S is
the same as the Span of the set
attained from S by adding z and
removing w.
Now for the proof of the Morphing Lemma.
We write the elements
of B as b1 through bn.
And we define s0 to be s.
We're going to prove by induction on k,
that there is a generating set,
s sub k of the vector space, big B,
that contains b1 through bk and
has the same cardinality as s.
In particular, taking k equal to n,
there was a generating set s n
of big b that contains all n of
the b vectors, and
has the same cardality as s itself.
Since s sub n contains
all n of the b vectors.
It has size at least n.
So the case k equals 0 is trivial.
We're not require, we're,
S0 is the same as S and
it's not required to have
any of the vectors in, in b.
For an induction step, we have to show
that we can get from sk minus 1 to sk.
And the way we do that is we
use the exchange formula.
We write a k is the set of
vectors b1 through bk minus 1.
And the vector that we
want to inject is bk.
Then a together with c is just
the set consisting of b1 through
bk which is a linearly independent
set because its a subset of the set
consisting of all the b vectors in
that set is linearly independent.
By the exchange limit, therefore, there's
a vector w in Sk minus 1 that's not in ak
such that the span of the set obtained
from Sk minus 1 by adding bk and
taking away w, is the same as Sk minus 1.
So we just define Sk to
be Sk minus 1 together
with the vector bk and
not including the vector w.
So this shows that we can go from
a set Sk minus 1 to a set Sk.
They span the same vector space,
they have the same cardinality, but
Sk has one more of our basis vectors.
That completes the induction step.
Now notice that this proof
is actually an algorithm.
It tells you how to go from S0 to S1,
to S2, to S3, and finally to S F.
Now here's an illustration of
the process applied to graphs.
So our basis for
a graph is a spanning force.
Here's one spanning force and
we're going to show that we can use
the exchange lemma iteratively go
from this spanning force to this one.
By doing one change at a time.
Exchange lemma inserts one edge,
and removes another.
So, start by inserting this edge.
Well, we have to take one out.
So we can take this one out,
while still preserving the property
that this is a spanning forest.
We're not losing anything in spanning,
and we're preserving cardinality.
So let's make that exchange.
Now we have to find an, an, now we're one
step closer to the target spanning forest.
Now we're going to insert this edge.
Now we have to take one out
to preserve cardinality.
Let's take out this one.
Putting in this one and taking out this
one will preserve the cardinality and
preserve the property that
this forest is spanning.
Let's do that.
Now we're going to insert this edge.
We have to take one edge out.
We'll take this edge out.
Let's do that.
And finally we've gotten to the point
where our spanning forest is the target.
So we've transformed from this
spanning forest to this one
using exchange operations.

