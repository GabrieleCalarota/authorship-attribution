[SOUND] Welcome to lecture ten,
clustering graphs and network data.
In this lecture, we are going to first
introduce basic concepts of graphs and
of network clustering.
We'll introduce graphs and
networks and their representations.
We'll introduce typical
evaluation measures,
discuss the approaches for
graph clustering.
Then we'll focus on
spectral clustering and
a scan, algorithm of density
based clustering of networks.
First, we are going to discuss graph and
network clustering, some basic concepts.
First, we know most real-world
data are inter-connected,
forming gigantic networks or graphs.
In among all kinds of networks,
we can categorize them into homogeneous
networks versus heterogeneous networks.
Homogeneous networks are those whose
vertices and edges have only one type.
For example, for
web search engines, we look at
click-through graphs or web page graphs.
They are of one type.
For social networks,
friendship networks, co-author networks,
they are also one type,
vertices and edges.
For heterogeneous networks, vertices and
edges are of multiple types.
For example, just look at two-typed graph,
for example,
customers and products, they could be
linked together, authors and conference,
they could be link, linked together.
Of course, authors and
authors also can be linked together.
But essentially,
you can see is two typed graphs means
you only have two kinds of verticals.
For multiple typed graphs it simply says,
within a network you may have
multiple typed nodes and edges.
Just give you a simple example
like research networks.
A research network like dblp, you may have
authors, papers, venues and keywords.
They may interconnect to each other.
Like the authors may write papers
published in certain venues and
using certain keywords.
Similar things as medical networks,
you may have doctors,
patients, treatments,
drugs, all these things.
Freebase can contain
much more different to,
types of entities and they interact and
they link to each other.
So, we want to distinguish
some concepts like clustering,
graph partitioning and
community discovery.
Clustering, usually you try
to group objects into groups.
They can be hard, like a k-means, or
soft like EM, and
it can be complete or partial.
It can be balanced or skewed,
however, for graph partitioning,
most people mean it's hard partitioning,
hard grouping, and it's complete.
That means all these nodes and edges
in the graph is somehow partitioning to
different parts, different partitions,
and typically they are balanced.
They, you try to balance them,
instead we get a single-type graph.
For community discovery
usually can be partial,
means even some nodes you are not
including certain community is quite okay,
because we often interested in only
finding the densely connected components,
we are not interested in the cluster
assignment of every vertex.
Let's look at the major challenges for
graph clustering.
That means how to find good cuts.
They are very challenging because the
first thing is high competition or cost.
Many graph-cutting algorithms or
problems are computationally expensive.
You need to trade between efficiency,
scalability and the quality of clustering.
And also,
the graphs can be quite sophisticated.
It, it may involve weights,
involve cycles or sale cycles.
It could be very high dimensional since
one graph can have many vertices.
Okay.
If you think every vertex is a dimension,
the dimensionality of the matrix
actually is a number of vertices in
the graph, so this could be really big.
Another issue is sparsity.
Since a large graph is often very sparse,
that means
each vertex on average only connects to
a very small number of other vertices.
If you think about a complete,
connected means everybody
connects to everybody else.
In a large network,
usually, it's not the case.
To that extent, a similarity matrix,
from a very large sparse graph,
it can be a very sparse matrix.
So, we have to find efficient method
to solve all these problems or
challenging issues.
[MUSIC]

