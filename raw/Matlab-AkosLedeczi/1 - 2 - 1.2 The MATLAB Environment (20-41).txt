[MUSIC]
You should be able to find MATLAB icon
somewhere to click or double-click.
For example, it might be on
your Start menu in Windows or
your launchpad on a MacBook or
on it's dock.
Or it might be on your
desktop as in this case.
As a matter of fact there are three
icons on this MacBook desktop,
one for each of three versions of MATLAB
that have been installed on this computer.
You can see here R2014b,
R2014a and R2012b.
You double-click any one of them, say,
R2014b and MATLAB starts up.
And the MATLAB programming
environment window opens up,
this window is also called a desktop,
it's MATLAB's Desktop and
we'll be doing a lot of work on it.
The generic name for
desktop is graphical user interface or
using the initials as most programmers do.
We can call it a GUI, spelled G-U-I.
Like any decent GUI,
we can move it around.
Let's see here.
There you go.
Now we can change its shape and
size by dragging the edges of the corners.
Playing around that way.
I'm going to put it right where I like it.
There.
I'm using up the whole screen that way.
So, I've got as much space
as I possibly can get.
Inside this GUI, we see three subwindows.
The current folder over here on the left,
the Command Window on your right and
the Workspace.
And when I click in them,
they're label at the top lights up.
Meaning that I made
them the active window.
This arrangement with the current
folder on the left and
Workspace window on the right is
the default layout for R2014a and b.
The default is somewhat different for
earlier versions, which you might have.
A lot of these will include a fourth
window called the Command history window.
It'll probably be, be over at
the bottom right or the bottom left.
You can have that fourth window in
the R2014 a and b versions too.
It's just not visible
in the default layout.
We'll show you how to do
that in a little bit.
Also, the Windows default can be
a bit different form the version for
the Apple operating system.
These differences are small enough though,
that they're unlikely to
cause you any trouble.
So we'll just use one
version in this course,
2014b, which we're looking at right now.
That's the latest version available
as we're recording these lessons,
which you can see up here is
in the late fall of 2014.
Well, let's look at the Current Folder
over here on the left.
This is the place where MATLAB
saves programs into files.
And it's also the first place,
it'll look when it's looking for
files that hold programs that it needs.
We can change the Current Folder
to be another folder.
We can, for example,
move up into the enclosing folder,
which is called the parent by clicking
here on this tiny little folder icon.
It's got a little black
arrow pointing up on it or
we can go into an enclosing folder.
Let's see.
Where were we?
MATLAB, by clicking on that.
If you rather navigate using your
operating system's folder explorer,
you can get to that by clicking this
little icon here with the little green
arrow pointing down.
I'm going to do that.
And I'm going to navigate to a folder
where I'm storing files for this course.
Let's see.
Come over here in Tutorials.
So, I'll click Open and now you see
I'm in a different directory here.
Folder and directory are synonymous
names for the same thing.
And over here, right up here,
MATLAB provides an address bar,
shows you the current folder,
which is right here.
It's parent,
it's grandparent and so forth.
You can move to any of these
folders by clicking them.
But you can't go back down,
unless you come over here and then click.
And way over here at the far right,
you see this little teeny triangle.
You can click on that and
you can see recent places you've been.
You'll notice we were here at one point,
but I want to be here, so
I'm going to click there.
So that puts me back in the Tutorials
folder as you can see here.
And since this is Lesson One,
I want to go to lesson one.
So, I'm going to double-click that one.
Now we're in the folder called Lesson One,
which is a child of the parent tutorial.
Okay.
Now we know how to move around.
We're finally ready to type
our first MATLAB command.
To do that, we first click
somewhere in the Command Window.
If we click anywhere in the Command
Window, we'll see a little vertical bar.
It starts blinking on and
off just to the right of this
pair of greater than signs here.
That pair of greater than
signs is MATLAB's prompt.
Well, and what's a prompt?
Well, let's look it up in the textbook.
There.
We click on Glossary.
And we see the first definition in
the Glossary, that's abstract class.
That's an advanced concept that
comes toward the end of this book,
where we introduce the object-oriented
programming constructs in MATLAB.
Object-oriented programming is one
of those advanced concepts that we
mentioned that are beyond
the scope of this text.
So lets type prompt,
which is what we're looking for
into this little search window here and
then we'll click on prompt.
And there's our definition.
Prompt is a symbol or a symbols printed
by a program, MATLAB is an example.
To indicate that it's ready for
input from the user of the program.
MATLAB uses the prompt
greater than greater than.
I want you to notice something.
If we go down here we can
click here to find out where
this term was introduced in
the textbook and there it is.
And we see that it's right there where
the Command Window is first introduced.
Almost any textbook that talks about
the Command Window is going to start off
by talking about this prompt and
that's what we do in the textbook and
that's what we do in the course.
So let's get back to MATLAB.
Before we type our first
command right here,
you should know that if you ever
need to regain control from MATLAB,
because it's taken too
long to process a command.
You can type Ctrl+C.
That's done by holding down the Ctrl key,
which may just have C-T-R-L written on it.
And while you hold that key down,
hit the C key.
There.
I did it, but nothing much happened
other than going to a new line.
But I can tell you, when you have made
a mistake that causes MATAB to pour out
millions of numbers on the screen and
it seems to be going on forever,
well like this.
Suppose I type ran,
we will explain ran later.
1e7, we'll explain that a later.
I hit Return and oh, my goodness, so
the numbers are just pouring out
seems to be going on forever.
And so, I'm going to stop
this nonsense with Ctrl+C.
There, I hit Ctrl+C.
And stop MATLAB.
Ctrl+C is the all powerful
command that MATLAB obeys.
Also, if you need to close MATLAB down
completely, you can type quit, like this.
I'm not going to type quit so I'm going to
hit some Deletes here and get rid of it.
Or you can simply close MATLAB's
window by clicking in the x up here.
It's on the left in
the Apple operating system.
It's over on the right in
the Windows operating system.
But this is no time to quit.
Okay, the time has come for
our first command.
bbbI 'm going to clear
this screen using CLC.
And I'm ready to type a command.
So, get ready, this is it.
I'm going to type x = 1 + 2.
Now, I'm going to hit the Enter key.
Here we go.
[SOUND] There.
Well, maybe I built that
up a little bit too much.
But more is going on
here than meets the eye.
What MATLAB has done is create a variable,
giving it the name x,
calculated 1 plus 2 and
gotten the value 3.
Stored the 3 in x, and
printed x's brand new value in
the Command window for you to look at.
Every programming language
provides variables and
manages locations in the computer
memory to store their values.
In fact, the definition of a variable
in computer programming is simply
a location in memory that has a name and
a value.
Now, here's a little fancier
definition from the glossary.
A named location and
memory into which values can be stored.
Computer science definition as
opposed to mathematics definition.
Mathematics definition is
a little bit different,
but we're not interested in that here.
We're interested in computer
science definitions.
And let's look at another one.
We've just given this variable
a value with an assignment statement.
It's defined in computer
science like this.
Statement of the form
<variable> = <expression>.
That means assign the value of the
expression on the right side of the equal
sign to the variable
that's on the left side.
It kind of goes from right to left.
The form of an assignment statement
in MATLAB, and in almost all computer
languages for that matter, is the same as
it has been from the beginning in Fortran.
You type its name, then the equal sign,
then an expression.
And once the variable is assigned a value,
like 3 in this case,
it'll keep that value until you change it.
Okay.
Let's get back to the Command
window again.
When we told MATLAB to assign 3 to x,
x didn't exist.
That's no problem.
MATLAB created it right on the spot.
You don't have to have worry
about creating variables, and
that's one of the things that
makes MATLAB simple to use.
And one of the reasons Molar students
preferred it to Fortran, I'm pretty sure.
Fortran, like C, C++, Java, and
many so called compiled languages, require
a lot of setup work to create a variable.
With the sort of programs that
are typically written with these other
languages, they're good reasons for
requiring a lot of setup work.
But it's a lot easier to get a program
written if you can get along without it,
and with MATLAB, we can.
Okay, now, let's just type our variable's
name without assigning anything to it.
We type x and hit Enter.
This time, MATLAB tells us the value of x.
That's all it does.
Not so helpful now, we just saw it.
But very helpful if you've given 50
commands since you assigned a value
to x and
you don't know what that value is now.
Again, there's a bit more going
on than might be obvious here.
MATLAB has just searched its memory for
the variable named x.
Founded, checked its value,
discovered that it's three and then
printed the three in the command window.
Now let's ask it to look for y.
Y better, whoops.
Red type is never a good thing in MATLAB.
You know, I've been programming MATLAB for
20 years and
I still get a little sting when I
see one of these red error messages.
Anyway, MATLAB is telling
us that y doesn't exist.
It says, undefined function or variable y.
It says function or variable because
functions can have names like y or x2.
MATLAB thought maybe we were
trying to run a function here.
A function is simply an operation
that's invoked by giving its name.
You can look it up in the glossary.
There is no operation named y and
there's no variable named y either,
so MATLAB complained.
Not sure why MATLAB mentions
function before variable,
maybe it's because it's alphabetical.
Oh, and by the way, let's clear up any
confusion between the word command and
the word function.
They mean the same thing in MATLAB.
This documentation doesn't distinguish
between these two synonyms, but
it seems to use the word
function more often than command.
Okay.
The function y doesn't exist, but
here's an example of a function
that does exist, clear.
I want you to look over
here at the workspace, and
notice that x shows up in the workspace,
and its value is three.
I hit Enter, and it's gone.
In MATLAB, the word workspace simply means
the set of variables that we've created.
We just got rid of all our variables.
Just have one.
So the workspace is now empty.
Let's put x back there again,
this time with a different value.
There, we can see x and
its value is 7,000.
Let's look at x over here in
the Command window and yep, it's 7,000.
And notice that checking x's value
doesn't change anything in the workspace.
Let's try looking for y.
Mm, weknew it would be an error.
Making an error doesn't
change anything either.
Let's do something that
does change the workspace.
Let's say y equals x plus,
I don't know, 5.
So y is 7005.
And let's zebra equal y minus x.
You've got to add variables or
to change their values or
delete variables to change the work space.
You can delete them by clicking
the right button here on
the thing you want to delete.
Let's delete zebra.
It's gone now.
Mm, if you don't believe it, there,
but let's do br, zebra again.
I can repeat that command by just
hitting the up arrow key on my keyboard.
Until I get to that command,
then hit [SOUND] Return.
There it goes.
So I've given that command
again zebra's back.
And we can clear it [SOUND]
with the clear command.
This time, we give it the name zebra and
it just clears zebra.
It leaves everything else there.
Note that zebra is pink, see here.
Or is that purple?
MATLAB uses purplish pink to mean that the
name zebra is being given to the command
clear, instead of the value 5,
which the variable zebra had.
Clear is not removing the 5
from the variable zebra,
it's removing the variable
named zebra from the workspace.
And its value's lost with it, of course.
If that's confusing, forget it.
The reason for
the color is not that important.
I just thought you might want to know that
your eyes aren't playing tricks on you.
Okay, we've looked at the three
windows in the Desktop and
the address bar above them.
But there's also all that gray
stuff above that, up here.
This is where you find the so
called Tool Strips.
And the most important one is
the one on top by default.
It's called the home tool strip,
and here's its name.
You can get to the other two by
clicking them like this, but
we'll focus on the home
strip in this course.
We'll look at many of the tools
on this strip later but
we'll postpone that until
a couple lessons from now.
You can hide these tool strips if
you want to by clicking this little
tiny triangle with the line
above it over here on the right.
When you do that, the blue bar remains but
the tool strips disappear.
And the windows down here get bigger.
That's useful when you're working on a
small screen, but since we have a big one,
we're going to click that
triangle again and get them back.
You probably noticed a little white area
just to the left of the triangle that
we clicked.
This is the search bar.
And it works like the typical search bar.
You can click in that area, type words
into it, hit enter, and if Mat Lab has
the information about the words you typed,
it'll pop that information up.
For example, if we wanted to know
about the clear command we might type
clear command in here, let's do that.
[SOUND] And hit return.
And a window pops up
with the search results.
You can click on clear to
see what the command does.
Do that, you can see that there's
more than one way to call clear.
And there's examples over here,
you can click on these little links and
it'll show you examples.
In the meantime though,
let's talk about command history.
You remember I mentioned that to you
before you can type command history in
here if you want to see what it does.
And there is command history and
there is information there.
But I am going to talk to you about it,
and tell you how to do it.
I told you you can get the command
history window to show up if you want to.
Well here's how to do it.
Click anywhere in the command window.
Then click the up arrow on your keyboard.
There.
You'll remember I did this earlier
to redo a zebra assignment.
When you do that, you see a list of
previous commands that you've issued.
These little red marks, by these commands,
show that there was
an error on those commands.
Now if you want to repeat a command,
you just up arrow your way to it.
Let's say I want to
repeat y equals x plus 5.
There, I hit Enter and
I repeated the command.
It didn't accomplish much,
because y is still 7,005,
but I did show you how
to repeat a command.
What if we want to repeat a previous
command, but change it a bit?
Say, change x equals 1 plus
2 to x equals 3 plus 2.
Well let's just hit the up arrow.
And let's hit it until we get to
the command we want to change.
There, what we're going to do
is arrow over here to the three.
[SOUND] Hit enter.
And we see X equals three plus two.
X equals five.
This is very useful when you have a long
command that you want to alter slightly.
Finally, if you want the command history
to show up in a window on the desktop,
as is the default in the older
versions of MAT LAB,
just click the up arrow on the keyboard,
now.
And then go up here, with the mouse,
and click this little tiny down arrow.
Come down here and click Dock.
And there's the command
history window right there.
You can scroll up and down and
you can click on commands and execute
them over here in the command window.
I think I'll leave it there for
a while for old times sake.
Oh and
note when we hit the up arrow we put the x
equals 3 plus 2 command
in the command window.
Well I don't need to
do that command again.
Wouldn't hurt but I'll show you that
you can delete it without executing it.
Let's just click left, sweep over
it to highlight it and hit delete.
It's gone.
That can be important to know if you
accidentally put a long command there that
shouldn't be re-executed.
[MUSIC]
[APPLAUSE]

