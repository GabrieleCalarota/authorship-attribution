[MUSIC]
Remember, how we said that at any branch
of an if statement, we can have a block of
code that we executed by MATLAB if
the conditions are such and such?
Guess what?
That block of code can
contain if statements.
When it does, the outer and inner if
statements are called nested if-statements
and putting one if statement inside
another is called nesting for short.
Let's revisit our ultimate
question function.
It uses an if, else if,
else statement as you can see here.
Here's a version that uses two nested if,
else statements,
instead of one if, else,
if else statement.
It's similar to the previous version, but
now we have two separate if statements,
one nested inside the other.
Note how the indentation here makes
the nesting organization clear.
The second if statement, because it's
indented further than the first one seems
nested inside the first
one as it in fact is.
And note that each else keyword is aligned
with its corresponding if keyword.
MATLAB doesn't care about indenting,
but it helps the human reader a lot.
It makes your code more readable.
The MATLAB editor will actually indent
your code like this automatically as you
type it, but you should always check its
indenting to make sure that all statements
that correspond to the same block of
code line up properly with each other.
Here's yet, another version of the same
function with a second way of nesting
the two if statements.
This is now not so similar to the original
version with the single if, else, if else.
This still produces
exactly the same result.
The layout of nested if-statements is
more flexible in a single if, else,
if else statements, because it allows you
to combine conditions in multiple ways.
[MUSIC]
[APPLAUSE]

