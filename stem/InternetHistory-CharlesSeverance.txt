hello and welcom to internet histori , technolog , and secur .
i'm charl sever and i'll be your instructor for thi class .
so i alwai like to think about when i design a class like who should take thi class , and lot of class and variou thing ar differ level .
onlin , these mooc , some ar junior level class .
thi is realli kind of like a late high school , earli colleg class .
it's a survei class , and we're go to learn a bunch of thing .
and , who should take thi class ?
and the answer i think is absolut everyon .
we us thi internet , we touch thi internet , you're watch thi video over thi internet .
it's go to be a bigger and bigger part of our live as time goe by .
and we just should all know someth about it .
we don't have to be super programm , and believ me , even though thi is a technolog class , we're go to talk about technic thing , we're go to talk about packet and retransmiss and you'll be surpris at how much cool stuff we learn in thi class , but there's no math .
thi is not a math class .
there's no program .
you're not go to write ani code .
we're go to learn stuff and we're go to talk about that stuff .
and so it's realli to make you think .
it's realli to get to the point where you understand the internet well enough that you can talk about it and reason about it .
thi cours came about becaus i have some video and i realli believ that histori is , histori's kind of weird and lumpi .
at least the part of histori that i know and have been a part of .
when peopl do someth on pb and talk about the histori of the internet , or histori of technolog , thei tend to simplifi it .
it's just like thei turn into sound bite , and the real histori is kind of lumpi and the actual peopl who do the innov ar , ar sometim just curiou peopl .
thei're not sort of not necessarili success , thei're not necessarili wealthi , but thei're veri curiou .
so what i want to do in thi class is not try to compress it down to just a coupl of bullet point , but actual introduc you to peopl that have done thing .
and let you draw your own conclus .
let them , in their own word , describ what it is .
and give them <num> , <num> , or even <num> minut , to explain to you what it wa that thei did .
and then you can take , and then reflect on that .
and we'll do that togeth , how thi all , all work .
i alwai like to start talk about who i am , so you get to know who i am .
i have a particular teach style , as you will you will soon find out .
i am from the univers of michigan .
place is import .
while you'll be take , you'll be take thi all over the world , and that's wonder and i'm glad you're watch , i teach at the univers of michigan in a love build here on the north campu , call the north quad .
we call it quadwart as a joke .
it's , if you ever get to ann arbor , walk through the build , it's just absolut gorgeou .
and i teach thi materi in thi veri classroom that's actual <num> north quad .
and , you know , if you took thi class from me on campu , there i would be stand , you know , sai hi to you and talk .
i hope i'm a littl bigger now , i'm , i'm like thi big , i'm bigger now , i might , i might even be on a fullscreen , a big screen tv .
but i teach thi materi at the univers of michigan , where i'm a clinic associ professor .
the clinic mean that i'm focus more on teach and leadership than research .
actual teach and learn is my research .
i've written a bunch of book and i'm veri activ in our teach and in the develop of a new undergradu program in inform , a bachelor of scienc in inform that we're develop .
so , to give a littl histori .
like i mention , i have thi video collect of all these peopl .
and i got thi video collect becaus in <num> , right after the internet wa just get start , i want to tell peopl about it .
i mean , we in academia had known about it sinc the late 80s .
but i just want everyon to know .
i wa like thi internet is cool and it's a new wai of think and all these thing .
and so , i had friend that work in the cabl industri and me with my co host , richard wiggin , who you will see some of hi video as well .
we end up with a seri of televis show over a sever year period that were produc by cabl compani with the secret plan of promot cabl modem .
i mean we would sit and we would sit on the set and you can see on the set there is thi littl cabl modem .
now hopefulli your cabl modem is littl smaller and hopefulli your cabl modem is a littl more reliabl or your network connect is more reliabl .
and we would sit and we would go like and look how fast our network is becaus of thi awesom cabl modem .
so that on of the excus that the cabl compani made the show wa to featur cabl modem .
now the cabl modem wa bare work , and you can sometim watch the old video and see sweat pour off our head and that's becaus we did thing over and over and over .
and final the cabl modem would work , but you know now i think thing ar a littl more reliabl than thei were .
and so , we love thi notion of share , and in <num> , <num> , <num> , you know , and even <num> , <num> , the internet wa a small place and the peopl do , do all the innov and fool around and stuff were veri access .
so it appear we had a televis show .
it wasn't , you know , it wa in a million home .
it wa , it wa distribut around the countri for a while .
techtv came out and then that kind of ruin us .
but we had camera , and we would go get ahold of peopl .
meet them at a confer or someth and stick a camera in their face , and sai , i want to talk to you .
and so we've got , we've got , you know , tim berner lee and we'll meet tim later , and jame well , on of the found peopl in earli real audio .
and we would just ask these peopl question .
and then we'd ask them what thei thought , what the futur wa go to be like .
and so we'll meet a lot of peopl throughout the class , but i want to give you on person , that sort of , realli inspir me , and he's not somebodi that you would even know .
and so , here's jame well , of real audio .
the web is basic a silent movi .
now , voic ha been avail , audio ha been avail on the web , as download file for some point in time , but there's a real issu with , there's a problem with that .
if , for exampl , you have a five minut segment that you want to listen to , it take <num> minut for the <num> modem to download that segment .
that's befor you even know whether you want to listen to it or not .
mm hm .
so what if you could take that segment and in sai , <num> or <num> second , be listen to the real , the real audio on demand , at the place that you want to listen .
it allow the idea of what we call narrowcast .
that is , to take inform in a veri inexpens wai , and get it to veri specif point of interest and target .
anoth larg a user of , of real audio is educ .
you know , distanc learn , the abil to , to provid a learn environ over time and over space .
johnni green head toward the end zone .
touchdown .
i tell you , that's pretti neat .
and you can sens the excit even over a <num> modem and if you look you can see the littl light blink .
and that is actual the data that's be transfer back and forth .
thei just , it just amaz me how much inform thei can get over a <num> modem .
is , the qualiti of that i wa told is about like am radio .
is that , is that the best qualiti thei're ever go to see over that modem ?
no , as a matter of fact , the <num> releas which mr .
well talk about is now avail .
ha what thei claim to be approach cd qualiti .
so that wa jame well and it's realli quit excit .
he talk about , i mean , when he's talk , he's talk about a modem that wa <num> and send audio over a <num> modem and yet on of the first thought in peopl's mind at that moment wa how to teach with thi stuff and how we could teach peopl all around the world and educ is such a primal thing that we human do and so you , we take a look at thi internet and we go like , okai , that's a thing we're go to us for educ and of cours , iron , here we ar .
anoth thing that i do is i write a monthli column for ieee comput magazin call comput convers .
and some of the video that you will see ar part of ieee comput fund me to travel around and produc these video of internet and comput technolog luminari and thei've also gracious allow me to give you the copi of the articl and so you can read these articl as well .
and so it's i realli appreci their willing to let me share these with thi cours .
so my research area is teach and learn with technolog and so it's kind of iron .
and so as soon as i saw the jame well thing i'm think i need to build softwar that will do thi .
and so i had thi softwar and in <num> where i mean , we couldn't even send video at that point .
so i had thi , like , kind of scari pictur of me stare at you , in the upper left hand corner .
and then the slide would flip over here .
and it all ran over a <num> modem in <num> .
and i built thi softwar , it's call sync o matic .
it doesn't even work anymor .
but but it allow me in <num> to teach an entir class onlin .
and so i've been fascin do thi for a long time .
and , and i also in <num> , i switch job from michigan state univers to the univers of michigan .
and i rewrot my softwar us quicktim on appl , and that wa call clip board <num> .
it wa actual a pretti bold piec of softwar .
it had video by then .
it would record it , we could scribbl on the slide , i mean we're do thi right now .
but thi wa <num> , which is nearli <num> year ago now .
i tri to give it to appl .
have them make it part of their oper system .
but nobodi realli thought that , you know , onlin teach and learn , what , what the heck is that .
so it sort of didn't .
so i've been do thi for a long time .
and so we start out , i mean i wa on a televis program in the 90s .
i built thi softwar to do teach and learn .
more softwar to do teach and learn .
i step out and did the open sourc learn manag system call sakai that some of you mai have us .
i work on standard for interoper particularli a standard call im learn tool and interoper that should be come soon to a learn system near you .
and then , here we ar , right ?
we ar in coursera at the end of all thi stuff .
and so for me , thi is wonder right ?
thi ha realli been someth that i've been wish that i could do my whole life , is teach onlin .
and i've been build and make and fiddl around , and do all kind of thing , just to get so i could teach onlin .
so i'm honor that you're share thi class with me .
i'm a pretti open web <num> gui .
i kind of treat my whole life like a realiti show through some combin of twitter and youtub and you can see , see , silli video of me do variou thing .
i wrote , i'm just so arrog that i wrote a autobiographi of myself , at , at my young ag , call sakai free as in freedom , and that , that wa me fool around on the sakai project and it wa veri emot and veri awesom and veri innov and so i just wrote it down .
nobodi bui the book and you don't have to bui the book either .
i figur it's for histori .
somebodi later will bui it and wow , i'm glad thi gui wrote all thi stuff down .
you can see stuff of me on youtub , silli stuff of me .
you can see my world travel .
and i'm a big fan of karaok and there's some of my friend karaok .
i've never take pictur of myself karaok , i just pick take pictur of everyon els .
and so the last thing i'll leav you with is the ipad steer wheel mount and like rais your hand if you've seen thi befor .
thi is my own attempt at viral video .
i did it as part of a class i wa teach on how to make viral video , and it turn out to be moder viral .
interestingli i've made more monei off of thi viral video than i have off of my book .
so that just give you a sens of how thing ar valu in the modern time .
and so , i'll stop there and welcom you to the cours .
come up next we're go to have a lectur that sort of talk about the grade and other thing like that .
so , see you in a bit .
hello , welcom to the second half of the welcom lectur .
now i want to focu a littl bit more about the cours itself .
and so , so the materi is part of a cours that i teach at the univers of michigan call si <num> , which is network comput , storag , commun , and process .
i also have some of these materi , it's also got python in it .
it doesn't have ani python in thi class , there's no program .
so , it's realli just part of thi intro , intro technolog class that i teach at the univers of michigan .
it's sort of taught in the middl , i give student a break between the python program .
and so thi is a , a short messag from our , our lawyer .
and thi is on the certif or someth like thi is on the certif that basic sai thi is not a univers of michigan cours .
it doesn't count for credit at the univers of michigan .
it's a free cours and it's for you to learn .
it's not so much about credit .
and so , enough of that .
when i got involv in coursera , and i wasn't the earliest , but i wa on of the earli folk in coursera .
and what i want to creat wa like a freshman class , like an introductori class .
like a class where we all come togeth and kind of get to know each other and learn someth kind of fun and , and realli enjoi get start togeth .
and i think there ar other class in coursera that ar more sophomor , junior , and senior level cours .
but i want to be i want to be on earli , and have some write involv in it , explor the softwar .
i want peopl to take my cours and then go off and take other coursera cours as well as other cours .
'caus i think a big part of educ is get to know peopl and get social and , and understand how an environ work .
and , i have a long histori of open sourc softwar develop .
and on thing about open sourc softwar develop is you're suppos to be open to suggest , and other , and let other peopl other than me make decis about the cours .
and so , i encourag you to , you know , to contribut to the cours , to give me suggest , to tell me how i can improv the cours .
sometim i even explicitli ask you for help on exam question , or help to come up with better homework question , all kind of thing .
i realli like it when you take care of each other .
a big part of these larg class is that the learn becom more social .
you can help each other faster then i can help you .
commun teach assist , thei can help you , as well .
so , i tend to wait and let you gui solv your problem and help each other .
and then i sort of , sort of pat peopl on the back , and tell peopl that thei're , tell peopl if someth's wrong , i'll , i'll try to fix it .
but in gener , i realli want us to learn togeth .
so the the backbon of the cours is lectur .
record audio lectur , hei , like thi on .
i give you the lectur note in pdf , two format of pdf .
the print on is design if you're go to print these out on paper .
the slide ar smaller , and there's four per page , and thei don't us up as much color ink .
and i also give you the powerpoint , so that you can either modifi them , or some peopl us powerpoint to scribbl on .
and , you , the slide ar creativ common by attribut .
and so , you can us them and reus them in your own teach .
and that's why i give you powerpoint , so you can modifi them .
most of the video ar up on youtub .
you can point at them , i don't want you to put copi of my video up on youtub .
you're allow to download them .
some of the video ar copi , have copyright ieee materi in them .
so , you realli can't do anyth except us them in , for the purpos of thi class and for your own person us .
and thei belong to ieee , and thei remain copyright ieee .
of cours , you can us them in your own teach .
you know , that's , that's total fair , it's just the kei is not to republish the materi .
so , if you borrow my slide , thei're total re publish .
so , the class is , you know , eight , nine , ten week long with some exam .
the syllabu ha the , the detail .
i , i expect thi to be it's not like a three credit colleg class .
i expect three to four focus hour of your time per week , mayb five or two or more , two more hour or so , depend .
and i'm go to make it so that in the first two week we're not move so fast that peopl can't still join .
so i kind of give the assign a littl longer in the first coupl of week , and give peopl a bit of time to catch up .
but if you have peopl that you want to join the class , you've got to get them in earli .
and so , we'll shut down new enrol at some point .
and peopl won't be abl to join the class , and you know , mayb about three week in or someth .
and then off we go and we'll be a cohort .
a big part of the class is the discuss forum , and thi is both where you meet and find each other .
coursera class often have veri activ and great discuss in the forum .
you folk come from all over the world .
there ar thousand of peopl in the class , thousand of peopl activ .
and , and i realli get a great deal of joi interact with all of you .
and regardless of where you're come from , i think that's particularli fun .
on of the thing that i've taken to do , becaus i have a veri activ travel schedul as a faculti member here at the univers of michigan .
i do lot of speak engag about mooc and open sourc softwar and sakai and standard , and all the thing that i do , i get , i end up on a plane a lot .
so on of the thing i like to do is take a coupl hour out and announc to the student in the class , i'll announc to you that oh , hei , i'll be in barcelona , spain , for from , you know , <num> to noon on a saturdai morn .
and then peopl come by , and i've had these all over the world , new york , lo angel , michigan , north carolina , chicago , dc .
seoul korea , barcelona , i've had them all over the world , and usual somewher between <num> and <num> peopl show up , and it's great fun .
and so i would love , if i end up do offic hour , if you will show up at offic hour .
the wai that you earn your grade is through assess .
there ar question that stop in the middl of the video , thei do not count .
so it doesn't realli matter if you get them right or wrong .
there'll be on quiz to cover each week's worth of materi .
that will be worth ten point .
and the final exam , and the quizz you can take over , and over , and over again , and hopefulli your score goe up each time you take , you get to keep the last score , i think it's the last score .
the final exam is a littl differ , and i'll send note out about thi .
it's on attempt , you have <num> hour , but you have <num> hour within a two week period .
onc you start it , you have to finish it within <num> hour .
so you don't get to take it over and over and over again .
and there's three extra credit assign that ar peer grade for write , that ar <num> point each .
now you don't have to do the extra credit .
you'll see in a bit that the point ar base on the percentag of the point for the quiz plu the final exam .
so , peer grade is a wai for you to , if you like , to engag more deepli in the materi and engag more deepli in your fellow student .
the extra credit materi is peer grade .
but you don't have to do it .
your peer will determin your grade .
now the wai it work is the high on and the low on ar thrown out , so it's the middl on .
and so , if somebodi give you zero , unless everyon give you zero , you'll get the score , the middl score .
not the high nor the low , it's not an averag .
so , you get some low score , those low score ar basic thrown awai .
and so , you've got to write your submiss know that it's your fellow student that ar go to judg you .
i'm not go to come in with thousand of assign and regrad them if you disagre with the grade .
so you've got to write with your audienc in mind .
and so in the cours if you get , not includ the extra credit .
the extra credit is just ad on .
but basic the total for the assign plu the total for the exam , is how i'm go to calcul the cours percentag .
so i take the total you learn , earn on the assign , <num> a week .
the total on the exam , sai if the exam wa <num> .
so there's <num> assign time <num> , <num> .
and then so <num> time <num> and <num> , in thi case <num> , is the denomin .
and then we add to that on the numer , we add the extra credit .
so , if you don't do the extra credit at all you have up to <num> point , right ?
<num> point , <num> .
the extra credit , and you might not get a <num> on everi on of the extra credit .
but the extra credit is just extra credit , it's ad on .
and so , after i do thi calcul , i guess we can clear thi here .
after i do thi calcul right here , that percentag , which might be over <num> , if you've done extra credit assign .
if you're abov <num> , you're go to get a certif .
and if you're abov <num> , you get a certif with distinct .
now , if you realli want a certif , don't plan on get exactli <num> or <num> . <num> and then do a bunch of complain .
okai ?
thi is about learn , but if you want to get the certif , don't shoot for the low level .
or the same thing , if you end up with <num> . <num> , you know , don't , i , just earn the certif , get the point , don't let it be close , okai ?
so , <num> for a certif , <num> for a certif with distinct and there will be no individu regrad or point appeal , or if you think your peer ar complet confus and misgrad you .
just do the next assign , right ?
so , that's part of the reason that i made peer grade extra credit .
so , as i mention , you're suppos to help each other .
and you'll help each other a lot .
i mean , the question in the forum in on class get answer <num> hour a dai , <num> dai a week , in an averag of <num> minut .
and that's becaus often the peopl who know the answer to your question the best ar mayb in the time , same time zone as you ar , and take the class at exactli the same time you ar .
so , ask the question in the forum , the answer will often come in the forum .
and on the quizz if you have some confus , or you have some clarif that you need , talk about it , you know the peopl could just sit and take the quizz over and over eventu get <num> out of <num> .
so , we don't think of the quizz as highli sensit materi .
you tend not to just put all your quiz question and then your answer in the forum , that would be tacki .
but you know , just if somebodi ha a problem with question seven , and there's some confus , you know , don't worri about be highli sensit or secur about it .
sai , oh i'm have problem with question seven .
i think that c is the answer , but i don't quit understand why packet aren't also stream , or someth like that .
so , the quizz ar design often to have thought question .
and so , in the curios that goe around solv some of the quiz question , you can , can learn some .
plagiar is an import thing in thi cours .
the place where thi pop up is in the write part , the peer , the peer grade .
and my definit of plagiar is basic take materi verbatim .
without sort of re express it and past it in as if it were your own materi without attribut .
so you , you can put a littl quot in , but you gotta put it in quot , and sai blah blah blah blah blah , winston churchil , or whatev , okai ?
so it's , it's not plagiar to put someth in , it's plagiar to put someth then and claim it as though you wrote it .
the most common thing is peopl will start take paragraph from wikipedia and put them in , and we will mark them off .
we will mark half off , if there's a littl bit of plagiar , and if it's all plagiar , then you get <num> off .
now , there ar go to be five peopl grade thi .
and so you know on person might think it's plagiar , and if nobodi els doe then you know your grade won't be , your grade will reflect what the averag , or what the median person came up with , not what the low person came up with .
so , we also have an honor code in the class , the kei that thi realli ha to do with the final , you're not suppos to give nor get help on the final .
it's open book , it's open note , it's open network , you can look at the quizz , you can look at the the video , you can do anyth you want .
what you can't do is just give the question to somebodi els and ask for the answer from them , or have them take the test for you .
even on the quiz , you're suppos to pretti much do it yourself , but you can ask peopl for help if you need some help or clarif on the quiz question .
again , the quizz realli ar more about learn and the final exam is more about measur .
and like i said , if you get about <num> , you get a statement of accomplish .
there ar two level , on is normal and on with distinct .
as i mention , <num> and <num> , and the syllabu ha the exact detail on how mani point , given the total number of point .
and that's a statement of accomplish .
and thi is at no charg .
there is no charg for the statement of accomplish .
if you finish , you get thi absolut at no charg .
if , on the other hand , you want someth a littl nicer , coursera ha a ident verif mechan .
so , part of the problem with the statement of accomplish is it sai we did not verifi your ident at the veri bottom .
it's like that lawyer stuff at the veri begin .
and so thi small charg for the signatur track is becaus thei're go to put some effort into , you have to kind of , you know , show them your passport on a camera , and then type , thei do thing to figur out who you ar , and thei check to make sure it's you everi time a quiz is be taken .
and there's a small charg for thi , it is option , option , option .
do not feel you need to do thi .
if you want it , great .
and if you're in a situat where you can't financi afford it , there's also scholarship avail and you can appli for those at the coursera site .
now , thi is a wai for those who can easili afford it , who realli don't care and have monei to spend , it's a wai of sai thank you .
i don't exactli how it's go to work .
but somedai , thei tell me , i might get a tini bit of the monei from thi .
i mean , most of it's go to go to coursera , becaus thei're the on build all of the server and stuff that we're us for thi , which is total awesom .
and some of it goe to univers of michigan .
and some goe to littl old me at some point , right .
and so , so who know , if you bui on of these thing , i might come and bui you a cup of coffe in offic hour in peru somedai .
if i get to peru .
but don't feel ani pressur .
i mean it's , it's no big deal .
i mean thi is aim at be free .
but if you want , you can do thi .
so i love the fact that it's option .
that's what's beauti about the signatur track .
i don't do anyth differ for signatur track .
it's not like we have special signatur track parti where we all hang out , like , oh , welcom to the signatur track parti .
no , it's the same as everybodi els .
and it's realli option , and it's , it give you a littl stronger statement that sai we have verifi the identifi of thi person and the name on thi certif is thi actual person .
becaus you could sign up and call yourself batman .
and that would not be good .
but thei wouldn't give you a signatur track name batman , unless you realli were the batman .
okai , so i hope you get that , option , option , option , it's nice , but option .
so , given that there's alwai thousand of student in the class , it's not realli practic to send me direct email .
you mai find that you'll catch , there's , like , if you go to drchuck . com , you mai actual catch me onlin , where you can talk to me right interact .
the most reliabl wai to catch me is on twitter .
if you tweet someth with drchuck in it , usual , unless i'm sit in a meet , like right now , within five to ten minut i will see it on thi .
so i watch my twitter veri carefulli , where i , no matter where i'm at , all around the world .
and if you mention dr .
chuck , i see it .
i want you to contact me if someth's wrong , right ?
if , if question , so what usual happen is i make a quiz and question three ha no right answer .
and you all figur it out realli fast , and there's like in the forum , there's like thi , oh , the answer to question three is wrong .
well , somebodi need to tell me question three is wrong , so tweet like , hei dr .
chuck , the forum ar on fire , question three is wrong .
and i go , whoa , and i go fix it and it's all calm up .
so when thing ar broken in the cours that i can fix , i want to know about it right awai .
and so that's what is twitter is good for .
not everyon ha to be us twitter , but somebodi ha to notic it and let me know .
so , as i mention , in the first coupl week we're go to have the registr open , but then we're go to close it down .
you can watch the first lectur or two and kind of see if you think the cours is go to be worthwhil .
and if you think it's cool , then bring peopl .
that's peopl to help you work through it .
and so i've tri to make it so that you can join in the first few week and still get all the credit , okai ?
so bring your friend , but bring them earli .
and if thei're too late , then thei have to regist for a later on .
we also have a facebook group for the class .
it's total option , i didn't make it .
i don't run it , i post to it everi onc in a awhil .
i don't quit know why peopl do facebook group , but thei do and there's on for thi cours .
and so , we have some materi that i us in thi cours that i us with permiss .
some of the paper that i give you come from ieee comput magazin .
and i have permiss to us them within thi class that , doesn't mean that you have permiss to republish them , but you're , you're allow to us them for the class .
richard wiggin , my co host for the televis show , ha some materi that i us in class and i have hi permiss .
and the folk at open michigan , open . umich . edu , have help me in the copyright clearanc of my slide and other cours materi , which i think is realli good .
so , thi for me , even though we've done it a coupl of time now , is i'm still curiou .
i'm still veri curiou of thi form , and so you , pleas help me , you know , give me suggest , tell me how to improv thi class .
you know , you can sai it's terribl .
that's not too help , but if you can sai , you know , thi would work better if , and sometim i'll just send you question and sai hei , how do you think i could improv x , y , or z ?
and so i , i don't think thi class is ever at the point where it doe not need ani more improv .
i'm a big fan of open sourc softwar and open educ resourc .
my slide ar creativ common by attribut , and i give them to you in powerpoint format , so you can edit them .
you can us on of them , you can us all of them .
i realli want to help you , if you're possibl a teacher , to be abl to reteach thi materi , or us part of thi materi .
so , i'd be honor if you reus my materi .
the cours video ar avail , thei're avail on youtub , so you can point to them .
i'll give you later a youtub , when the class finish , i'll give you a youtub channel that ha them all togeth bundl up nice .
and if you look you'll see as each lectur come up , there's a youtub link for it .
and it's a violat of coursera term to take ani of the video , like the ieee video or even my lectur video .
anyth that you get from ani of the coursera class , you're download them for your own person us .
you're not suppos to like , make your own youtub channel from my , or anyon els's coursera cours .
so , if you if we find that you're , like , try to make youtub channel out of coursera cours , then you kind of get in some troubl .
so , i do want you to reus them , right .
i want you to , you know , us my stuff in your own class , but i don't want you to sort of publish your own youtub channel that is your version of my class .
and so , so with that , let's go ahead and get start .
and welcom to internet histori , technolog and secur .
and up next , we have our first real live lectur .
thank .
so , welcom to our lectur on pubic kei encrypt where we're go to go back to confidenti .
and so , so here we go .
if , if you recal we've been have these two topic that have been our theme throughout .
just some .
oh sorri , i'm start to , talk in rout <num> .
let's translat thi back to non rout <num> .
the terminolog , the two kind of theme we've been follow over the last coupl of lectur and thi lectur , ar confidenti and integr .
and confidenti is hide , right , shield inform .
not leak inform to peopl that you don't want to show it to .
and integr is make sure that you know who you're deal with .
and then the previou lectur , we realli talk about kind of real light approach wai of ensur confidenti with thing like caesar cipher .
and then integr us a simpl messag digest , that , base on a share secret .
so , the problem with all of those thing that we just saw , is that thei requir a share secret .
and the problem in the world of the internet is , it's just realli difficult .
for everi on of us befor we establish well , befor we can make ani purchas or whatev at amazon , that we somehow have to drive to amazon headquart .
and , and get a share secret from amazon .
open up a book and sai okai , hi chuck , i see who you ar and here's our share secret , and you walk awai .
and as long as you carri that share secret while you go .
and if the share secret is lost , it's difficult to review , revok .
so , as the internet and , and frankli in gener , as secur need to be abl to work at arm length .
mean that you couldn't alwai bring everybodi togeth and hand out share secret .
and then have them go to the far reach of the world and commun .
public kei encrypt wa identifi , as an extrem eleg solut to thi problem .
and so it wa propos by diffi and hellman in <num> .
and it reli on two kei .
it's asymmetr , mean we're not us the same kei to encrypt as decrypt , the wai we were in the previou lectur .
these ar asymmetr .
there is a public kei , which is actual , doe not need ani protect whatsoev , and a privat kei .
and the idea is thei're gener insid of a comput .
you gener the public kei and the privat kei .
you send out the public kei , the public is us to do the encrypt .
and then privat kei is us to do the decrypt .
and thei're relat mathemat , in a wai that's well understood , but difficult to comput for a kei length that's larg enough .
so , there's a public kei and a privat kei .
so , i'd like you to take a look at thi littl video up on youtub of diffi , hellman , and merkl , the , the inventor of thi .
and i think it's a great video .
i would love it if thi were my video , but i didn't produc thi video .
so so take a quick look .
so , on of the thing about thi public privat kei encrypt is now that we know about it , it's like wow , it's pretti obviou .
and frankli caesar and the german and everybodi could have us thi idea .
thei just hadn't thought of it yet .
and the other thing that's kind of interest if you look into the stori of thi , is that the first reaction peopl got when thei start think about thi is like it can't be thi easi .
now , it's sort of both easi and hard but , but the concept is real eleg and realli beauti , and that is that we have thi public kei .
so , the public kei is part of a public privat pair , and it's us to do the encrypt .
the beauti , beauti is it's comput and difficult to recov that privat kei from the public kei and the encrypt text .
a kei thing is , is it's not imposs .
and that's kind of on of the interest philosophi of secur that , that we start at the veri begin in talk about secur .
the perfect secur is kind of imposs to achiev , unless you simpli don't send anyth .
and so , public privat kei , asymmetr kei is , is well understood as to how you would break it .
everyon know how to break it .
the problem is , is that comput aren't fast enough to break it , and when comput get faster we'll just make the kei bigger .
so , the mathemat of thi make it impract to break .
i mean liter impract to break .
now i think we can safe assum that , govern probabl have enough comput to crack these onc in a great while .
i mean , thei're not crack everi transact between you and target when you want to bui someth .
but if thei realli have to , thei can record the encrypt transmiss .
and if thei realli had to and took a long time , i have no idea how long it would be , thei can break it .
so , that's actual kind of a neat wai to think about thi .
by reveal it all , frankli , ani comput scientist could make a name for them their whole life if thei prove that there wa someth wrong with thi .
by reveal the algorithm , reveal the crack techniqu , if someon can come up with a better crack techniqu , it is like , fame and glori forev .
which mean that , we're pretti sure that there's no good wai to crack thi other than the brute forc mechan , that requir a larg amount of comput .
so , if you're go to us public privat kei encrypt , you have to gener a pair .
and it start by charg , choos two realli larg random number , with hundr if not thousand of digit that ar prime .
see you kind of choos a , choos a random number realli big .
and then you kind of look around for a nearbi prime number and you choos two of those .
and then you multipli them , okai ?
get an even larger number .
and then , through some step , through some calcul , you comput the public and the privat kei from that larg number .
the essenc of thi , ar those two prime number .
prime number of cours ar number that you onli divid by themselv and on which mean thei have no factor .
which mean thei're kind of like look for a needl in a haystack .
and so the public and privat kei is realli base on these two prime number .
if you could figur out what the prime number were , you'd be okai .
but the comput difficulti is find the prime number that ar extrem larg , and find the right prime number that ar extrem larg .
so , it's easi to do some calcul in on direct , but not in other .
so , for exampl , what ar the factor of <num> , <num> , <num> ?
quick .
but if i simpli ask you what do you multipli <num> , <num> to get that <num> million number .
that's easi .
you do a divis .
and it turn out that you can find out <num> realli easi , right ?
so , if i just sai what ar these two number ?
that's hard .
if i sai given thi number , what's the other number ?
that's trivial .
so , you can think of thi as , the decrypt is where the receiv of the messag know kind of half of the calcul .
where as the world doesn't know either half of it .
doesn't know the calcul , so ha to figur out both halv .
wherea the receiv onli ha to figur out on half .
and so that's how ask the question of what ar the factor , versu given on , what's the other .
so it , it take a problem that's easi , make it computation nearli imposs .
but again , not imposs , just nearli imposs .
okai , so here's the notion .
so , you're about to type your visa card into a credit card into like amazon's web page .
and so what happen is , is that amazon will ha a public kei and a privat kei .
that thei retain .
and thei will send you the public kei across a medium , the internet .
thei're go to send thi to you somehow .
but the bad gui , ev , or charli or whoever thei ar .
the bad gui .
thi is alic and bob .
ev and charli ar alwai look .
so , ev and charli could intercept it .
and you assum that thei can .
thi is the kei .
don't , don't try to pretend thei can't .
even though it's veri difficult for them to do it .
but you assum thei can .
so , the public kei come across .
it is simpli sent to you as part of the begin of establish a sur , secur connect .
and the bad gui see it too , or girl .
thei see it too .
so , the public kei come to you .
and then what you do , is you encrypt , us that public kei .
and creat some encrypt text , cipher text .
which you then send back across the danger , where ev and charli ar watch .
and it come across , thei intercept the encrypt text .
thei've intercept the public kei .
and thei , thei can try as hard as thei like with supercomput to deriv thi .
and frankli , like i said , if thei had month and month and month and realli fast comput , thei could .
okai , but becaus amazon is in sole possess of privat kei and it never left amazon server .
it is a veri simpl matter for amazon to decrypt and get your plain text .
it happen , veri quickli .
just like if you kind of know half of the prime number calcul .
figur out the other prime number is realli , realli easi .
okai , so , so again , these peopl see all of thi inform , and yet it's computation virtual imposs , for all practic purpos , to do it .
and so it's beauti , becaus there wa no need to protect the public kei .
we never had to get in the same room , and awai it goe .
so you just , amazon just blast out it's public kei and we encrypt us amazon's public kei .
we can't decrypt it but we don't need to decrypt it .
all we need to do is send it to amazon and voila , it work .
so , the beauti thing is the public kei can be distribut , thei can be intercept and it doe not matter .
so , with thi notion of public privat kei encrypt in gener , we made a chang to http .
a layer , a mini layer is in the data model .
if you rememb wai back , perhap you've even forgotten about the layer model .
rememb that layer model ?
applic , transport , internet .
rememb thi is sort of on comput and thi is the other comput .
these ar their router , router .
these ar the hop .
there's like <num> of these .
rememb ?
rememb all thi ?
so , it come back now to haunt us .
okai .
so , if you recal , just sort of to , to briefli rememb that , the transport layer is respons for the retransmiss .
it give us the appear of a reliabl , order connect between the , our applic and the far applic .
http is on of the applic protocol .
and so there is a littl mini layer that , that is layer in , sort of seamlessli on top of the transport layer .
that basic take plain text and encrypt it and turn it into ciphertext .
and then ciphertext on the wai out turn it back into plain text .
okai .
and so what happen is , is these applic just send plain text .
and out come plain text .
and there's a littl bit of extra glue in the middl here , that's sort of a secur transport , secur socket layer .
thi is , thi thing here is often call a socket , oop , sock .
it'd be good if i could spell socket .
so , thi is a socket , and then the red part is a secur socket .
so , the applic kind of don't encrypt the data at all .
there's a librari that encrypt it .
and the other thing is , is that all the rest of the internet , the internet , the link layer , the router noth , the ethernet , the fiber .
thei don't even know the differ between encrypt text or non encrypt text , becaus the encrypt text wander around fulli encrypt .
address ar not encrypt .
and so it stai encrypt all the wai through the entir network .
it actual , if you then think about the fact that , thi is the moment that it leav your comput .
the onli thing , so the plain text come in here , get encrypt here , encrypt come down .
the onli thing that leav your comput is encrypt text .
and it make it all the wai across .
the encrypt text goe into amazon , so thi is amazon .
thi is you .
the encrypt text find it wai through all these thing .
and it come in encrypt .
and it actual doesn't get encrypt , until it's sort of right at the point where amazon's web server that's go to actual charg your credit card .
so , thi is actual beautifulli eleg .
in that , the rest of the network is blissfulli unawar , that ani encrypt is happen .
it's just move the data .
so , thi did not requir ani chang .
again the beauti of the layer of architectur .
did not requir ani chang , sort of below the transport layer .
and as a matter of fact , all of the sequenc and re transmiss that happen in the tcp layer .
that happen with the encrypt stuff too becaus it's just encrypt .
it's just text .
it's gibberish text , it's not the origin visa card number that you're send .
you're send <num> and out come , you know , wxy , the wxy just goe .
it's re transmit .
all thi crap just work , it's like , beauti .
it's a beauti thing .
it's absolut a beauti thing .
then it's just like thi mini layer kind of between , it's like the top slice of the transport layer .
that's how i'm draw it right here .
it's like thi littl kind of top extra littl thing , that sai you know what , we're go to transport , actual help me out and give me some encrypt while we're at it .
and there's all kind of cool stuff that goe back and forth .
the public and privat kei get exchang .
that's all kind of stuff we don't worri about .
we just send data and get data back .
pretti cool , huh ?
so , thi realli solv the problem of the fact that we basic should assum , that everyth between our comput and the destin comput .
thi is you .
thi is amazon , right ?
everyth here , thi is all danger .
there's some like , terrifyingli scari individu , that's watch everyth , do packet snif .
thi might be ev the eavesdropp .
thi look like a littl he , he look pretti tough .
right .
and , and so that even the wireless , right ?
thi is the wifi connect .
the wifi is danger .
now , the realiti is , is these thing aren't all that danger .
the wifi's probabl the weakest link of these whole thing .
but we have to assum that it's danger , right ?
we , we want to assum that the onli thing that's safe , and unfortun if you put virus in your comput then thei can get at the plain text .
if amazon lose it data somehow , then thei get the plain text , right ?
but , but basic , you know , we want to distrust all of thi , okai ?
so , thi concept is call transport layer secur .
also call ssl .
also known as http .
http for secur , and it's kind of like between the tcp layer and the applic layer .
or the top half of the tcp layer is the wai i like to think about it .
it's becaus it's base on public privat kei encrypt it's , difficult but not imposs .
normal peopl don't have the kind of equip to break it , even govern , if thei can break it , i don't know i'm not an expert .
i don't hang out with the govern , so i don't realli know but , assum that if thei realli put their mind to it , in a veri narrow situat .
if you becom realli interest , thei will find your credit card .
probabl there's easier wai to get your credit card , than by decrypt your text .
so , it's hard to decrypt .
and as i mention , becaus of the layer architectur , the tcp layer , ip and link layer ar complet unawar .
so , you'll , you , you see thi in the form of url that start with http .
right , thei start with http .
dub dub dub facebook . com versu http .
and there wa a time a few year back where you know , thei were , it us to be a littl more expens insid of the server to do http .
it still is .
and so some site would try to do some of their activ without us secur protocol .
and other would us us , us non secur and secur and then flip you back and forth .
like if you're type your password .
the problem wa is that there is actual still sensit data be sent .
even across the insecur .
and there wa a , quit a famou , thing where peopl could instal a firefox plug in .
and watch facebook , non secur facebook thing go back and forth across , like , a starbuck .
and it would just show you all the peopl's facebook account .
and you could log in as them and post as them .
and so you've seen a situat where compani ar just start to us http for everyth .
you , as a user , have to be awar to see if you're type anyth sensit , never type it into a url that doesn't sai http .
'kai ?
never do that .
you're type in a password , a credit card number , ani kind of person inform .
make sure you're do http , and make sure that , that you know what it is .
we'll talk about that in a bit , we'll talk a littl bit more about that in a bit .
so , so if we take a look and we think about where the bad gui ar it , the bad gui ar kind of everyth .
and thi secur tcp run , is the on part of the layer of our architectur that run from within your laptop to within the server .
and so , then , if we kind of assum the worst .
the , the , the backbon is pretti safe .
the wifi is probabl the most danger .
all right , but when we do secur system tcp , secur system to system tcp .
we ar do the encrypt , right here insid your comput befor it leav .
and we're onli do the encrypt right when it come back in the comput .
so , the decrypt and encrypt ar happen insid of amazon's comput and insid your comput .
and noth els .
so , secur socket is pretti good .
now the place where you're still in danger , is there might be a viru that's watch your keystrok , right .
thi is why viru check is so import .
becaus at some point , you're type it into your comput and the , and the greatest danger you have to lose your data is realli two thing .
on , that you've got a viru .
or b , somebodi ha redirect you not to talk to evil amazon instead of amazon .
and that's what we'll talk about in the next lectur .
how to know , how do these browser realli know thei're talk to the real amazon ?
and that is not confidenti .
confidenti is stop the bad gui from see what you're send .
as thei're eavesdrop .
ev is eavesdrop .
okai ?
now , the next thing is the question of is thi the real amazon , or is thi a fake amazon ?
so , we'll talk about that next .
so , now we have a wai , to ensur the confidenti us secur socket layer , an public privat kei encrypt .
an the onli question now remain , is , who ar we talk to ?
and ar we talk to that , server that we think we're talk to ?
ar we realli talk , to amazon ?
ar we realli talk to coursera ?
how do we know ?
now , you'll notic if you take a look at the top of your browser , perhap right now , even , you can take a look at the top of your browser .
and usual when it's indic that you have a secur connect , you can click on thi and see some inform .
it's call the certif inform .
okai ?
and so , http ha the notion of a public kei .
we retriev the public kei when we make the connect .
but there ar two kind of kei .
there ar public kei that ar just made up that ar sent to us , and then there ar public kei that ar sign and valid by a third parti certif author .
so , thi is a coursera , and it is certifi by godaddi certif author .
so , it's not just that we're get the certif from coursera , we're actual get the certif sign by godaddi .
that godaddi ha , ha , ha check the id of coursera and said , okai , you must be the ceo of coursera or i'm not go give you thi sign , privat kei .
so , it's a process to get privat kei sign and it's a wai to make sure you ar talk to who you think you're talk to .
so , thi is call digit certif , also known as sort of sign privat kei .
now if we go back and we talk about the integr .
right ?
we want to know who we're talk about , and so we have thi notion of a signatur .
a signatur's a wai that you know that you're talk to who you're talk to .
so , for exampl , like if a gui come to your offic and sai , hi , i'm doctor chuck , got like a beard and some white hair .
you can sai , hei , if you're realli doctor chuck , show me your tattoo .
and now you know , that veri few peopl will look like thi and have thi tattoo .
right ?
so , thi is my privat kei and thi is my signatur of my privat kei .
thi is like my messag digest so , so peopl won't have thi tattoo if thei claim to be doctor chuck .
so , thi is doctor chuck , thi is my messag digest .
so , there's a differ between a privat kei and a privat kei that's been certifi by on of these design third parti .
these design third parti ar call certif author .
now you could sai , i'm a certif author , well some certif author ar more better certif author than other , okai .
so , thei're a trust third parti .
and so , how do thei start , well , some ar more trust than other , and the more we trust them , thei kind of all work out .
so , it's not everybodi , you can't becom a trust author so on of the mani trust author .
and on of the oldest on and on of the more popular on .
and on of the more expens on .
it's pretti expens to get your certif sign , it can be as inexpens as a coupl hundr dollar .
it can be thousand of dollar to get a certif sign .
and their sign is on of the oldest and most well respect of the certif author .
so , the idea is , is that , i have thi websit call onlin . drchuck . com , where i teach python class and do variou other thing .
and i want a secur certif becaus i would be handl peopl's data .
and i want to , to be respect and have a secur certif .
so , i had a public and a privat kei and then i sent it to a certif author and i paid them monei and then thei send me back a sign privat kei , okai .
so , thi is a , now , now you might sai , oh , thi is kind of evil .
or , thi is realli expens becaus all thei realli ar do is like , chang a few bit in the , in my privat kei or ad a few bit to my privat kei .
but thei have a lot of respons , and the good on have a lot of credibl .
so , thei don't want to lose inform .
thei gotta spend some time valid ident , sai okai ar you realli the owner of drchuck . com .
thei're not go to hand a certif , a sign certif for drchuck . com to anybodi , except the true owner , and so thei spend some time .
check to make sure that it's the true owner , and thei do thi by look at the registr data at drchuck . com , et cetera et cetera .
so , there is a cost of verifi all thi ident , kind of like signatur track on coursera .
and that's kind of what's go on on signatur track of coursera .
there's a differ between a certif and a certif that coursera is go to assert , that we have verifi the ident .
and the cost is in the verif of the ident .
so , certif author ar charg amazon .
but then ensur that thei don't mistakenli give the amazon . com certif , to a random bad gui becaus if thei did .
that bad gui could pretend to be amazon . com .
so then you might ask , who decid which of the certif author to trust ?
we us the certif author to decid whether or not to trust amazon . com or coursera . org or drchuck . com or whatev .
how do we decid which of the certif author we're go to trust ?
well , it turn out that appl , microsoft , and linux and other oper system vendor .
pre instal at the moment that you're either purchas your comput or instal your oper system .
part of that oper system is actual a list of the public kei of the chosen certif author .
so , if you look deep enough insid your comput .
thi is my mac , you can see the compani that have been includ by appl as the manufactur of the oper system .
and so you see that verisign is on of those compani that ha been pre includ in appl macintosh .
which mean that a certif from verisign is go to be known , right ?
so , let's , so let's look a li , a littl bit more .
so , so these come , your browser and your oper system come with pre built in public kei certif for certain certif author like verisign .
now that's a lot of trust that appl , microsoft , and linux have place in verisign .
and that's becaus over the year verisign ha earn that trust .
it sai , verisign doesn't just give out certif without check , right .
if verisign gave out an amazon . com certif to somebodi without check , thei would lose a lot of credibl .
and then microsoft would like , take them out , right , sai , well , verisign seem to be kind of sleazi , thei seem not to be abl to to handl their secur , but thei have .
so , thei remain in there , and it's kind of an interest thing where thei ar motiv to keep their secur high .
thei ar motiv to do a good job becaus the moment that thei fail , thei lose a lot of credibl and respect .
their valu , the verisign brand is all the respect we have for verisign .
so , so , so , we mention public , privat kei encrypt .
we have the public kei that goe across and i'm about to type my credit card in .
and so , the problem now we're go to solv is , i'm , is thi realli amazon's kei ?
is it realli amazon's public kei ?
i mean i'm , i got a public kei from the , across thi connect i made to a server and it claim that it's amazon . com .
but , do i believ that it sai it's amazon . com ?
so , that's the integr thing , that's the secur , that's the , do i believ it ?
is it realli got the verisign tattoo in addit to the amazon . com that it , it's , it repres that it's amazon . com's public kei .
so , we can also us public kei to do sign .
and , and basic verisign ha a public and privat kei for verisign .
the public kei for verisign is sit in your browser right now .
and thei us , thei do an encrypt much like the messag digest .
thei do an encrypt of amazon's certif , and then sort of creat a digest and then add that digest to it .
so , the certif sai i'm amazon . com , and later it sai , oh ye , and verisign sign thi with verisign's privat kei .
okai , so verisign's privat kei is us to sign amazon .
thi is probabl easiest if i just show you sort of a video .
wait , oop , i'm go the wrong wai , am i go the wrong wai ?
what's go on here ?
i'm go the wrong wai .
yeah , i'm go the wrong wai .
okai .
so , here we go , we're go backward .
here's how it work .
thi is how amazon get a public kei sign by verisign .
right ?
so , in the begin verisign make a public and a privat kei .
somewher in a bunker , and thei store the privat kei .
and thei'll , sometim you can read up on how mani , how much effort thei go to store the privat kei and then thei hand the public kei to appl .
microsoft and linux and then thei bundl that in with your laptop .
so , your laptop that you bui , you walk out and you have a laptop and it's got public kei in it from the vendor .
now amazon sai , you know what , i'd like to do some commerc .
and i would like to be abl to us ssl and have a certifi privat kei .
so , then what amazon doe .
is amazon insid of it server gener a pair , a public privat kei pair .
so , thi privat kei is not leav amazon server .
it take a while , it take minut sometim to gener the right random , suffici random public and privat kei .
like look at all the larg prime number and then pick on and then , bang , make a public and privat kei .
then what amazon doe at that point , is it transport it public kei to verisign .
now , dure that transport , it might , eav might've seen it .
but it's okai , becaus it's just , it's just a public kei , right ?
so , it's just a public kei and so it actual can be sent across the internet and it's most commonli sent across the internet .
like when i got the onlin . drchuck . com certif , we just type it in and sent it , becaus if you get a hold of the public kei , all it mean is you can encrypt .
it doesn't mean you can decrypt .
so , then what happen is insid of verisign's server , verisign comput a messag digest us it public , it , it , it , it's privat kei .
right ?
and then it add basic a signatur that sai , oh , here's amazon's public kei that i receiv from amazon , verifi the ident of the person , and now i have sign it mr .
verisign .
i've sign it .
and that of cours is just like messag digest like inform that is append to the bit of the public kei .
then that public kei with signatur is sent back .
bundl togeth and sent back to amazon .
and now amazon ha not just ani old public kei .
it ha a public kei that sai i am amazon . com and verisign is now assert that i am realli who i am .
now , an , an , again , so ev saw that on .
who care ?
it's just a public kei .
there's noth about the verisign privat kei , it never left the verisign server .
the signatur is public inform .
you can , us the , the verisign public kei to verifi that the signatur is right .
but you can't forg the signatur .
so ev can look at that .
ev could look go thi wai , ev can look that wai .
ev get noth .
ev get noth .
so , amazon now ha a sign , and certifi privat kei .
then what happen , is sooner or later , mani hour , mani dai , mani month later , you decid on your laptop , rememb thi is you , opp .
thi is you , you want to bui some shoe , so you connect to amazon . com with your browser , with an http connect .
and then what happen is , amazon send you it's public kei and ev of cours is eav drop all the time .
ev see it goe by .
it's worthless .
right ?
it's worthless becaus it's just the encrypt kei .
it's not the decrypt kei .
the fact that it's sign , it see that but it can't do anyth with that inform .
now , within your laptop , within your laptop , you have from the vendor the verisign public kei , from macintosh , or appl , or whatev .
so , you can look with thi , oh , come back , you can look with thi public kei at that signatur .
and just like we did with the messag digest befor , we can go , yep , that's good , that realli had to have been sign by verisign .
and if your comput is realli conserv , it can actual go check with verisign , send it up and sai hei , did you verifi thi ? .
and verisign can verifi it too , but you actual don't need to connect , becaus you have the public kei .
the onli wai that the , the you know , whatev that messag digest could be right would be , is if verisign , it's privat kei , wa us to gener the messag digest .
just like we do santa in the other on .
the santa is realli simpl , but it's the same basic mechan .
thi is verifi that it came from thi privat kei .
now , if somebodi broke in and stole the privat kei , that's a differ stori .
but if the privat kei is safe and secur , hasn't been compromis , the onli wai to gener that messag digest is to be in possess of the privat kei .
so , now you ar in a posit where you ar in a good mood , right ?
you see an http , you can pop that littl thing and sai that wa sign by verisign .
you can be assur that verisign is assert that that kei came realli , that public kei came from amazon .
and now it is time to encrypt your visa card and send it over encrypt connect to amazon .
okai ?
becaus you won't send your encrypt thing , your , your , your , you won't send it unless you believ that the http is proper .
and your browser will pop up a littl pop up and sai , wait a sec , thi certif look a littl funki .
it claim to be from amazon . com , but it's not sign by on of the signatur that i believ in .
so , you send your data , it is encrypt and ev is watch , right ?
ev is alwai watch , but becaus it's encrypt with a public kei , unless ev ha supercomput in a coupl of month , there is noth that ev can do .
and then of cours , amazon decrypt it us the privat kei .
so , the privat kei come in , and let me redo that .
all right , so in it come .
ev watch , but it's helpless becaus thei don't have enough comput .
ev doesn't have enough comput an your kei is larg enough .
so , amazon , then take thi privat kei , an us that to decrypt it , an end up with your plain text again .
so , if you think thi whole thing through , thi , ev wa watch the whole time .
we sent a public kei .
we sign and return a public kei .
then we sent the public kei to your laptop .
we verifi the public kei .
and the whole time ev is sort of watch all thi inform and she is powerless to break it .
pretti dang clever , if you ask me .
and we can thank diffi , helmon and merkel for that .
pretti darn clever .
becaus ev see it all .
just think what would happen if like , the german had thi in world war ii .
it would've been pretti cool .
cours , thei didn't have comput , so , it'd have been difficult .
i don't know .
too much to think about right now , okai .
continu on .
so , what we have , is we have thi thing call the certif author which is a trust , third parti that sign these certif , right ?
and so it's the entiti that issu digit signatur on public kei .
so , that we the public have a wai of valid that an amazon . com certif realli came from amazon . com .
so , if you then add thi all togeth , right ?
if you add thi all togeth , we have basic public , privat kei encrypt .
that make sure that , thi data can move across the internet , out of your comput , out , back into the next on , all encrypt .
that's just public privat that doe that .
an then we have thi third parti , certif author , that your applic , can us , to valid the certif , that come out .
an so , the combin of ssl , or the secur socket layer .
and the certif author give us high confid , that when we're talk to someth we know we're realli talk to it .
so , it's pretti non intrus secur .
if your browser pop up with a littl popup messag , that mean it's got a certif that it ha no certif of author to valid .
and that's not a good time to be type in sensit inform , unless you know exactli what's go on .
so , that sort of bring us to the conclus of thi , these last coupl of lectur have been about messag confidenti .
and that's protect the content from be reveal .
we us encrypt and decrypt for that .
and then we have messag digest .
and , sur , to sign thing .
we've sign messag , we've sign certif , we've sign mani thing , and those ar import .
and we talk about both sort of , share kei , and secret kei , where you have to get togeth .
and agre on a kei which is a symmetr kei that's us for encrypt and decrypt .
and then you have the public privat kei which is the asymmetr .
which is on kei is us for encrypt and the other kei is us for decrypt .
and you can freeli show the encrypt kei becaus it give veri littl inform .
although , it is mathemat possibl , but difficult to decrypt public privat kei messag .
so , that kind of sun up , kind of sum up our lectur on public privat kei and i hope you find it valuabl .
see you on the net .
hi there .
i just want to give a littl bit of a video about the final exam .
i just want to thank you for take the time and stick with thi cours as long as you have .
we have sever thousand peopl still activ on the wai to a certif and finish up the last week , and then do the final exam .
the final exam will be a littl bit differ than the quizz .
the quizz , you've been abl to retak them over and over keep the highest score until the deadlin .
and that's realli becaus my goal for the quizz is for you to learn and i feel like if you take the quiz more than onc , especi the question chang a littl bit you're learn , and so that's the idea .
the final exam , i'm go to chang it .
you have a two week period , and dure that two week period , you pick the time that you want to start the exam .
and then a <num> hour timer start , and you have to finish within <num> hour and submit it .
you can log in .
you can look at the exam .
you can start answer the question .
you can save the question , and then you just have to save and submit your final answer .
the other thing that happen is the question don't chang .
so you see on set of question when you first look at it , and you could print it out , or do whatev .
and so the question aren't go to chang , unlik the quiz , where the question chang everi time you took a look .
i also am try to , and i , as best i can to make the question on the final more factual .
i , i don't mind have a question on the mid term , on the , on the , on the quizz that is kind of thought question where it make you think or curiou or bounc around or ask somebodi becaus that , that , that trigger learn in wai that i couldn't have imagin .
but on the final , on the final , i want you to , you know , be abl to look at the question , and hopefulli , it's a rel factual question and just answer it .
of cours , a good wai to studi for the final is to take a look at the quizz and look at the quizz you know check the lectur again do quick review .
that's why i give you some time .
but onc you start take the exam , onc you start it , you have <num> hour to finish it .
and so , again , thank you .
i look forward to see your perform on the exam .
and i've got a littl tini video right after thi .
that kind of take us back to the veri begin .
the video of tim berner lee where he talk about hi view of the futur .
by now , those of you who have done the peer assign , you've also share your view of the futur .
and let's let's go back and take anoth look at tim's view of the futur .
and then after that i have a graduat video where you , we have a graduat speaker and and you can , you know , get your certif at a real live or at least real virtual graduat ceremoni .
so the end of a class is sort of , sort of both a celebr .
a celebr of achiev , accomplish .
it's good the class don't last forev .
we , we finish them and , and that's alwai wonder and fun .
but it's also kind of sad .
it's kind of sad becaus we've come togeth as a commun and a group of peopl .
and it's been realli wonder and realli special .
and i miss it as , as soon as the class is over i can relax , but at the same time , i miss it as well .
and hopefulli , we'll find someth we can do togeth whether it's you gui take some other class on coursera or , or perhap my , my python class .
and but it ha realli been an honor and a pleasur have you in class , and i , i thank you for all your time .
last month i wa off in boston for the fourth annual world wide web confer and i had the opportun to talk to the inventor of the world wide web , tim berner lee and i ask him a littl bit about where we're go with thi web stuff .
and we have just a littl bit of footag from tim tell us where that's go to be .
> you're wait until peopl consum the web .
when the web becom that you can consum when the web , and the infrastructur is all laid down or we have the inform space , then it would be time for the next revolut > it's hard to imagin a greater revolut that what we ar see i mean , i mean the smallest place and everybodi is put up a web page .
> right .
and the web could onli take place , the revolut can onli take place becaus the internet which would be the quantit smaller revolut but the internet itself quit be deploi for that role had happen becaus the internet wa someth peopl consum , the web revolut can take place .
when the web is someth you consum then mayb the cultur revolut and i said cultur revolut , when we come to revolut so , or then you go find wai to do thing better than we have imagin .
> pretti neat which on of the thing that i , i like about it wa he , he just said , we're go to , hi idea wa the next step is someth complet differ , a cultur revolut as compar to just littl more technolog and he tim berner lee be from europ i can sort of see how he , he could have that perspect .
that it's go to chang our cultur .
> well , i guess we don't know what's go to happen in five year or even in two but , let's find out what's go to happen in the rest of the show .
hello , and welcom to the graduat ceremoni for my mooc .
i'm of cours dr charl sever , and i'm your instructor .
and i'll be award you your certif , when the time come .
i realli appreci the fact that you've stuck with the class long enough to get a , to get a certif .
but as is tradit with graduat , we have a graduat speaker .
and he's my good friend and colleagu curt bonk , from , indiana univers .
and , so , befor we do the , graduat ceremoni , i would like to have our graduat speaker talk briefli .
kurt .
thi is go to be a pc talk .
there you go .
what doe that mean ?
well , polit correct .
okai .
at least for on thing .
i got my red indiana glass , and my , blue .
go blue .
michigan , blue shirt on .
it's partli about what i'll call not person comput , anoth pc word , but possibl cours , mean possibl path .
not next cours you're go to take with doctor chuck , necessarili .
but what i want to walk you through is four p word , four c word for your possibl cours in life .
thi , cours , thi mooc , wa about , your passion , your interest , what you decid to do .
you move into an area , mayb a new area , that's within your , comfort zone , or mayb a bit beyond it .
but you're try to find , your element in life , as sir ken robinson sai .
we're all look for our person element , right ?
so , at number on , passion .
you have to be passion about your cours interest in what you explor .
as part of passion , you can't just be passion and expect to succe in life .
you need a purpos , you need a goal .
you need to be move toward someth .
as thi professor at stanford talk about , the highest goal .
mayb thi cours you took wasn't your highest goal .
but it wa a goal , nonetheless .
and we're all move toward that .
so we want to have purpos .
we want to have passion .
but the onli wai you're go to get through a mooc , is to have persist , or grit .
you push your wai through it .
persever in that class .
find that extra energi insid .
and i want to congratul all of you for find that .
you've got your passion , right ?
you found your purpos , hopefulli even just a cours relat purpos .
and per , persist , persever , grit .
that's the number on word todai in psycholog .
number four , of cours you're in thi class , so you have to have a littl bit of play along the wai .
you know i got into mooc stanc when i did my mooc for a week .
you can take a look at it onlin , but i have a littl play in my mooc .
four p word , keep those in mind as you perceiv , anoth p word , into life and your possibl cours in your life .
c word , of cours you chose , to get involv , choic to c word you've had autonomi .
it's your person decis to get into thi class and complet that class to know the c word .
but commit , the second c word i want to focu on , you not alwai just decid or chose , you commit to it to complet thi cours .
and that , when you come , when you did that , all your peer were watch you , and talk to you , and share with you , and , next word , connect .
a cmooc , a connectivist mooc and , ani class onlin , is about about connect and relationship .
hopefulli , you didn't just finish thi class , you form new bridg , new relationship , new possibl pathwai , possibl cours in your life .
and so those connect you have might help you down the road anywher .
not just for the content here , but mayb thei'll help you get an new job somewher , or find out about a new interest , right ?
and then , what is thi about ?
some of you will want the certif , you're go to want thi .
some of you want your million dollar .
well , mayb you won't make a million from take thi class or all your class , but what you will do is mayb like steve job is becom innov .
the book i'm listen to now in my car and i just finish defin your element .
you have complet a cours , you might get a certif , anoth c word .
so those ar the four p word , passion , persist , purpos , and play .
and the four c word we move through , choic , right ?
you want to have some choic in your life .
commit to thing that you do choos to , to pursu , and relationship or connect , and final , complet .
a cours , a certif , and you move on in life .
if you can keep those eight principl in mind as you proce into other cours .
i think mayb you'll find some futur success .
i hope you do , i hope you follow your heart into addit cours with dr chuck or with other peopl .
so i congratul all of you on not onli sign up .
while i'm complet as mani of the modul , and mayb all of them , so you can get your certif , not just here .
but your life certif as a open learner in an inform , now formal learn .
thank you veri much .
outstand , outstand .
so i realli want to thank curt for come , here in ann arbor .
he came all the wai up from bloomington .
and so curt and i have done a number of thing togeth .
just to be here with chuck , you know .
no , no that wasn't it .
he might be have anoth reason to be here , so we figur we would tape thi .
so it is now time for you to sort of walk in front of your comput and receiv your fake graduat certif .
i mean , there's a , it's a littl known fact that when you actual graduat from colleg thei don't actual give you the real certif .
thei give you a carfeulli roll up piec of paper with a littl bow on it .
and then you get to your seat and you open it up and it's blank .
but that's what we're go to do again and you , you can print your own certif or badg depend on the cours that you've taken .
and so it is time for you to get up and sort of walk in front of your televis or your laptop and i will hand you your certif .
i have my harri potter slytherin severu snape wand , to poof , you know , make you educ .
and so here you go .
i congratul you and you can reach up and grab your certif , and there you go .
shake your hand .
shake your hand .
we'll shake your hand .
we'll both shake your hand and and as curt said thi is hopefulli just the begin of a number of wonder cours .
and so again , thank you for your time .
thank you for your persist .
thank you for your commit , and hopefulli you'll see both of us on the net and on the web teach the internet class .
so thank you veri much .
door is open .
hello and welcom to our first real lectur of internet histori , technolog and secur .
we're go to start , of cours , with internet histori .
and i'm charl sever .
not all the materi is copyright by me , some of it is copyright , i put ieee comput societi , particularli the articl that accompani some of the video interview that i produc for ieee comput magazin .
richard wiggin , my televis show host , co host also ha gracious given permiss to us some of hi video .
and the open michigan folk , dave malick have help to do copyright clearanc on content that is sort of my slide .
so that's great new .
so , it's go to take us a coupl of week to go through histori and we're go to break it down into some phase .
we're go to start at the dawn of electron comput .
i mean comput start , you know , earli with abacus and human but , we're go to start with the moment that electron comput , in particular becaus it wa the moment when comput and commun were sort of co born at the same time .
and commun befor the internet becam normal .
then earli internet research and then the internet itself that wa academia and then of cours for went out into the real world .
and then the web , which realli took all thi connect and made it easi to us for everybodi .
it's realli what our view now of thi network is , veri much through the web .
and then from that point forward we look at sort of the commerci of it and the ubiqu of it and the widespread us of it .
so the first pictur the first video that i want to show you is a littl longer than most of the other video .
it is about bletchlei park and there ar mani hero at bletchlei park .
of cours thi wa a top secret code break effort by the british govern dure world war ii .
world war ii , i mean , if you think about it in histori , perhap there is no time in histori quit like world war ii .
if you go back to , well what kind of technolog we were us in <num> and <num> , to the technolog we were us in <num> , it's an amaz differ , you know , jet airplan , radio , radar , so mani thing were invent and made usabl and made product qualiti dure that period of time .
war , of cours , is terribl but it doe caus govern to fear for their live and invest heavili , veri heavili in research .
and so we , in some sens , even though war is a terribl thing , we sort of benefit from the extens research .
thei were try to solv wartim problem , but thei ultim solv problem that have chang our peacetim world in wonder wai .
so bletchlei park is north of london , between oxford and cambridg , in england .
and it's it wa a code break effort and at on point there were over <num> , <num> peopl work on top secret effort to decod encrypt messag initi from german as thei were us radio .
so thei call world war ii a world war mostli becaus it touch geograph more than ani other war had ever touch , sinc , befor or sinc , realli .
you know , alaska , unit state , itali , africa , russia , japan , philippin , you know , it , it just , it truli wa geograph distribut and it wa necessari to do unpreced commun just to effect pursu the war .
and thi meant that commun had to be wireless .
and the problem with wireless is anyon can put up an antenna and listen to the wireless signal .
there's no wai to hide the wireless signal .
unlik a wire , that you could hide it , and if no on had access to the wire , you can't see what's in it .
but if you ar us wireless , in fast move armi and long distanc , then someon can intercept the wireless signal , and thei can .
so the trick of cours wa to creat an encrypt wireless signal so thei could see everyth you sent , but it didn't make ani sens to them .
it all sound like gibberish unless you , of cours , know the code .
and so thi wa the , a kei technolog wa build code and code make machin .
a good exampl of thi wa the enigma made by germani , which is we'll talk about these in the last part , the veri last part of the class , in the secur part of the class , how these code and cipher work .
but thei scrambl materi in a wai that's gener unintellig .
and , of cours , the realli bright folk at bletchlei park , alan ture , on of mani realli bright peopl at bletchlei park us , you know , mathemat to , to sai , you know , these code mai be more , more crackabl than we think .
there wa folk from poland who also inform the , them , to sai , look , let's show what we did to crack it .
right befor poland wa involv , thei were work heavili on the mathemat of crack .
and so then thei built these machin .
and so , in thi video that i'm about to show you , it's realli , what i tri to do is , i tri to contrast the two machin .
and on is an extrem fast mechan comput , with relai and switch and thing that spin and gear that move back and forth .
that's a veri physic comput that's that's look for pattern .
and as it's spin it's check for possibl encod combin to try to just do a brute forc check of lot of differ possibl .
and so it wa a mechan comput .
the bomb wa a mechan comput .
and then as the german encrypt improv and thei us differ techniqu with more sophist encrypt , thei just couldn't decrypt it with a mechan comput ani more .
so thei just were forc to build someth faster , and that faster thing wa the first truli power gener purpos electron comput in the world .
of cours it wa kept secret until the , certainli kept secret until the 60s and the 70s and much of it wa still kept secret until even the 90s .
and so it place in histori is kind of a recent recent understand .
you can look at earli histori text that talk about the first comput and thei don't mention thi on .
well that's becaus it wa a secret until a long time .
so the bomb wa a power mechan comput .
the colossu wa a power electron comput .
but i have thi pictur , it wa drawn by an artist for me .
and in addit to showcas , sort of , the moment where a mechan comput , no matter how hard you tri , wouldn't work fast enough , and the electron comput wa sort of forcefulli creat out of a tremend need what's also realli interest is the fact that bletchlei park dure thi time , with <num> , <num> peopl , had all kind of peopl .
you know , languag expert , mathematician , engin , welder , and it's a realli cross disciplinari activ .
and thei were solv a problem of decrypt german transmiss but thei ultim solv the problem in the pursuit of that , of electron commun and comput .
and so thi pictur is realli try to show how , you know , alan ture wa realli veri critic , but there ar other peopl like gordon welchman , dot kean , and , and the folk from poland , that inform all of thi .
univers colleagu , and thi whole thing wa veri much a connect , collect group of realli bright peopl .
highli motiv , well fund , and thei creat thi .
so so let me go ahead and and paus now , and let you take a look at , at thi film .
todai , we're at bletchlei park in honor of alan ture's 100th birthdai .
bletchlei park , just north of london , in between cambridg and oxford , wa consid by mani as the birthplac of modern comput scienc .
>in <num> , in anticip of war , the govern code and cypher school through , in the main , their oper director , a gentleman call alastair denniston , had drawn up a list .
he had sent two peopl out to troll through the peopl at oxford and primarili cambridg and to some extent oxford and drew up a list of peopl who thei approach who agre in the event of war would report immedi to bletchlei park .
when thei declar war on septemb third <num> , the follow dai , septemb fourth , ture and sever other report to bletchlei park .
as the requir for more peopl wa need some , predomin a gentleman call gordon welchman , who had been on the initi list , he'd arriv the same dai as ture , he went back to cambridg and he start recruit all hi best student and in effect what thei creat here wa the world's first skunk work , a secret organ where there were no rule .
eventu their main benefactor becam the prime minist winston churchil and thei persuad churchil that thi place need more resourc .
churchil agre , and he wrote a famou , a letter wa written by welchman , ture , and the two deputi to churchil .
and on of their number , a gentleman call stuart milner barri , actual deliv it in person to down street .
churchil amazingli read the letter the same dai it wa deliv .
he put a famou action to stai stamp on it , with a handwritten note to hi chief of staff , a chap call gener ismai , which said expedit with extrem prioriti , and report to me when it is done .
and realli , from that point , septemb <num> , bletchlei park got all the resourc thei need .
thei threw , in effect , the smartest peopl togeth in britain and said , here's a budget , thi is the endgam , and that's why thei invent some of these technolog which probabl wouldn't have been invent for year .
>in mani wai , bletchlei park wa an earli version of a multidisciplinari scienc center , much like cern or ncsa is todai .
mani brilliant peopl , with differ skill and background , were brought togeth to solv difficult problem .
the combin of the skill and collabor environ result not in just solv the problem of cryptographi that thei were face , but in addit solv broader problem for all of comput and all of societi .
>when the peopl arriv here , thei knew when thei arriv that the german had taken a machin , a machin which we tend to call enigma .
enigma wa a particular variant of an encrypt machin .
that machin wa modifi from the commerci version .
and it allow them to encrypt messag .
thi wa go to becom a machin to be us for oper commun .
veri short <num> , <num> charact messag .
hitler had conceiv and hi gener a type of warfar never seen befor which becam known as blitzkrieg .
veri fast movement , <num> mile a dai , particularli when thei invad franc and the latter stage of their invas of poland .
you couldn't us fix line commun .
you need to us wireless commun .
here wa a devic which wa portabl , weigh <num> pound , ran off a batteri .
you could encrypt messag and then in a separ process thei could be sent us the fairli new technolog of wireless radio .
it wa the pole who were the first to recogn that the ag of machin cryptographi had arriv , and the sort of peopl who would be good at deal with it were mathematician .
in fact , thei even went so far as to put on a cours on cryptographi at the univers of poznan , invit <num> or <num> young german speak mathematician to enrol .
it wa a veri difficult cours and by the time the cours wa finish , there were realli onli three graduat who thei recruit .
their name were marian rajewski , henri zygalski and jerzi rozycki .
and these three were the core of thi team , and thei ar the on who realli made the earli breakthrough .
thei conven a confer at their secret headquart .
thi wa actual juli '<num> .
and at that confer , thei gave the british everyth .
thei reveal what thei had done , thei gave them a replica enigma machin , and all of their work .
that inform came back to bletchlei park and onc thei were establish in bletchlei park , thei then us the polish method to break the enigma machin .
the pole had actual built some machin themselv , on of which wa call a bomba .
now , that machin , the name appar come from a polish ic cream dessert of the same name .
it's , in effect , vanilla ic cream with chocol sauc around it .
>thi machin wa call bomb in honor of what the pole did .
but the pole' techniqu wa base on the particular wai that at that time the german enciph their messag .
thei , at that point , were repeat the messag header , and that wa the attack which the pole develop on it .
thei believ , correctli , that when the war would start , that the german would chang the wai thei were do that and thei call for help .
thei told ture and the peopl here everyth thei'd done , for which we ar and should be veri grate .
but thei also prove that it wa possibl .
and that , i think , wa the spur that kick the brit into actual do someth about it .
now , ture understood the weak of the wai thei'd done it and develop a crib base mechan base on the fact that everi militari organ in the world cannot stop itself send stereotyp messag .
he then talk to a brilliant team of engin led by dr .
keen who told him roughli the speed that it would be possibl to examin potenti stop for .
between them , thei then design the machin call bomb which would look for that and do so in a sensibl time .
here is an exampl where we have intercept thi messag s n m k g .
we're pretti sure that that is , becaus thi particular oper alwai did thi , thi is hi morn weather forecast .
so here we have the guess german plain text weather forecast and the two ar line up .
at that point the enigma's abil , or inabl , to encod a letter as itself is us becaus you can make sure you've got no clash here .
and from these guess letter , we , the crib maker would deriv a pictur like thi call a menu where , you'll notic that , that at posit zze here , g is encod as e .
so we have g go to e .
at zzp at the end here , e goe to v .
thi is revers of cours .
we can describ thi other wai up .
so here's e to v , that's zzg here .
s is go to a .
so , s is go to v , excus me .
so , here's anoth link .
and eventu we can go all the wai around , and we can close thi loop .
like that .
it wa the close loop that thei were look for .
the oper of the bomb wa simpli that if there is a letter which you can feed in at thi point , and which come around though a string of on , two , three , four , five , six enigma and come back as that same letter , then it's possibl the posit of these wheel match the posit of the wheel when gunter start encod hi messag on hi enigma .
it turn out to be a bit more picki about loop and menu than perhap thei had hope , although it work .
and at that point , welchman ad a complet left field master stroke call the diagon board which i think is fair to sai made the differ between success and failur to ture's origin idea .
and here lie three diagon board .
that's on , that's the other .
thi is the third on , hide in a place where you can't see it .
but can you see z down to a ?
okai ?
there's noth connect that to the machin .
it's just bolt there for conveni .
the onli connect to the machin ar when you connect x into on of the enigma .
so , what'll happen is , when we turn the machin on , you'll see it will run up to speed , okai ?
the motor will be run , and the clutch will drop in .
then you'll see the variou carri mechan happen .
then when we stop the machin , you'll see it slow down .
and then the clutch drop out .
so , toni , if you'd run it up for us pleas .
could you turn on carri home pleas ?
okai .
thank you .
so , what you saw there wa the middl carri , then we switch on carri home to make the slow carri work all the time .
so , these bar ar just push around all the drum .
and you can see that all the <num> enigma ar just in step .
thei're all just turn and thei ar a resourc .
these ar the veri fast relai , the three bank or actual four for the chain that do the detect .
here .
thi is the control logic .
okai .
and then these thi is the <num> bit regist that note a stop and then allow the machin to slow down befor it stop but our favorit statist is the sheer amount of wire in the thing .
we've lost count but it's somewher between ten and twelv mile of wire in each on of these .
>german , realli , there wa two main system thei were us .
enigma wa their oper system .
that wa be us for specif oper commun .
again , veri short , maximum of <num> charact .
instruct , order for a panzer divis to move from on locat to anoth , order for a submarin to attack a convoi , for aircraft to , dure the battl of britain , to attack specif target .
the german start to introduc , through probabl <num> , a differ system .
the intercept servic which britain had put into place to intercept these messag start hear traffic which wa clearli not enigma traffic .
enigma traffic wa mors code , easili identifi .
peopl can be train fairli simpli to transcrib , to listen to mors code and transcrib the letter .
thi wa a total differ signal , it wa not discern , it wa not transcrib , thi wa adolf hitler's commun channel to hi armi gener .
so , veri long wind commun , top secret , and so thi wa an even more daunt task , arguabl , than enigma , becaus thi encrypt machin that wa us with thi system there were variou on of them .
hitler refer to these as geheimschreib , hi secret writer .
sever compani , seimen that exist todai , were make the machin , hagelin , but there wa also the lorenz compani .
and that wa a primari machin , particularli lorenz sz42 .
that machin , and unlik enigma that had three encrypt wheel , had twelv encrypt wheel .
thei approach the post offic research lab at dull hill in london , a young engin call tommi flower went into the project he wa in effect told , well , go ahead , if you can get approv .
flower went back to the post offic , got approv , put a small core team togeth , and in less than a year had a work prototyp , quit a remark achiev .
the first colossu , as thi machin becam known , the mark <num> , had <num> , <num> valv or vacuum tube in it .
thei brought it to bletchlei park , it work almost straightawai .
the peopl here were convinc , thei ask for a more power comput .
flower alreadi had anticip thi , he alreadi had it in product .
<num> , <num> valv in an era when no machin had more , that us valv had more than about fifteen , here wa a machin with two and on half thousand .
flower wa told that thei need the mark <num> by june first <num> becaus there wa a certain date in the diari of june <num> , <num> wa the schedul date for oper overlord , d dai .
thei had actual end up in june sixth becaus of bad weather .
flower deliv the mark , the first mark <num> to bletchlei park on june first .
thei switch it on , it work straightawai .
thei immedi start decrypt messag between the german high command , and much to their delight , thei discov that all of the subterfug about the d dai land had work .
hitler believ that the main invas wa go to be at the pa de calai , not at normandi .
that intellig wa fed back to gener eisenhow at alli suprem command headquart , and there is reason evid to conclud that d dai might have not gone ahead on june sixth <num> without the intellig from bletchlei park .
> thi is the , colossu comput at bletchlei park .
now we're in hut <num> at bletchlei park , which wa on of the first purpos built comput center and some ten of these machin were instal here , start in januari of <num> .
now , in the year previous a new wai of encrypt messag wa discov that wa be us in germani and it wa those high level messag between hitler and hi gener .
and thei were encrypt on a machin call the lorentz machin .
and it us teleprint traffic teleprint code to actual transmit those messag .
now , by '<num> , it wa take some six hour , sorri , six week to actual decod those messag , and decod those messag labori by hand .
the problem with that is within six week the us of the intellig that you'd gain from those messag had obvious gone .
so that process need to be speed up .
now , some techniqu had been tri from , some of the electron techniqu had been tri here at bletchlei park .
but thi machin , when it wa put into us in earli '<num> , reduc that six week period to decod the messag down to six hour and that's realli just a phenomen jump .
the machin , the messag themselv were receiv at variou intercept station around the countri and were punch onto paper tape .
now , there ar two paper tape on the machin here at the moment , on that we're run and on which is readi for the next run .
now thi tape , there ar two here , if i take on , each row across the tape , ar punch by hole , and each of those is an alphanumer charact .
and that's the encrypt messag that wa receiv , and is be punch on the tape .
now although colossu ha inde all the element of a modern electron comput , it doesn't have the memori that we expect in a store program comput .
so what happen is that tape , that messag , some <num> , <num> charact in that messag , is actual form in a loop and is read over here with a seri of photoelectr sensor and light and each charact is read and <num> , <num> charact a second ar read .
now each clunk of the machin you can hear there is anoth <num> , <num> charact be read into the machin .
so we ar read that same <num> , <num> charact each time .
thi is the control panel of the colossu comput , so it's thi side of the machin would actual be that the wren dure wartim would actual be us .
now i can set up the particular algorithm i want to test , and routin i want to test , us these control panel .
and each clunk of the machin at the moment is anoth state where we're actual try a new algorithm and repeat that algorithm on that repeat <num> , <num> charact .
the result that the machin detect ar present here .
now , we're do a statist analysi of that encrypt tape .
now the machin would run for some six hour .
there ar <num> , <num> valv in thi machin .
you can't see that mani from the front , but onc we go between the rack of the machin , you get an idea of the scale .
<num> , <num> valv , each valv ha a heater , a hot wire heater in the center of the valv , and oper at about <num> <num> volt dc .
now five and a half , about <num> , <num> valv , plu the power suppli gener over eight kilowatt of , us over eight kilowatt of electr .
and by thi point , when we're stand in between the rack , you can feel the heat come off of these rack .
colossu is a combin of electron , and we can see the rack , the electron here , and these valv , chassi member , and also electro mechan switch gear .
so there ar bank of relai panel here .
these big singl motion detector ar a sort of motor switch that will actual spin around .
there's bank of those in the machin .
the technolog is equip that wa well known for the british post offic .
thi machin wa design by a chap call tommi flower .
and tommi flower wa an engin at the research center in london for the british post offic .
tommi wa ask to look at the problem of how to autom thi task , thi manual task .
and tommi came up with the idea of us electron to do thi .
at the time , the idea of us more than half a dozen valv in ani circuit wa simpli poo poo .
valv had a bad reput .
peopl had valv in their radio at home .
thei fail when thei switch the radio on .
so the idea of us <num> , <num> wa simpli phenomen .
but tommi understood that it's probabl , it's almost certainli the thermal shock that kill valv in the first place .
so if you leav the machin on and don't subject it to that shock , you won't have a problem .
now all the ten colossu machin here at bletchlei park were left on perman .
the machin ar oper by wren in three shift throughout the dai .
we have to be equal care .
thi is obvious , thi is a replica of the machin itself .
but the same problem appli .
we need to be care in bring the suppli voltag up gradual , so we don't suffer from thermal shock , and in the same wai in shut the machin down .
tommi had the idea of gener the kei , becaus it's a kei that we're compar with that encrypt type , gener that kei electron , and these counter here , thei're call the thyratron ring , the thyratron valv , actual hold that , that count .
now we describ colossu as not have a memori .
we're sai not have a memori in the sens that modern comput have a have a memori that's common for data and for program .
well , the program here is set on those control panel at the front and that's switch , switch and plug program , much like , sai , it contemporari eniac machin .
but these machin , these valv at the back , do act as a store , in the sens of counter , and thei're actual count the score that we're actual get each pass through the algorithm .
we , we can see at the back here , well certainli some of the modern technolog .
i suspect the wartim gui that were build and debug these machin .
would have given anyth for a littl oscilloscop , let alon a logic analyz .
if i look into the machin down here back , you can see the project imag that's come off the tape .
and that's shine onto five photosensit valv .
and it's those valv that ar actual read the <num> , <num> charact everi second .
the paper tape wa us well into the 1960s and 70s .
at thi speed it wa simpli phenomen and hadn't realli been thought of befor .
and our origin museum director toni sale want to rebuild the colossu and build a replica of the colossu machin .
thi wa some twenti year ago .
there is veri littl inform out there , there were a few pictur that were kept , possibl illeg , a few scrap of circuit diagram , and just the memori of some of the origin pioneer who work on the machin .
and when toni start the plan , tommi flower wa still aliv and rememb and wa abl to draw circuit .
of cours find the part as well .
but the import thing is the machin wa design by a post offic engin at the time , an engin that wa us to design system for telephon switch .
so a lot of the compon here , everyth from the relai bank , to the switch , to the power suppli , were common to british post offic in the pre war period .
so when toni then want to find the compon to rebuild the replica , he's lucki in the sens that the last of those exchang ar be decommiss from post offic around the countri .
toni wa therefor abl to realli sort of back up a pickup truck at the back of the exchang and take awai all of those compon and dismantl all those compon .
and thei ar , thei were absolut perfect .
and it wa just that time .
it realli couldn't have been better .
> so , alan ture actual left bletchlei park after about three and a half year .
hi involv realli finish .
he went to the unit state .
ture becam , wa not actual involv in the develop of colossu .
some of the statist work that he did wa us by the peopl , predomin bill tutt , who's the gui who actual construct the lorentz machin quit remark , a remark feat inde .
ture got involv in thing like speech scrambl system and went to the unit state and wa involv in other project so he wasn't realli involv in colossu .
at the end of the war ture went to work for the nation physic laboratori , again pursu these sort of idea , and then of cours he end up at the univers of manchest where max newman , who had run the depart where the colossu comput had been locat , bletchlei park , also end up as the head of mathemat and obvious then at that point ture becam involv in the veri earli comput develop in britain .
gordon welchman immigr to the unit state at the end of the war .
in <num> he immigr to the unit state and becam involv in mani of the earli american comput develop .
project whirlwind .
welchman work at mit , taught the first cours in comput scienc at mit .
so ture then wa involv with thing like the manchest babi and the ferranti mark <num> and the earli comput develop .
i guess thi is well known .
of cours , ture tragic commit suicid in <num> , <num> .
so i hope you enjoi that .
again i tri to showcas the juxtaposit of the mechan comput move to the electron comput and how it wa a collect effort by mani differ peopl .
and so on of the thing that happen sort of after thi is , after the war thei didn't need bletchlei park anymor , so thei shut the bletchlei park down .
and all these peopl who had work on all these thing and built all these thing went to variou academ place like mit , manchest , harvard .
and what happen wa , what thei had done wa a secret and thei could sai noth about it .
but thei had realiz , and thei couldn't forget , that electron could do comput , and electron could do comput far more rapidli than anyth we've ever imagin befor .
so a seri of comput came up realli fast after the war .
thei kind of you know relax , the war's over , we feel good .
but let's start think about what we would build if we were go to do comput like weather , or other kind of cool comput instead of just wartim comput .
and so these next gener of comput that ar often thought of as the first comput in the world , which ar realli kind of like the follow on comput to the comput built at bletchlei park .
and so the immedi postwar period in the 1940s took the us and uk code break .
there wa similar thing in the unit state as well , and i'm sure elsewher , where that push the envelop of comput .
but the folk that had built all these thing for wartim purpos switch and move into academ and peacetim purpos .
and so thei built , i mean if you think about it , thei had less pressur but thei alreadi know it's feasibl and thei can kind of sit back and relax and go like ok , that would be a littl better , we kind of compromis there .
so thei built some realli eleg comput .
and you know , thei can all sort of fight over who's the first .
but ultim , thei all pretti much came out veri quickli , on after anoth , caus the idea had escap .
and so thi is the begin of sort of electron comput .
the fact that electr can be us to repres data , and that it can be us to chang data veri rapidli as compar to other thing that us physic storag for comput inform .
so thi wa a great time .
electron comput from the special to the gener purpos and these peopl realli built some excit comput , mani of the architectur of which ar kind of still sort of with us .
a lot of the architectur were innov , the innov architectur that we still us todai were conceiv and imagin there .
also in the postwar period in 1950s , thi is a bit of an asid , there wa a realiz by the , certainli the feder govern of the unit state that academ were kind of us .
right ?
i mean the peopl that realli had won the war for them were academ .
not just comput peopl but also peopl that built , design airplan and radar and thing like that .
and so there wa a sens that the safest countri wa the countri that had the smartest peopl .
and in mani wai the entir us educ system wa built to find realli bright scientist and educ them veri effect .
and so there wa a real boom in build scienc depart , the nation scienc foundat wa creat right after the war , and so the unit state and other govern realli greatli invest in research .
and there's thi movi a beauti mind and i've got the url there at the bottom .
it's not requir , but i love the movi .
and it give you a sens , in particular the scene i'm point to give you a sens , of how mathematician were in mani wai treat like celebr .
so i'll paus just for a minut , in case you want to paus thi video and then go take a look at the john nash video .
so of cours john nash wa a real person he receiv hi phd in mathemat at princeton .
at <num> year old he wa a prodigi .
he wa on the mathemat faculti at mit in <num> through <num> , then had adult onset schizophrenia right befor he wa <num> year old , and it wa quit a sever case .
and it took it , it , it , he spent a number of year in sort of mental institut , homeless , et cetera .
but in hi work in princeton in an area call of econom call game theori he did someth that wa quit innov , and it realli revolution in mani wai our understand of econom .
and , and he sort of , he got hi schizophrenia under control in the mid 90s and he wa award the nobl prize for econom in <num> .
and so thi is just kind of thi moment where thi stuff , all thi stuff wa blossom in the 40s and the 50s .
now in the 1960s , we start see a differ wai of comput .
thi wa move from the research into the mathemat of build comput to the applic of the comput .
and we need to have connect becaus you would build a comput and you know in <num> there might be on comput avail to a univers research in an entir state , and so you had to connect them togeth .
and so we would often end up with these thing we call termin in our offic and thei would us these dial up modem and thei would connect .
perhap for a local call to a local comput , or even a long distanc call , a veri expens long distanc call , to a remot comput .
but these comput were so central and so preciou that we didn't care about the cost of phone and we couldn't share them .
i mean we didn't , everybodi didn't have a comput thei wai thei do todai .
so there wa a coupl of differ model .
on is that you had peopl do their work connect to comput over these modem .
and then more rare , you had comput to comput connect us what ar call leas line .
these leas line were veri expens .
thei were kind of like make a long distanc phone call <num> hour a dai , <num> dai a week .
thei were rare us in academ situat becaus thei were so expens .
it wa more common for a bank to us them to , sai , move all their data from their branch locat to a central locat onc a dai .
thei were gener slow , and veri expens , and thei were justifi in certain situat .
and so that's kind of how our world wa .
we had someth on our desk , and then we us that to connect through the phone line to a central comput that wa share with mani differ peopl .
we call it time share .
so thi next video that i want to show you just the first part of it , you don't have to watch the whole thing , is kind of in the 60s , and the 70s when i becam involv in comput , thi wa kind of the wai that we perceiv our comput .
you know , we would dial them up .
and thei made these clunk nois .
thi teletyp that you're go to see in thi video is a world war ii artifact , basic .
and my first program person wa on thi kind of a comput , make thi exact nois that you're go to hear in thi video .
and i think that the kei to emphas here is that , you know , it's kind of fun to look at back at thi old gui with hi horni rim glass .
but we realli were enjoi ourselv .
and you think , well i got thi fanci cell phone and it doe all these wonder thing , and i plai angri bird on it , and , and weren't these peopl not have fun ?
and the answer is we were have a great time .
we were connect , commun , calcul , comput , do all these wonder thing .
we just were do it sort of more slowli with simpler equip .
but even from the begin in the sixti and the seventi , peopl talk to peopl were an import part of the us of thi technolog .
so take a quick look at thi video and then come on back .
i'm go to show you the us of the michigan termin system , a larg comput system at the univers of michigan comput center , us the ibm model <num> .
we will be us a standard teletyp , and we will be dial in through the ordinari univers centrex telephon system .
thi system can be us by a telephon system anywher in the world , as long as we can dial directli into the comput .
these teletyp ar not wire in , but us the ordinari telephon system .
we start by push the origin button , which turn on the teletyp .
then we will dial us the regular telephon dial here .
now , there is a handset which is avail with everi teletyp system .
you can dial thi number , if you like , with the handset .
either on work , but as soon as you ar connect to the comput , do not us the handset for ani purpos at all .
now , i'll push the origin button .
i can control the speaker volum with thi littl knob , and so you can hear it .
now , i will dial a number , <num> <num> , or in a centrex system just <num> .
and now , the comput is come in .
i will turn the volum down .
the respons from the comput is the identif of the system .
the who ar you ? is the standard teletyp commun identif .
and the teletyp itself answer with it own built in code number .
in thi case , the teletyp at the tv center .
now i must sign on to the comput and identifi myself .
the number sign at the begin of the line is the indic that the michigan termin system is wait for me to commun someth to it .
the first thing i must do is issu the sign on command .
all command in the system start with a dollar sign .
now , the keyboard on the teletyp is veri much like the keyboard of a typewrit , includ a shift kei for the charact on the top of the kei .
we do not have upper and lower case letter , howev .
so the shift kei is onli us to get an addit set of charact , and in thi case the dollar sign is the charact abov the number four .
now , i will us the word sign on , which is the offici command .
s i g n o n .
there must be a space , at least on , after everi command .
and now i will give my own person comput center number , which happen to be w010 .
each user of thi system is issu a comput center identif number , through hi instructor if he's a student , or through the depart for faculti .
now , thi line ha been type .
it is be held by the comput .
but i can , if i see ani error in it , do some edit and correct .
we will see that later .
i am satisfi with thi line and now i will give the end of line charact , which must be given after everi line and i will remind you each time that i am do it for a while .
the charact for end a line us the control kei on the keyboard which is a special kei which indic that i want to us even addit charact besid those that ar ad by the us of the shift kei .
i hold the control kei down .
and while i hold it down , i can hit on of a number of other kei .
and in thi case , i will us the control with the letter q .
it's possibl to us the letter s also , but that's right next to anoth kei which disconnect the teletyp .
so , i recommend us q .
i will us control and q to termin the line .
and now , i'm ask to give my privat password .
i'll give an incorrect password , just some nonsens charact , and of cours end of line becaus i must indic that i am satisfi with that .
i am prompt that i'd better give anoth password and now sinc i intend to give the correct password , i will turn off the print so that no on can see what mine is .
to turn off print we us thi switch which is label hdx and fdx , for half duplex and full duplex .
we normal oper the teletyp in half duplex mode .
if i push it to full duplex , print is suppress .
and now i will give my correct password , push the half duplex again , and end of line charact control q , and it is accept by the system .
and i am now sign on .
the inform that's come out here is time and date of the previou sign on and time and date of thi sign on .
so , i can check if anyon did us my number sinc i myself did us it .
now , on of the first thing i will do is to chang my password have sign on correctli , i mai be concern that someon mai have acquir my password and i will issu a command that sai set .
which is us for set variou thing in the system , but in thi case , i want to set my password to someth els .
at least on blank after each command .
pw is the name of my password , equal and no blank space in here , and now i will turn off print again , give my new password , and termin the line .
the number sign indic that i'm now readi to issu anoth command to the system .
well now suppos we wish to start us the comput and we wish to enter some inform into a file .
i can have a number of privat file , each on with a name that i invent , that's us to me .
and i will attempt to creat a new file in thi case by issu a command , creat .
dollar sign , creat .
and i think i will illustr here the fact that onli the first three letter of everi command ar necessari .
so , creat , space , let's us the name ex .
there is a check that i don't alreadi have on , and of cours i knew i had on of thi name and we see now that it wa caught .
to show what name i do have , in case i've forgotten , let us run a special program that is avail from the comput center librari , call catalog .
so , i will sai , run that program .
the run command is us to activ all sort of program , my own privat program as well as the publicli avail on , space , and now the name of thi program is catalog with an asterisk in front .
i'll explain the asterisk in a moment .
end of line charact of cours .
now , it is list out all the file that i have under my privat number .
now , the intern form of a name like ex , is realli w010ex .
my own identif is prefix to it .
and thu , no on can refer my file unless he sign in under w010 .
he can't do that without know my password .
thu , i'm protect as long as i protect my password , which i do by chang it often .
now we see the name of the variou file that i had , includ videotap , which wa us to print out the titl to thi tape .
and i did want to creat a file .
i'd better think of a name that isn't in there .
so , let's think of a name , like , oh , x1 .
so i'll sai creat x1 .
now space ha to be found on the disk storag of the comput for thi .
it ha to be enter into the system catalog of file .
and now it's report back to me that thi ha been done .
the blank space after x1 remind me that i could have up to twelv charact in a name .
i didn't choos to in thi case .
now i would like to enter some line into thi file , and the line will be number .
i can ask for automat number of the line .
so we'll give a command number , n u m , and if i termin the line at thi point , it would number them start with on in step of on .
simpl on , two , three , four , et cetera .
but i will indic in thi case start with line on but will us step of three .
all right , it's now ask for line on and i will simpli enter some inform , thi is the time . and i misspel a word .
let's look at how we might make correct here .
on wai is to delet the whole line and start over .
to delet a line , i us control with the letter n .
thi insert a delet line charact into the line .
if i like i can continu with with the new line that i would like to have go in at that point , and i'll do that in thi case .
and end of line .
notic that sinc i ask for step of three , it is now ask for line four .
let me put some more inform in here .
and i made anoth mistak .
well , again i could us control n if i like , and thi time i'll termin the line at that point .
and i get an indic that the line wa delet .
i didn't get the indic in the previou case becaus i just continu with the new form of the line .
well , let me put the line in again .
and i made anoth mistak .
now in thi case i realli need to onli backspac a charact and continu .
let me backspac two charact to show how that could work .
the backspac is control and the letter a .
if i give two of them , i have now back space twice .
and i can start the word come again .
notic that the teletyp doe not physic backspac as a typewrit doe .
the backspac charact is insert in the line , and when the line is process by the comput , it is interpret to delet the previou charact .
we don't see that on the teletyp itself .
so i can add anoth line here .
all right , and now , let me turn off the number , so that i can begin to do some other thing with it .
i can give unnumb .
end of line charact .
that turn off the number and it's wait for me to do someth .
now , the file x1 is my activ file in the sens that whatev i do such as put a line in , goe into the current activ file x1 .
to protect myself from do someth inadvert and damag the inform in the file , i will releas it from be the activ file by give the command releas .
now , for instanc , if i chose to put a line in like two , i am protect becaus i don't have ani activ file .
now , sinc we did do a fair amount of modif for the inform in x1 , let us print out or list the inform in the file to see what actual got in .
list .
i can give the full name if i like , x1 .
look veri good .
now , let me show how we can put a line in if we want to make a modif .
i can put a line in with a number like two , which will go in the right place .
i could even us <num> .
so , let us make x1 the activ file again and put a line <num> into that file .
x1 wa activ the first time becaus it wa creat with the creat command .
i can't do that now .
but i can make it the activ file by us a command get .
it's acknowledg , and now x1 is probabl the activ file .
let me try line <num> .
the inform in the line start with the charact after the comma , the comma indic the end of the line number .
now let's verifi that it actual got in there .
i don't want to list the whole file x1 , it could be a veri long file .
it isn't in thi case .
what i'd like to do is list a part of the file .
let's sai , all the line in the number rang on through five .
there's a mistak , backspac , x1 , on through five .
notic that the line <num> wa insert in the proper place accord to it line number .
and the end of file comment here , even though we didn't get line seven , ha to do with the fact that the name x<num> <num> , <num> name a new file which wa in fact made up of part of an old file .
x1 line on through five ar in fact a kind of a logic file .
and when it came to the end of that file , it indic end of file .
there ar other wai to make new file out of old file .
we can us a process call explicit concaten .
to do that , let me , for exampl , list a file made up of piec of old file .
i will sai , list .
i have a long file whose name is ex .
so , i will take line <num> through <num> .
oh , that's too long .
let's back , cancel that out , <num> .
now , with the plu sign , i explicitli append to the end of those line or concaten to them .
line some addit line .
let's sai , line <num> and <num> .
notic that if it's the same file again , i don't need the name ex again .
now , i will concaten some line directli from my termin .
so , i need a name of my termin as a file .
we us asterisk , sourc , asterisk .
that is the name of my termin as an input file .
and then i will , mayb , take some more line from file ex .
if i just give on number , it mean all the line from <num> on .
and that's a long file , and so in fact , we will see a fair amount of type at that point .
in fact , that rais the question , how do i interrupt someth which is go on that i would like to stop ?
there is a special button on the teletyp call the break button .
it is locat in variou place on differ model of the teletyp .
in thi case , it is right here .
now when i want to interrupt , as we will see , whatev is go on , i will push the break button .
at that point , becaus of the wai the teletyp is built , the keyboard lock .
and i must , then , push a button which occur in anoth part of the teletyp , call the break releas button .
thi button will light , and when i push it , it will then unlock the keyboard .
now , let's do it and we'll see how the break process work .
i will now give the end of line charact .
so , that the line i just type will in fact go in .
line <num> , <num> , and <num> .
these ar line from some comput program , <num> , there wa no line <num> .
it is now wait for line from the file call sourc .
and so i must give a line .
and sinc i'm list thing on thi termin , when i give a line as input , it'll come right back out and be list , as if it were in that file .
it's the first line in that file .
well , now i have to have a wai of sai that's the end of thi file that's come from my termin , and so there's a special charact , control c , for end of file .
now that's a charact that went into the line .
i must now still termin the line .
and then i will get an acknowledg that it's gone in the file .
and now it continu to line <num> of that old file , ex .
that's an interest line .
and i know that thi file is quit a long file with some program in it and so now i will hit the break button and termin what's go on there .
i get a respons from the comput that attent wa indic .
now , i will hit the break releas button to free up the keyboard .
which is light .
when i push it , it goe out , and now i can do someth from the keyboard again .
the number sign indic that after an interrupt by the break button , the system is readi to have me tell it what to do again .
now , i'm go to illustr the us of on of our languag processor in the system , a languag call pil , p i l , for pittsburgh interpret languag .
and pil is store , the processor for the languag is store , in a file whose name is asterisk p i l .
i will run that program , that is the pil program itself , by us the run command and the name of the file in which the program is found .
i could indic that the sourc of input for pil is from some other file and have it read that file directli .
in thi case , the sourc of input will be from my termin , and so i will not sai anyth about it and it will , as we sai , default to the termin .
we will see the comment execut begin when the loader find that program and load it and begin it , and now pil itself is identifi itself as readi to go .
i will onli introduc some of the featur of the languag .
a full descript of the languag , as well as inform about us the teletyp , is avail at the bookstor in a small booklet call introduct to pil in mt , written by professor larri flanagan of the comput center .
now let me illustr some of the featur of the pil languag , but onli a few of them .
for on thing , i can ask for numer express to be comput easili .
three plu four minu two should come out five .
fine .
i can sai type the squar root of <num> . <num> .
i can ask for certain trigonometr function like the sine of the squar root of , notic i have a differ wai of write squar root here .
it's not complet free english howev .
and these ar the onli two wai .
now i can ask for , for instanc , the valu of x plu on .
and , of cours , i get my wrist slap becaus i don't know what x is .
and so i can set , there's anoth pil languag command , set x equal to three .
and now i can ask for type x time x minu on , for exampl .
okai .
now it's possibl in pil to build up a packag of statement into a program .
and for that we give a line number , which consist of a number in front of a decim point , that's call a part number , and then the step number .
i might sai step <num> , which i might give as demand y and z .
now that line wa not execut immedi , becaus with a line number , it indic it to be put awai to becom part of a packag program .
let's make line <num> type y plu z well as y and z , and then line <num> is , can be go to step <num> .
so now , we have a program which will start off by demand two number from me , it will type out their sum and each of them , and go back and demand two number again .
now in order to actual carri out thi comput , i have to sai do that set of instruct .
sinc all these began with on , thi is call part <num> .
we could have part <num> , etc .
so i will sai , do part <num> .
it's ask for y , as we expect .
i'll sai y is equal to five .
it's ask for z .
z is equal to four .
and now the instruct to type the amount is there , and now it's back to begin , ask for anoth y .
seven , nine , and we see we can do variou thing .
now , how do i stop thi , becaus it's alwai come back to ask for more ?
well , in pil , i could give a break .
i could hit the break button , but in pil , when it want more inform and you have no more , you can us an asterisk , which us the shift kei and wai up here the asterisk , and some charact , ani charact at all other than blank , i us x usual .
end of line , and that indic to pil that i interrupt the program at step <num> where it wa ask for input .
incident , if i want to see what step <num> wa out of some larg program i could sai type part <num> , and it'll tell me what part <num> wa .
well , there ar variou thing we can do in thi languag .
i will illustr on more .
i can sai for , and without a line number it'll be execut immedi .
for i equal to on from on to five by two , type i plu on .
if it goe from on to five by two , it'll go in on , three , and five .
i plu on should be two , four , six .
so let's see if it is .
and now pil is wait for someth els .
well , at thi point , i will stop illustr pil and go back to the mt system .
be care to distinguish that i have been run a particular program in the system .
all of the file manipul and edit and correct were at the level of the system itself .
if i am talk now to pil , if i want to return to the system to , for exampl , sign off , i must go back up to level of the system itself .
i do that by tell pil the command system .
execut termin , and we ar now back at the system .
let us review the command we have had so far .
i have a file which ha the variou command in them .
and if i copi that file , we should see some that we've seen , and there will be a coupl that we have not yet seen .
sign on .
creat to creat a file .
get to make a file activ .
number to turn on the automat number , and unnumb to stop it .
releas to get rid of an activ file .
list to find out what's in a file .
we have seen set and run .
we have not yet us copi , although i us it to get thi command out , thi list of command .
but the main us of copi is to make a copi of on file into anoth on , perhap a temporari file to be abl to make chang in it .
so , for exampl , i will make a copi of the file x1 .
i will copi it to a temporari file , whose name will be minu someth , minu j .
now , the minu sign indic that thi file is to be creat just becaus i've mention thi now .
and it will be destroi when i sign off from thi termin .
perman file , whose name don't begin with minu , such as x1 , ar not destroi .
i could come back next week and find x1 still intact .
it take a littl while to creat a temporari file becaus there is check to make sure that i don't have on alreadi by that name .
it is now readi , and for exampl , i will list just a line or two out of j to convinc us that x1 wa copi into it , let's list line , oh , just line on .
fine .
now , j will be destroi automat but , well , befor we get to that , let's copi j back into x1 .
in case we want to , after make some chang , preserv it .
now if we simpli copi it back into x1 , onli the line that arriv from the other file , from j , will be replac .
ani old line will still be there .
if i don't want to have a mixtur of old and new i will do well to empti out the content of x1 befor i copi the new form of it back in .
and so i will us a new command call empti x1 .
thi doesn't destroi the file , it onli eras ani content that it ha .
and now , thi is a veri import point .
we don't like to destroi inform unless we ar sure that it is the right inform to be destroi .
i'm be ask to confirm that it is x1 that i want to empti , in thi case .
i give ok , and that is a posit confirm .
an exclam mark would do , or o period , k period will work .
but anyth els will not .
so now x1 is , in fact , empti .
it is still there .
if i want to complet get rid of the file , i would sai destroi , as i will after we copi j back into it .
that is done .
and now i would have a new copi if i had made modif to j .
now , i will sai destroi x1 .
it ask for confirm .
i will sai ok .
and now , for instanc , if i sai get x1 , well it sai readi , but as soon as i try to put someth into it like that , it will report there isn't ani .
as soon as it come back , i will sign off from the comput .
i will sai cancel in thi case .
there isn't ani other that i'd like to do .
all right .
now , i will sign off from the comput by issu the command sign off .
and now i will get some inform summar the session that i've just finish .
the time of go off , the elaps time .
we have us thirteen second in thi case of comput time .
and then there's variou other inform .
the approxim cost of thi particular run wa <num> . <num> .
thi present ha been design to make your work on the teletyp termin easier .
for a review of thi materi , you mai wish to view thi materi again , or to actual try it out on the teletyp , if you have a comput center number .
if you have ani question , ask your instructor , or someon in the counsel room at the comput center .
your attent pleas .
sinc thi film wa produc , some chang have been made in the mt system , three of which we now call to your attent .
first , to backspac so as to delet a charact .
instead of control a , us control h .
instead of control a , us control h .
second , while control q mai still be us to signal the end of the input line , the return kei on the right side of the keyboard mai also be us and it is usual more conveni .
us the return kei to end the line .
third , when dial in , if noth print on the teletyp within a few second after the telephon connect ha been made , type the word go .
g o .
follow by the return kei .
the word go , and the return kei .
thank you .
so i just want to give you a sens of the what the end user's experi of us comput and commun in the 60s and the earli 70s wa .
like i said , thi wa a fun time .
if you can't commun to peopl thousand of mile awai and all of a sudden thi gadget on your desk allow you to do it , even if it's gigant and even if it make a lot of nois it's still impress and it still chang how you view the univers , right ?
the fact that your colleagu can be taken through thi keyboard .
and your colleagu ar on the other side of thi keyboard .
that is a transform notion even if the technolog these dai seem veri crude .
and we went through a lot of hoop , becaus comput were expens , and rare , and had to be heavili share to justifi their cost .
and so in the next lectur , we're go to start see how we improv how we could share equip , and make the share not requir direct dial up the wai it wa in the earliest dai where you , if you want to talk to a comput a thousand mile awai , you had to pai for a long distanc call .
so that we're look at how to make connect perman so that we can us these thing a littl more natur without such great expens .
so see you in a bit .
hello , and welcom back .
i just want to give you sort of a sens of the actual physic experi of connect and commun and comput in the 60s and the 70s .
the 70s wa when i got my start and the lucki peopl got to us teletyp , like wa be us in that video , and other peopl us punch card .
you also heard the squeal sound of the data be convert into sound and back and forth .
you know the kei goal wa there would be , if you were lucki , on comput within a <num> mile radiu of where you were sit so you could us a local phone call and you could be on all dai and do thing all dai long and that wa realli excit and a lot of fun .
and thi wa sort of a common , if you were sort of , you know , todai you have a <num> , <num> laptop , the fanci peopl had these teletyp right in their offic becaus then thei could conveni sort of do comput , and not have to go somewher to do that comput .
so that's pretti excit .
so dial up wa kind of like the wai the campu oper .
but you could also do data transfer with leas line .
and the typic thing about leas line is there the phone compani that's go between two citi dig a hole and put a cabl in and ha some number of copper wire in between those citi .
thi is back then , of cours it's fiber optic now , but back then it wa copper .
and everi time you would make a call between those two citi , it would have to find a free piec of wire and connect it up so that your call , the audio of your call , would go through that wire .
and if you want to , you could pai them to leas on of those piec of wire .
it meant that peopl couldn't us that wire for phone call .
so you would sort of take it out of servic .
and if thei had <num> wire between two citi and you leas on of them , then thei had <num> wire .
and so it wa rather expens .
and realli veri importantli , the cost wa base on distanc , right ?
a mile , versu five mile , versu <num> mile , versu <num> mile , the cost would kind of go up linear base on distanc .
and so that's , that's a kei thing that distanc is import in these veri limit resourc copper wire where you had to dedic a wire either to a phone call or to data .
and so , we end up evolv , in the academ world what we call store and forward network , with the sole purpos of compromis everyth so that we would keep our cost that we paid for our phone line to a minimum .
we want to commun in academia with peopl all around the countri and all around the world , so we had to keep the cost low .
and so we would leas a leas line , you know , so here would be us sit with termin in our offic and we would us dial up to get connect and so thi might be a few mile , like <num> to <num> mile , or <num> to <num> kilomet .
and that's what you had to , you had to live near a comput or have an offic near a comput and then you would us the local telephon network to dial in to do your work .
and then there would be on connect out the back of that comput to anoth comput that would also have user on it , and then other comput with user on it , other comput with user on it .
so thi might , for exampl , be michigan , thi might be stanford .
stanford would have a comput , michigan would have a comput .
the stanford peopl would be connect to the stanford comput .
stanford would have on littl connect off it back end and to the rest of the world .
so you sit here want to talk to somebodi sit here , so thi is how it work .
you're sort of alwai connect so your data would be insid , you know , you type an email into the comput and then you would sai , send that out to my colleagu at stanford , and so the problem is everyon els wa send and so let's sai for exampl that somebodi sent a pretti big thing .
big purpl circl is what thei're send .
and then somebodi next to you an offic down send a kind of medium size orang circl .
and thei're sit there be store in the local comput .
and then you final finish type your email messag and it's kind of a small green circl .
and now , the problem is , you're in a line .
the wai thi work is the softwar would keep a queue or a line of those who were go to us the line , and then it would sort of start stream thi stuff out .
and onc it start , it just kept do the same file , over and over and over .
now if it di , it would just start from the begin again .
and so , it take some time for that thing to move across the network .
and then when it move across the network , the next messag in line would start to be sent across the network .
and it would us that link come on , finish up , there we go .
okai .
it take a while for these thing to move across the link .
and then final , and thi could be ten minut later , final it wa your turn .
and your stuff would work it wai through the network , and get to the next comput .
the problem is , onc it's in that comput , you'd face the same problem , becaus if all these messag ar go from michigan , oop , forgot to hit the button thing , from michigan to stanford and thei're all on the wai , thei got to go through all these link , becaus there wasn't a direct connect , becaus the direct connect to stanford would be veri expens .
and so we find ourselv in a situat where if you're store , you sat on these comput .
and if there wa an outag of a network , or sai thi on , thi might be hour .
you might be sit on thi comput for hour , on their disk drive , right ?
not even in their memori , you would be sit on their disk drive for an hour , and then final thi would come back or mayb thi comput wa down .
thei would come back up and then the data would start flow again .
so it wa haphazard .
i keep tell you , it wa awesom , it wa just slow , it wa awesom but slow .
so don't , don't , don't feel sorri for us , we love it , we enjoi it , it wa great talk to colleagu all over the world .
so we end up with a network architectur that encourag more hop , which mean it encourag more latenc .
it encourag the likelihood of get stuck behind someth larg as it work it wai through the network .
so if , for exampl , we were go to send a messag from east lans to , sai , the east coast somewher , and we would have two connect mayb .
we would have a connect between michigan state univers in east lans and ann arbor , and then we'd have a , the data would get store and forward in ann arbor and then it would get further sent to cleveland .
and , if you think about it , the wire between ann arbor and cleveland goe like thi .
right ?
thei probabl buri wire under the ground .
and if we could actual convinc toledo , the cost of the big wire versu the cost of the two shorter wire , the cost of the two shorter wire is almost exactli the cost of the big wire , becaus it's not realli a big wire .
and so if we can convinc toledo to join our littl club , then we don't increas the cost of our commun becaus we're , it's about the same , right ?
the wire length is about the same .
but we've got on more school for the same cost .
and if you keep do that , and you keep sai oh , well let's put a school here , and put a school here , and put a school here , in the middl of the lake , and put a school here , in the middl of a forest .
the econom said that you could connect more school with effect fix cost by shorten the distanc everi time you made a connect .
and sometim thei would sort of make two connect .
but the wai it often work wa , from the perspect of thi whole thing , is the data would sort of tend to go , you know , up to some central locat and then kind of fan back out from the central locat .
and , and so these , it , there wasn't a lot of redund link in thi whole situat .
so we find ourselv in a situat where we can save more monei , save monei by just simpli ad hop .
so in thi environ we had a lot of email .
back in those dai we didn't have a lot of imag .
comput , you know , bare could do upper and lower case sometim .
it wa impress when we final got to upper lower case , let alon imag .
and so for the longest time everyth we did wa veri text orient .
sometim we would send small file like program to each other , but it wa either text .
and these dai , those ar tini , it's almost like sm , right ?
it's almost like the size of an sm messag wa the size of a typic mail messag back in those dai .
imag , we didn't have comput that could even displai them and so it hardli matter .
so , you focus your life on thi on comput within a <num> mile radiu and it had thi connect to like , a snake like connect that sort of went over hill and dale and through somewher and it final got to stanford or wherev your mail had to go .
but again , it wa awesom to be abl to sit at a keyboard and talk to peopl all over the world , even though it took four hour .
we didn't send as much email back then .
and a number of network came up .
on of them that becam sort of pretti wide us wa a thing call bitnet , and it wa where everyth kind of came back to princeton wa on of the main hub of bitnet .
and it work realli well , and there wa a wai to sai , oh , i need on more school , and we'd go find the on that ar closest and we'd make the connect .
and so that's pretti much how the averag academ saw network .
on common campu comput and sort of thi weird , slow , store and forward network that work well enough .
but dure that exact same time , from the 1960s to the 1980s , the us depart of defens wa invest in a research network call arpanet .
and arpanet wa fund by the militari , arpa , defens advanc research project agenc .
and later in the lectur we'll meet vint cerf , who will tell the stori much better that i can tell it , but i'll just tell you a short version right now .
a lot of peopl wonder why the depart of defens start thi project and a lot of peopl sai , oh it's becaus of fear of nuclear war .
and the project wa veri long , and there were variou motiv throughout the variou phase of the effort .
but , if , base on what i've been told and what i've read , i think it's safe to sai that the primari motiv wa to improv the us of their comput equip that thei were us for militari purpos , make it easier to access them , make it so peopl didn't have to travel as much .
it made it so that peopl could work from their offic on mani differ comput .
and also so that peopl could actual talk more effect , so thei could send email real fast , so that the email would move faster for militari peopl .
so the first thing is realli kind of an end user focu to make them more us to peopl and get peopl work togeth more effect .
that wa the first kind of heavi motiv .
the second motiv wa , actual had to do with reliabl , reliabl and redund and resist to partial failur .
and that realli wasn't so much about nuclear attack , that wa more about battlefield attack .
so the notion that onc you start have all these link and you make them wireless , and you put them in trailer on a battlefield , and , you know , you've got a few hundr mile and the data's move back and forth .
then we have to worri about , in a battlefield situat , on of those trailer might get hit .
and how would you keep the network run if on of those trailer got hit ?
so , the notion that we have sort of a whole nation and we ar worri about commun , i'm sure there wa some worri about that , but it wasn't realli the main reason .
i mean , the excit thing to me is the mean reason wa a veri peopl center reason , of peopl work more effect .
but thi wa a rather exclus club , rather exclus network , becaus it wa onli for the peopl who were either militari , or fund to build it .
so in <num> there were four host on it .
again , that's research .
and these were leas line , the same on we were all us to do our email , and thei were expens , veri expens .
but becaus it wa a larg grant , thei just paid it becaus the research wa not about the monei .
the research wa if you have these connect , what would be the best wai to us them and how to deal with redund , and how to deal with multipl path to the same place .
all that stuff is interest research question that comput scientist spent mani year conceiv of .
and so by <num> , it look like we got about <num> .
we got a coupl of cross countri link and multipl connect , and thi look like a great testb to see , you know , so all of a sudden thi part goe down , how quickli can we rerout around the outag .
and liter , these thing these dai rerout around outag in far less than a second , and so that's realli impress .
our current internet ow it histori to the research that wa done in the 1960s and the 1970s .
but what wa fundament differ between the store and forward network of bitnet and thi arpanet research network wa the notion of packet switch .
so the , it's a real simpl concept .
it just take a littl more complex softwar to solv .
the store and forward network would start send data across the link and then keep send it until it wa done .
that wa seen to be veri effici .
you didn't want to like , you want to us it as fast as you can and then put the next on out , and put the next on out , and put the next on out .
it wa realli simpl and it dealt with outag in a simpl manner by store them all local on the disk .
but what if instead you made it so you broke everi messag let me see if i can even draw thi .
i should probabl make a slide about thi .
so , if there's a network here , and here's my comput and it's got a network connect , and it's got on realli big messag , broken into piec .
mani piec .
and it send the piec on at a time .
if you show up with a realli short messag with onli three piec , all you have to do is wait for on piec to go and then your piec goe in and then you share for a while .
right .
you share for a while and then your have made it through becaus you onli have three packet .
thi ha like <num> , <num> packet .
and then onc your messag is through , thei resum send thi data in order .
and so you were abl to sneak and bypass the traffic jam that wa thi larg amount of data .
and so , that's the idea of packet .
and packet ar these chunk to sai , what we're go to send is a piec , and then at the end of that we're go to mayb send a piec of a differ messag .
it wa allow simultan multipl messag to be in flight at the same time .
that's packet switch .
and what happen then is we also end up with these special purpos comput call router .
thei're still comput , but thei weren't do store in the same wai .
thei were just forward , thei weren't store and forward , thei were mere forward .
so we'll get back to that in a second .
so my favorit analog to talk about how packet work is postcard .
so let's sai that i want to send a <num> charact messag to my friend daphn at stanford , but all i have is <num> charact postcard .
so , off i go .
i break my messag into three bit of <num> charact .
i write each piec on a differ postcard .
i address with a from and a to address , from chuck to daphn , and then i give a sequenc number so that when she get the postcard she know what order to put them back togeth .
so i have to label each of these .
and these ar fix width , fix length .
thei , you know , it's like a packet , right ?
i'm break a long messag that might be veri long into noth , so that each piec is a certain size so that we can all share it , right ?
and so then what i do is i send these , i put them all in my mailbox .
and then i wait and thi magic thing call the post offic pick them up , put them in build , peopl sort them .
thei end up on truck , thei end up on plane , on train , on donkei , by hand .
and each of my postcard might take a differ rout .
i mean on of my postcard , i'll show you on a map here , now on of my postcard , nope not that on , let's do that .
on of my postcard , you know , goe from michigan to chicago to kansa citi to san francisco .
anoth of my postcard goe from michigan , to chicago , to dalla , to denver , to kansa citi , to chicago , to san francisco .
and my third postcard goe realli crazi , it goe to cleveland , then it goe to atlanta , then it goe to washington d . c .
and then it goe to chicago , and then it goe to kansa citi , and then it make it to san francisco .
now the fact that thei took differ path and thei might not even arriv in order , some might get past each other , thei might get stuck somewher .
it doesn't matter , becaus each on of these ha been label both with the from and the to destin .
so each of these intermedi locat doesn't have to get it to the final destin , thei just have to get it closer .
thei make choic and even if thei make the wrong choic , it can be sort of dealt with on wai or the other , okai ?
so , thi is some big mysteri , it's call the post offic .
it just take these littl card with label and move them .
it doesn't know if that's a youtub video or if it's an email , it doesn't realli care , it just ha these littl chunk to move around that have from and to address .
and that's the essenc of the network , the internet , the cloud .
that's why we draw thi pictur , you'll see like , ooh , it's a cloud , and that's becaus it's , don't worri about what's insid here , it's all super mysteri and don't worri about it , it just come out .
so after all that happen , daphn , who happen to have the exact same mailbox as i do , kind of rare .
we both have a mailbox that's copyright creativ common .
that's what's cool about thi mailbox .
at some point later these thing start appear .
she goe like , whoa , look like chuck is send me a note .
but becaus of hi limit of postcard he's onli sent me on .
i know who it's from and i know who it's to , and i know that's the first of some number of messag .
and then the next dai out come anoth on , becaus that wa the on that sort of , went the more southerli rout .
and she goe , well i'm miss someth , i'll just sit and wait and see what happen .
and then final , mani , mani dai later , the on that took the circuit , cir , most circuit , most roundabout rout come and now daphn can reassembl the messag becaus she ha the sequenc .
so she simpli put them back togeth .
<num> , <num> , <num> , boom .
so she put them back togeth , she ha it , she sort of throw the post card awai and she ha the ultim final messag .
that's packet .
packet ar break a big messag into small part , label each on of them individu , and then throw them into the share network .
and so thi is what it look like .
the post offic in thi is call a gatewai .
okai .
come on .
gatewai .
okai .
so , that's a gatewai .
so , here's michigan , here's stanford .
stanford ha a gatewai too , that's like their post offic .
in the middl is the post offic box .
right ?
and the post offic ha intermedi locat .
and it ha truck and locat .
these ar link and router .
and messag can take differ path .
right ?
and then thei arriv and thei're reassembl .
and we have , like , the abil to hook from home , and stuff like that .
so there's a local area network , lan , and there's thi sort of like internet , the network of network .
it's like the post offic .
and it still break thing into packet , thei still come out as packet , and then daphn ha to reassembl them on her comput to creat the messag .
so , it , so the research network arpanet solv a lot of engin problem , and that wa sort of what thei did .
so here is an exampl problem to solv .
now , none of the mailbox , none of the router , none of the post offic , know exactli where the thing is go .
and thei don't transport it to the final destin .
all thei do is thei transport it to the futur , to a further down destin .
but what if thei get it wrong ?
what if on , thi is like michigan , thi is chicago , thi is dalla .
and what if michigan think send to chicago is a good idea ?
chicago think send to dalla is a good idea .
and then dalla think send it to michigan is a good idea .
well , then michigan's go to get it again and send it back to chicago .
and so then what you end up with is thi situat where your packet , your data , is in a loop , right ?
thi wouldn't be good for the post offic and it's not good for the internet .
so , you have to sai , how do we solv thi problem when someth's wrong , right ?
it's , you , you wish it were perfect , but it's not .
and so thi is the kind of research question , as to how to solv thi kind of problem , and we'll talk more about thi in a bit when we get into a littl more technic detail .
but i just want to sort of sai , that's the kind of research and engin that took liter <num> year , and four differ version of it , of the arpanet to get right .
and so , by the end of the 1970s there wa quit a sophist network .
like i said , thei'd rewritten it four time .
it had gotten to be veri sophist , it had been a good invest .
thei had been care about understand how to improv it each time thei rebuilt it .
and so it wa realli a fine work piec of softwar , and the peopl who us it at these research univers and at the militari , it wa kind of like a futurist world , right , you could send email and a second later it would appear , right .
it wa realli quick and everyth wa nice and you could even have instant messag like interact where it went right then .
and the problem wa that thi is a small group of peopl .
thi is mayb , look like <num> or so .
that wa all the comput on the entir internet , right ?
i mean now we have our cell phone and we have billion of them , right ?
but thi is like <num> .
and so a real question is how did thi go from <num> comput of a veri narrow group to a much larger group .
and the answer to that question is at urbana champaign , illinoi .
and so , at the same time that , thi kind of goe back to bletchlei park , right , where the comput were part of scienc .
throughout the 50s and 60s and 70s scientist , much like the militari , were realiz comput were mighti us to advanc scientif research .
and so the nation scienc foundat would fund univers to bui comput , and thei'd sai give me ten million dollar to bui a comput .
and anoth univers would be like , give me ten million dollar to bui a comput .
and then three year later the first univers sai , my comput is obsolet , i need anoth ten million dollar .
now the research question were good research question .
and thei were import to societi .
but the nation scienc foundat got tire of give ten million dollar to everi , everybodi who .
wait , hang on a sec , let me . . .
as a matter of fact , i wa part of thi becaus i us to be a high perform comput gui .
thi is a convex c3800 supercomput .
i would be about thi tall on thi supercomput , thi is a love and veri expens model that i wa given after , afterward , and i wouldn't throw it awai becaus thi wa from , like , <num> .
and basic i want on of these terribl badli .
each on of these is about two million dollar , so thi is like two , four , six , eight , ten million dollar .
and i so badli want thi , and i thought that i deserv a ten million dollar toi , and i could do such great research .
but unfortun everybodi els want the exact same thing .
and thei were import , too .
so the nation scienc foundat said to themselv hei , thi isn't go to work veri well if i can't find my pen .
you know , we're not go to be abl to , we're go to make a network .
how about we put a few of these thing in , and then make a network and connect them togeth .
of cours it's never as simpl as that .
so now we're go to meet larri smarr , at the nation center for supercomput applic , n c s a , at the univers of illinoi urbana champaign .
and larri wa the director of ncsa and on of the mani peopl , but on of the most instrument peopl , in creat the nation network that we now think of as the internet , and get it move it from be a research project to be a project that we all , both academ and regular peopl , that we all can make realli good us of .
and so let's take a look at larri smarr .
i'll show you the berner lee footag , it's i have to tell you that i'm a giant fan of your .
oh realli ?
ye i am .
i mean i don't know you and i've never met you but i , it seem to me as though mayb , mayb i'm just , it's just the larri smarr imag rather than the real larri smarr .
you'll have to tell me what that is .
i'm the on person that never get to see that .
the larri smarr imag ?
yeah , right .
you don't know when you're insid it .
yeah .
i didn't know you were an astronom .
you know bob stein by ani chanc ?
sure .
bob stein is my mentor .
realli ?
oh yeah , we gave bob lot of time .
yeah , i heard he's like in top five here .
bob is the gui that taught me high perform comput .
i go wai back with him .
tom wolf us to be a good friend of our , befor he had hi stroke or heart attack , or whatev it wa .
and , but i mean to me it , after .
so we don't get disrupt .
why don't you take thi and put it over there ?
tell tara to hold my call , as to the why an astronom got into thi . . .
yeah , go ahead .
right .
okai .
i mean tell me , tell me how thi ncsa start .
i mean , the , the whole purpos of thi .
mm hm .
is , is , it's sort of about ncsa .
it's not as much about netscap and mosaic .
i mean , i'm curiou , as a high perform comput gui , about how , why , it happen here .
right .
which is , i think yeah .
i can tell you about that .
.
okai .
so go ahead .
tell me about ncsa .
okai .
doe the littl red light go on when you're yep .
i'm record .
okai good .
well , i am a train relativist astrophysicist .
and i got my ph . ds alwai in physic depart , work on astrophys problem involv gener rel , ga dynam , and so forth .
so in the 70s , when i wa develop what is now call numer gener rel , which is the wai to solv einstein's equat for dynam of black hole , collid black hole , or in astrophys that requir gener rel like supernova event and so on , i had to go and get a top secret nuclear weapon clearanc to get access to supercomput , becaus in the mid 70s the onli place to get a supercomput wa either at livermor , lo alamo , or in on area which wa weather .
now astronomi ha alwai been a driver of supercomput and in fact on johnni von neumann's comput that wa built by the institut , half of that went to armi , to aberdeen .
half of that wa us of cours for the armi for trajectori calcul but the other half wa us for stellar evolut .
so astronomi and von neumann's interest in weather meant that astronomi and weather for <num> year basic have been domin driver of supercomput usag .
and yet to do pure astrophys you're have to get a top secret nuclear weapon clearanc .
now , nobodi seem to think there wa anyth unusu about thi .
and so i just went ahead as a post doc and i would get a few month in the summer , work <num> hour a week .
and then , the rest of the year i'd had to live off of that .
i'd go back to harvard where i wa a junior fellow .
try to explain to them about , you know , on could solv the law of physic that we had been lai down for <num> year in incred detail for engin devic like nuclear weapon that put on earth temperatur of the center of the sun , stress beyond anyth that we could imagin in academ problem that we were try to solv in lot of disciplin .
so , thi thing could revolution academ research .
well , nobodi got it .
i mean it wa like , i realli felt like i wa transit in a fly saucer between thi advanc civil at livermor , and the stone ag cultur at harvard , and harvard wa as advanc as ani place in think about thi , so it wa a , what , i didn't figur thi out until it wa in the earli 80s and by then the first crai had gone into the contin of europ at an open scientif institut , the max planck institut of physic and astrophys .
so i'm over there in the summer along with peopl like dave arnet , who wa on of the great supernova supercomput gui in our countri , and peopl in chemistri , and it wa like pari in the 20s with all these expatri sit over there .
and we're like try to figur thi out , like thi is an american built supercomput , right ?
why ar we in munich , right ?
i mean thi is veri strang .
so , but you know in america we don't question the infrastructur somehow .
i mean it's just like it's either there or it isn't there and that's just the wai it is .
but i wa have a mass of beer late on night , actual i think it wa the second mass of beer , with my german host who had also been born like i wa , postwar , and he final turn to me and he sai , aren't you asham of yourself , you big , rich occupi countri ?
you come over here in our littl countri and , and we final get enough monei scrape togeth after world war ii to bui on of these supercomput , and you american come over here and us up our time .
he sai , how did you gui ever win the war ?
you know ?
what is go on here ?
and thi final just sort of just stimul me into sai , what is go on here ?
thi is nut .
and i went back and i found out , for instanc , that after the sputnik program , the feder govern had fund the univers , built the scienc build , start the supercomput center , ibm would go around and give awai almost the mainfram , and so the scientist in the 60s took it for grant that thei had the fastest comput in the world in academia .
but about <num> , with the start of the vietnam war , and with all kind of gun and butter issu and everyth els , that stop .
and in fact , to give you an exampl , by <num> , half the number of ph . ds and engin in engin wa be gener in our countri as there were in <num> .
so , there wa thi complet sever of the sputnik era partnership with the feder govern and it wa particularli bad in comput .
to give you an exampl , when i wa at livermor in the 70s , there were four cdc 7600s , which were just on of the finest supercomput ever built .
no american univers ever took deliveri of a singl cdc <num> .
in fact , the univers of illinoi , when i first got here , had a cyber <num> which wa a retread , a second design manufactur of , of thi thing .
and we were on of the first univers that had it , and peopl all thought that , you know , illinoi natur wa wai ahead of everybodi els .
so it's like , we were just complet divorc from the privat sector that wa gener these wonder machin becaus of feder polici , which wa to sai , these thing ar onli , ar so valuabl that we can onli afford to put them into war environ .
so , after thi german encount i came back and i said , well gee , i wonder how mani other scientist like me ar there .
so , at the univers of illinoi , i start call , cold call my colleagu , and sai hi , you don't know me .
i'm a littl assist professor but i bet you that your research is block by lack of access to supercomput , and thei'd sort of sai like , who ?
crack , crack .
who is thi ?
you know , crank call and but we'd start talk in chemistri and biologi and agricultur and so on and , and sure enough , it turn out that , that , that wa true .
thei knew how to do the scienc , thei just didn't have access .
so i said , well send me a littl prospectu of what scienc you could do if you had a supercomput .
well , i end up with <num> faculti and <num> depart on on campu and i thought , thi is got to be all thi wai all over the countri so it wa , i realli said , well gee , somebodi's got to rais thi issu .
and about that time there had been a lax report , that had the feder govern had done that began to uncov some of thi stuff and thei still weren't , i rememb peter lax , he wa on of the greatest mathematician , head of , on of the top peopl in the courant institut , a long time advoc of thing comput , and i had thi long , long battl with peter , becaus in the draft report of the lax report , it wa not , it wa go to sai , well yeah , we ought to get on of these supercomput and make it avail to the univers but , you know , let's put it at livermor or put it somewher that peopl know how to do thi stuff .
and a univers wa not on the list of what the lax report consid to be appropri site for a supercomput .
so i had thi long battl over the telephon , i rememb , with peter lax .
it wa sort of david and goliath becaus i mean he wa thi giant of the field and i'm nobodi .
and i , i final convinc him not to exclud univers as a possibl , even though he felt that it wa fairli unlik that ani of them would be abl to plai with sharp instrument and not hurt themselv .
so , i mean , you've got to understand the world wa total differ when the supercomput center's program wa come into be .
and peopl , it's so hard for peopl now on the web and everyth to go back to that time .
there wa no internet , you know ?
there wa , there wa these wonder peopl , vint cerf and bob kahn and all these peopl , bill joi , who had develop tcp ip , and embodi it in the arpanet .
thi wa a few comput scienc depart and militari , okai ?
nobodi in a physic depart or chemistri depart ever heard of the arpanet , much less had ani access to it .
but it wa obvious the right idea .
and so onc we got the congress to put through monei for a nation supercomput program , then there wa a nation competit , and so on , and the five center were select .
the first thing then that nsf realiz , well okai , now we put these in place to be provid access to academ scientist , and yet , like , thei have to fly to champaign urbana like i had to fly to livermor , okai ?
thi isn't right .
so there were a lot of discuss then .
but the troubl wa that the telecom lobbyist in washington would block ani discuss of the feder govern put in the kind of network we have todai , which is what peopl want .
i mean , everybodi knew that thei want to have a ubiquit email person to person network .
but as soon as thei'd start talk about that the telecom lobbyist would come up and sai , no wai , gui .
that's privat sector .
don't get the feder govern involv in that .
stai out of it .
so what we learn earli on is real interest .
it's like if we had argu instead of the supercomput program , let's get the feder govern to bui everybodi a person comput , which wa ibm person comput wa two year old in <num> , and put on peopl's desk , okai ?
again , thi would be an interfer with the privat sector .
so , but we said oh , we'll just take a few of these esoter supercomput .
and , is that okai ?
that's right , there's no market there , that's okai , the feder govern ha a role .
well , it wa the same thing with network .
what we said is , we just want to put a high speed backbon across the countri to connect the five center and , and the telecom peopl said , okai , that's cool , you know <num> kilobit wa the nation high speed backbon .
less than isdn todai .
yeah , that's not a market , okai ?
and , and so we've got a few of these weird supercomput type who ar out in the univers who want to hook into that .
thei said , yeah that's okai .
that's not a market .
you can do that .
well , that wa the nsf net backbon .
then the region got fund .
and then the campus were afraid if thei didn't dig up their quad and put in some fiber then the professor who want to get access to supercomput would go to a univers that would do that , so gradual the whole internet emerg out of the , the sort of polici vise you get into washington where you can't do the right thing .
you have to do someth that seem irrelev , but ha a logic to it that will gradual bring the market forc into plai .
that will spin out , ultim , a whole industri .
when you walk into the back entranc of boelter hall on the ucla campu you mai notic a seemingli random pattern of floor tile in the entranc .
if you spend a littl time look at the pattern it might dawn on you that the tile repres zero and on and then you might even figur out that the tile repres ascii charact .
the charact in the floor tile spell out lo and behold , to commemor the build where l and o were the first two packet ever sent on the arpanet from ucla to stanford research institut on octob 29th , <num> .
arpa want a network so that thei could share the larg comput resourc thei had given to their research across the countri .
univers of utah had a terrif graphic oper system , sri a databas , we had simul , univers of illinoi had high , high perform comput .
and everi time arpa brought on a new research , thei'd offer to bui him a comput , fine , but the research said , i want the same capabl all those other gui have .
i want the graphic , the databas , and all the rest .
and arpa said , we can't afford that .
if you want to do graphic you log on to the machin at utah through a network that we think we're go to to make .
so the need for the network wa to do resourc share and not to protect the unit state against a nuclear holocaust .
when bob taylor came in as the net director and he recogn thi need for share resourc , by the wai notic the phrase i'm us , share resourc is exactli what i built into network design .
now thei want to share the extern resourc .
same idea .
you have it , you're not us it , somebodi els should be abl to .
so thei brought in larri robertson , anoth classmat of mine .
in fact , an offic mate of mine at mit , to manag thi project .
he came to me becaus he knew my work .
he , he watch me do the simul , in fact i us hi compil on the tx2 comput , and said len , we need to know if thi thing's go to work .
he knew that i had the theori , so i could show it to him , it's go to work .
in fact he even sai he would never have decid to spend million of dollar of the u . s .
govern's monei if he wasn't sure that thi thing would work .
so the design began to be laid out by a few of us in <num> .
in <num> thei sent out a request for a propos .
at the end of <num> , bolt , beranek and newman , a cambridg massachusett firm , won the contract to produc the first switch of the arpanet .
and we becam the network measur center earli on , so we could test it out .
dure the design phase , some great peopl were there , throw their idea out .
herb baskin wa there , a time share expert .
and he said , if thi network can't deliv short messag within a half a second , i can't us it for time share .
specif , half a second .
by the wai , we got <num> millisecond .
and we clark said separ comput from commun .
i said look , if thi is go to be an experi , and i wa also interest in the research of the experiment , we have to build softwar in so we can run experi .
artifici traffic gener , measur hook , a place where the measur can be evalu with the softwar .
and so howi frank began to talk about network reliabl .
he said thi network , if anyth fail , the network shouldn't collaps .
so we built in a , so we didn't sai thi should be five nine of up time .
we went much more pragmat .
we said , if ani singl thing fail , everybodi els can still talk .
yeah .
so , to do that you need someth call a two connector typolog .
two independ path between everi pair of node .
built it in .
so all those spec went to bbn , thei built the darn thing , thei deliv the switch here at ucla , on schedul .
eight month after thei got the contract thei were to deliv thi new technolog , new applic , new devic .
thei did it on time , on budget , came here , we plug it in , and bit began to move back and forth between our time share machin and that switch on the dai after labor dai , septemb 2nd , <num> .
but that wa just a on node network .
the schedul wa that anoth on of these switch would be deliv at stanford research institut <num> mile to the north and thei would connect that to their machin .
and that happen in octob .
so in octob we had a two node network .
my machin , my switch , anoth switch , <num> mile awai , and the sri host .
and it wasn't on singl line , it wa a gang of <num> kilobit per second line .
so we had to gang them togeth .
patch it up .
so , the first piec of the backbon internet .
so now what do you do ?
you have a two node network .
well , now you can do someth .
so we decid on night , on night , late in octob , programm charli klein and i , went to him and said let's , let's commun between these two machin .
so we got ahold of bill duval , their programm up there , and we said , let's simpli log in from a termin connect to our host to that machin .
the idea is , these ar both time share system .
thei expect termin to connect in and us the servic of the machin .
the big thing wa sit at a termin here , log on to your machin here , and through thi wonder network , log on here as if you're a local user .
well , that's easi enough .
so we got all set , got charli down at the termin over here .
and just to be sure thi work , we had a telephon handset .
in fact i actual think i've got the , the here it is , i just happen to have it .
that wa the telephon set .
that's the telephon headset ?
that wa the telephon .
we plug it in .
we deriv , we deriv a , you were us skype .
afraid not .
plug it in .
we us a piec of the high speed line for thi , for the phone line .
but what the interest thing is , we were us the defunct circuit switch technolog to prove out the new packag switch technolog .
right .
and it realli help us .
yeah .
so we could so , charli tap the l and said , you get the l ?
bill said , yup got the l .
tap the o .
you get the o ?
we're try to do l o g .
for login .
got the o ?
got the o .
tap the g .
get the g ?
crash .
so the first messag ever on the network wa lo , as in lo and behold .
yeah .
now that's especi interest becaus if you go outsid thi hallwai here , down into the allei , you'll come into anoth entranc to thi build .
and you'll , i just discov thi about a week ago .
you , you walk on , on , a platform , and there's a mosaic of tile down there and thei're a strang pattern .
it turn out it's the ascii code for lo and behold !
i have no idea who did that .
you know , it's about a year and a half now .
some veri clever person put that in .
that wa the first messag , octob 29th , <num> , at <num> <num> at night .
you're enter <num> right now .
we reproduc thi room to look as it did , and smell and feel like it did some forti odd year ago .
and if you look over here , you're look at the first piec of equip ever on the internet .
it's that first interfac messag processor .
imp number <num> in ucla .
a honeywel minicomput , adapt by bolt , beranek and newman , bb and n .
to oper as a switch , for channel build function .
and thi is the same physic four squar feet where it serv as the open note of the internet .
the first piec of equip ever on the internet .
and that's the actual on .
that's it .
i kept it for year .
thei tri to throw it awai mani time .
most of the peopl who had imp have toss them .
there's just the on or two left around the world , but thi is number on .
thi is the first piec .
if you open thi machin , you'll be privileg to smell it .
yeah .
it's got an unusu odor , and just bring you right back .
yeah .
and emotion , it's great .
can't smell it todai .
thi is a militari hard machin .
thi , thi machin wa essenti a state of the art minicomput .
which wa adapt by bb and n .
and i first saw it in <num> at on of the joint comput confer show .
thousand of peopl in a big , big exhibit floor .
and you see these sky hook up here ?
we had on of these machin hang from the , from the ceil , swing in the air , run .
and there wa a gui , big gui , strip to the waist , oil skin , with a sledgehamm , and he wa go whack , whack .
right .
to show that it's militari .
it wa militari .
and it wa .
but the most import document of the internet , the most import document of the entir internet , is right here .
uh huh .
you talk about who wa work with me , well , on of my softwar programm wa jon postel .
in fact , here's hi pictur .
and he wa not a hippi , even though he appear to be .
he wa the on who basic disciplin my , my staff to do thing properli , to keep record .
he said we have to keep a record of what's go on , so begin in octob , basic a month after the imp arriv , we start keep an imp log .
you know thi is an engin's log , thi is not you know , madison avenu , a piec of , just scribbl and us an old sd log .
and in here we kept a record of what's go on and the most import entri happen to be right here .
on octob 29th , <num> at <num> <num> at night charli klein , the programm who wa in the room with me , made thi entri .
talk to sri .
host to host .
thi is the onli record of the veri first messag ever on the internet .
right here .
you know , we had the technolog , we start make measur .
we were the first experiment node so we , we saw thing happen .
how come ?
we have a <num> kilobit per second line , the rout procedur either goe on wai or the other , on at a time .
so how can you get more than <num> kilobit per second between node if there's onli on path at ani time ?
and we'll sai oh , it's obviou .
that path is on now , when it get back up , you chang path .
so thi gui's empti it's pack back up while he's send thi wai , thei right .
so , so think and but , we could break i said .
and everi time we did , we would call bb and n and sai fix it .
we did thi , fix it , becaus thei wouldn't give us the code .
thei kept it proprietari until arpa said , we paid for that code , you have to open it , thei did , we saw it .
everi time we got a , and it would take them six month to fix anyth .
right .
we'd discov a fault thi time , we had the code .
we'd show them how to fix it , still took six month .
on of the thing i wa veri much interest in with design wa thi stupid control , why ?
right .
when i wa a student of shannon , shannon's great work came when he had a lot of thing interact , long code word , for exampl .
that's when these emerg properti aris .
so i said , i want to design larg network , becaus on a larg network , you can't have a singl point of control .
you have to distribut it .
right .
so what doe it mean to distribut control ?
you're deleg your author to all the peer .
when arpa start fund princip investig thei had the same philosophi .
thei said look , you're a smart gui , here's some monei .
go do the thing you do best .
we're not go to sit on top of you .
make good thing happen .
so here we ar .
i'm a recipi of that kind of monei .
what do i do with it ?
i've got my graduat student .
thei're brilliant kid .
look , we need a host to host protocol .
here .
i'm not go to sit on top of you .
go to run with it .
that is not a product mental .
right .
that is a research and develop and creativ mental and it work so well .
so i hope you got from that , that it wasn't trivial .
it wasn't like somebodi just walk out and said , hei make a network .
i mean , there were forc , power forc , the telecom lobbyist , that did not want thi to happen .
and we will , we will see these telecom lobbyist a coupl time as we progress through thi lectur .
so larri smarr and the folk that made the supercomput convinc congress to author the , the give of a grant to build the nation scienc foundat's network .
it wa go to us the tcp ip protocol that the arpanet had built .
it wa suppos to be inclus , at least for research academ .
and it wa , you know , research univers would , we want to get them connect .
and so our stori now lead from the univers of illinoi , urbana champaign to my univers , the univers of michigan .
now , if you take a look at thi arpanet pictur that wa sort of right befor , now it's at <num> .
but if you look at all of the arpanet pictur there is a glare omiss , from my perspect .
glare omiss on all of these .
i wonder , why aren't we there ?
well , there's a veri good reason why the univers of michigan is not on ani of the arpanet pictur .
and that's becaus we built our own network .
we built a network us leas line , a three node network between michigan state univers , univers of michigan , and wayn state univers .
we were share each other's comput resourc .
we were us each other's comput interact .
we were plai onlin multi user game .
we call them adventur , thei were all base on text .
but thei were great fun , and thei were great commun build .
we had chat forum , we had all kind of thing , we us each other's softwar .
it wa , it wa a cool littl world .
and the arpanet wasn't seen by mani as all that signific .
it wa kind of an experi , right .
it wa a research project , and we were a research , we were product .
merit wa product and arpanet wa research .
so there you go , right ?
so there wa actual a lot of these like nascent network out there , earli dai .
and so the univers of michigan sort of never realli wa significantli involv in the arpanet work .
but the univers of michigan , be a larg univers , did want to get a supercomput center .
and becaus of some strateg blunder , as doug van houwel will soon explain to you , michigan didn't get a supercomput center .
and so the idea wa , is we would do what it wa go to take to get the network , becaus that might be more fun .
so doug van houwel at the time wa the chief inform offic at the univers of michigan , have recent arriv from carnegi mellon univers .
and he wa also the chief of the merit network , the network that connect our three school .
and so thei figur that onc thei didn't get a supercomput center , thei'd better realli pull out the stop so that thei would get the nsf net .
and of cours thei did get the nsf net and doug van houwel wa the princip investig for the nsf net start in <num> .
so , let's let doug van houwel talk to , tell you the stori and i'll be back in a moment .
univers of michigan wa on of the organ that made a propos for a nation supercomput center .
that propos wa made just as i arriv at the univers of michigan at the begin of <num> .
the michigan propos had as a , as it primari hardwar artifact a machin that wa built in japan .
and i explain to my colleagu , my new colleagu , the univers of michigan have just arriv , that it wa highli unlik that the propos would be fund becaus i didn't think , especi in that period , that a japanes machin would would make it past the review process in the nation scienc foundat .
a short while later , i wa visit the nation scienc foundat and i had gotten to know , not well , but had gotten to know eric lock , who wa then director of the nation scienc foundat .
and eric and i had a convers about michigan's propos .
and it wa clear to me from my convers with eric that there wa no prospect that the michigan propos would be fund .
i said to eric , i said , well , it occur to me that what might be even better for the univers of michigan than have a supercomput center , is to run the network that connect all of the supercomput center togeth .
a while later , there wa a propos request for propos on that network , which later becam known as the nation scienc foundat network .
and at that time i had becom the chairman of the board at merit , which is michigan's state wide network .
merit had , over the year , in parallel with the packet switch protocol develop that had been involv in the arpanet , had develop it own packet switch network .
and so we knew that the nsf had in mind a project that would last about five year and would in total requir the expenditur of <num> , <num> , <num> .
as we went through think about how we'd creat thi propos , we realiz veri rapidli that <num> , <num> , <num> would onli fund a <num> kilobit network which , it wa veri clear , if it were even put in place , would rapidli becom overwhelm by the traffic .
and so we immedi start think , well , how could we expand the envelop for such a propos ?
so i got in touch with jami and said , you know we have thi nsf net opportun and we're gonna try to bring industri into thi , would the state be interest ?
and jami said ye , get back to me onc you sort of fit the piec togeth .
then we went to the ibm corpor .
becaus even though ibm , veri much like merit , didn't have a lot of credenti in internet protocol work , thei ar a big corpor with lot of capabl in build , uh , commun equip .
i had an old friend who work for ibm research by the name of al wei , who wa in charg of all of ibm research's comput facil , and i call al , and i said al , thi is a great opportun , but ibm is go to is , is not go to be success here .
and i need your help .
and so al sort of ralli some folk from ibm research , where there actual wa work go on in tcp ip protocol and so forth .
and we had anoth meet .
i manag to drag han verner out to anoth meet with ibm and , and han verner admit , at the end of that meet , there ar peopl in ibm that know someth about thi and ye , thei could be partner .
so , we got tent an agreement from ibm that thei would contribut the hardwar and the softwar to creat the rout structur for the network .
but we still need the commun facil .
and at that time , the cfo at ibm wa a gentleman , i think i rememb the name correctli by , hi last name wa crow .
and , so through ibm , we went to him and he had contact with a former ibm employe who wa now the , network , the chief technic offic and essenti the chief network oper offic for mci .
hi name wa dick liebhab .
and so ibm approach dick liebhab and ask him if mci would be interest in provid the commun facil for thi network .
well , as you mai recal , at that time mci wa thi fledgl organ .
some peopl would describ it realli as , as a law offic , try to creat an environ where thei could actual offer telecommun servic up against at t's lobbi effort .
thei thei have just been success in that thei were establish facil across the unit state , and dick liebhab saw thi as an opportun to sort of move mci into the big time .
to be part of thi nsf net propos .
and so we wound up with an agreement that we would file a joint propos with merit as the princip organ , in partnership with ibm , who would build all the rout hardwar and softwar , and with mci , who would provid the nationwid commun facil .
and while we were and , then we got governor blanchard to commit a million dollar a year from state fund , in addit .
so we wound up be abl to submit a propos to the nation scienc foundat i think for someth like <num> million dollar , becaus we knew the ceil wa fifteen .
but in fact by includ all thi in kind activ , it wa actual more like a <num> , <num> , <num> propos and it wasn't design to be <num> kilobit .
it wa design to start at t1 or <num> megabit , with plan upgrad over the , over the period of the network , network's life .
we've subsequ learn that the propos wa receiv with consider skeptic by the review of the nation scienc foundat becaus merit did not have a strong histori in tcp ip and ibm wa thought of as the enemi of the internet , it wa then focus on it own propitiatori protocol and , and so peopl realli wonder about our technic abil to pull thi off , but the , that review wa conduct without refer to the actual fund pattern .
and then when the wrap got pull off of the amount of resourc that wa be commit by the partner to thi propos , it immedi went to the top of the list at the nsf .
and i think we alwai had a notion that it could be a big deal .
we didn't know for sure .
becaus from the time that we turn thi network on in '<num> until about <num> , the network traffic , the number of host on the network , all of thi grew by , at the rate of about fifteen percent a month .
so thi , thi net , thi , thi network liter explod underneath us , and we were extrem fortun that the protocol suit , the tcp ip protocol suit and the fundament notion of the network allow it to grow at that rate .
but we had to do a lot of innov .
the border gatewai protocol had to be develop to allow multipl network to interact with on anoth .
and we had to build increasingli more capabl rout and commun facil .
final in , i think it wa around <num> , thi network wa grow so fast that it wa clear that these t1 circuit were not go to , were not go to enabl what we need to do .
so we had to go to the next step which wa ds3 , or from <num> <num> <num> megabit to <num> megabit , which wa a veri larg step , a <num> fold increas in capac .
and , in order to do that , we wound up creat anoth not for profit organ call advanc network and servic .
merit wa still the princip investig on the grant , but it subcontract the develop of thi new network , thi <num> megabit network , to advanc network and servic , which wa headquart in armonk .
the nsf net wa the fastest internet network to the end .
it final wa decommiss in <num> , when the congress decid that the feder govern should not be in the busi of support someth that by that time , in their view , should have been , becom a commerci facil .
i'll not ever forget sit in a hous hear room in the capitol and next to mitch kapor and some internet , some small internet compani start up ceo who were complain to the congress that it wa inappropri for the nsf net to be fund by the nation scienc foundat when thei could provid the servic as a commerci servic .
at the veri same time thei were make that complaint , thei were us nsf net as their backup network to carri traffic , when their much less reliabl network fail on a nation scale .
mci , of cours , turn out to be a major internet servic provid , also us the same technolog .
in a classic innov's curs moment , ibm , who wa at that time the leader in rout technolog for internet backbon , manag to decid that thei should kill all of the work thei had done in develop these router becaus it would threaten their proprietari network effort .
it's probabl almost singl handedli respons for the fact that cisco becam the domin router compani in the unit state rather than ibm .
so , as you can see , none of thi is easi .
it wasn't easi for larri smarr and now we basic have the lobbyist onc again .
the lobbyist ar decid that there's onli go to be <num> million dollar .
becaus if it's <num> million dollar , thei can onli build a <num> kilobit line .
but michigan thought outsid the box , some peopl might sai we cheat .
other univers who want to get the grant kind of thought we did cheat .
we didn't plai by the rule , like in star trek , we rewrot the rule .
so , we got it .
and we slid underneath the nose of at t a on and a half megabit network that start , start larg and it start fast and got faster .
and , as doug talk , it wa a veri , veri , veri success network and it , it , it didn't , it had follow on effect just like larri talk about .
it had these follow on effect of caus campus to build network becaus in would come thi realli fast nation network , so you'd better fix the on campu network .
so it wa realli quit wonder .
and the partner , ibm and mci .
the other thing is , at t wa be beat up by mci at the time , and mayb thei weren't notic .
so we might have been lucki .
it could easili have been two year earlier , or two year later it might not have work .
so , whatev .
it did work .
and , and we can be veri grate .
so the univers of michigan wa sort of the center of , thei were in the network oper center and did the network design , work on the softwar with ibm , and built the network .
and , it had a veri exponenti growth as it went forward .
thi build right here is on our north campu , and it wa for me person the veri first place that i type the first charact that went across the internet .
i walk in thi door to , i wasn't at the univers at that time , but i had friend here and so i came in and i wa type you know , hello , on the internet .
and so , thi build wa where the network oper center wa and where i , i touch the internet for the , the nsf net for the first time .
so it start out real simpl .
but it goal , it goal wa to enabl connect to other network .
the region network got form , larri smarr mention that .
and so then the backbon becam sort of a forc function .
get more campus on and more and more state , et cetera , et cetera .
now , on of the thing that wa quit interest is we in the academ field had the right to us thi network .
but when it first start out , it wa suppos to be academ onli .
and then onc it wa establish in the late 80s and earli 90s , there were some peopl that start sort of like , bend those rule or bypass those rule or ignor those rule , and it wasn't realli clear who wa suppos to polic those rule .
and the peopl like at the univers of michigan , thei , their heart wasn't in reduc who would us the internet .
thei want to expand it , right ?
and so there were place , often bulletin board system would somehow get a connect to the internet and then thei would give internet access to a bunch of nonacadem .
and so it becam increasingli in the late 80s understood by everyon around the world .
but thi is pretti much nerd , right , that can sit with a screen with a command line interfac with a text base screen , and thei can get excit about that .
i'm , i'm like that , i can get excit about thing that ar non graphic becaus i just make it up in my head .
but we need someth to pop thi into the collect conscious of all human , rather than just academ first , and then nerd second .
but , that wa about to chang .
hello and again welcom to the class .
we're kind of a bit of the wai into the class and i figur , it's time to talk a littl bit about how we do the peer grade assign .
these mai be a littl bit foreign to you and becaus thi is an earli class , kind of a first year kind of colleg class , i've decid to make all the write assign extra credit .
there's go to be three of them .
thei're go to be <num> point each .
all the point that you get on the write assign ar go to be ad to your overal point , so thei're , thei're , extra credit .
so , even if you get <num> point , you're get <num> extra point .
and thei can , you know , if you do less than perfect on the quizz , or less than perfect on the final , these point can help make up without , with no cost to you .
so , thei're kind of risk free .
so , you'll gener have about two week to write each of the essai .
i don't realli mean for you to write them for two whole week .
i give you some time so i'll tell you what the question ar as you watch the lectur mayb the idea form .
some of you will write them earli , some of you'll write them right the night befor the deadlin .
and then after we sort of close the , the deadlin and there's sort of no slippag becaus then the grade ha to start .
and so , you'll be assign three to five other student' assign to grade .
and then that take a week and then the grade ar all collect togeth .
as you're write , if you're write often in a regular classroom , you're write to impress the teacher .
you're try to show all the complex wizardri that you have and you , you write as much complex stuff as you can to sort of , you know , dazzl the teacher with your command of complex and intric theori and idea .
that's not actual not what you're go to do here .
you're write for your peer .
these , your fellow student have variou educ level , as i'm go to show you in a second .
and you have to write to be understood , don't , don't show off .
you mai be a geniu .
you mai have a cisco thing and you mai know net mask more than anybodi , and even wai more than me .
don't show off your super mask knowledg .
write to teach , write to explain , explain to your fellow student , okai ?
so , and when you're do the grade , understand that thi class is not a master degre or a phd class .
thi is a freshman class .
and don't have expect of thi class that ar like , you know , that thei'll everyon in the class is go to write at the same level that you're go to write .
so , i'll tell you , share you a littl bit of demograph data with you so you kind of get a sens of the make up of the class .
over half of the student in thi class ar like to be non english speaker right ?
so i'm , i'm an english speaker and i'm lectur in english but over half of the student ar , in thi class , that ar non english speaker .
we're all just figur thi out .
we're all just kind of clunk along and learn as we go , and so treat each other with some respect .
we're all beginn , we're all just figur thi out .
we have a wide rang of ag .
again , thi data is from a , from a previou class that i taught .
and interestingli , even though the class is kind of aim at sort of <num> or <num> year old student , there ar veri few student in the class that ar actual <num> or <num> year old .
and mani of the student ar educ , highli educ , and then some of the student ar sort of come back to school or perhap thei , thei thei never finish their educ for on reason or anoth .
so understand we have a veri , veri divers popul .
if we were teach thi class on a campu , pretti much everybodi in the room would be like , <num> year old .
but that's not the case here .
so as we write for each other and we grade each other's work , we have to be sensit to that .
here's anoth thing that you've got to be realli sensit to .
so , thi class is like a first year class .
somewher between the end of high school and colleg .
thi is the typic educ of someon in thi class .
we have , so start from here , high school , and then some colleg .
right ?
so that's , that's sort of the thi is the student that the class is aim at , someon who's finish high school and is just start colleg .
we have some peopl that ar late high school , and that's okai .
thei're probabl advanc student anywai .
but what's realli import when we start think about our grade is well over , probabl two third or three quarter , have a bachelor's , a degre in on form or anoth , bachelor's , master's , even phd peopl in thi class .
and so , the kei thing is , thi is great , it's great to have so mani realli sharp peopl in thi class .
thei're go to be sophist writer .
but we have to be care not to write our essai for these kind of peopl .
we're go to write the essai .
and if you're realli smart , then write a realli good essai for a <num> year old freshman to understand .
and when you're grade , don't grade as if someon ha a master's degre in comput scienc and mark them off becaus thei , somehow , didn't write at a master's in comput scienc level , even if that's who you ar .
so , let's get to the point where we're all on the same page .
that thi is a begin freshman class and even if you alreadi have a phd you should grade , and you don't have to be a bad writer , but you should write for an audienc that is a begin audienc .
don't show how super awesom you ar .
show how super awesom you ar by write realli clearli and write to explain , write to teach .
so , we definit have less particip in the write exercis for non nativ english speaker .
and i think that's sad .
and so i go extra length to encourag non english speaker to write .
go ahead and write in your own languag , translat it googl .
if you know some english , you can clean it up a littl bit .
but even if you don't , just write it in your nativ languag .
answer the question in your nativ languag , translat it , and just go ahead and turn it in .
pleas add a littl note to be just realli clear at the top of your write to indic your , that , that it's , what your nativ languag is and that thi wa translat by googl translat or whatev thing that you us .
and i am instruct everyon when we grade to ignor small grammar error and read for content .
let me give you kind of an exampl of how thi work .
so here is a paragraph at the top that i wrote .
you know , i'm write it for an articl .
it's in on of the , it should be in on of the articl that will ultim be in the class .
come back , come back .
right ?
and so here i'm write with kind of floweri english .
in <num> , the connect is expand around the world in mani new applic .
blah , blah , blah , quietli decommiss blah , blah , blah .
so , you know , i write thi .
i'm you know , i'd like to think i'm a pretti good writer .
and so i us sort of some activ tens and passiv tens .
and then what i did is i translat in like into spanish and then back into english .
and , and so you'll see when it come back into english , as if i had been written in spanish and then i translat it .
so first i sai at the top , i sai , you know what , i translat thi from spanish , us googl translat .
that's a signal to the grader to be even more relax about small grammar thing .
just ignor them .
so just , you know , you , you can see thing here as , if you're a nativ english speaker , you can see situat where , you know , in , in <num> nsf net connect is expand worldwid .
well , okai , that's not veri good grammar .
you know , wa is the right wai to sai that .
but it's okai , right ?
so just ignor that .
think about what the writer's try to sai .
becaus there's a translat devic that's in between us .
you know , gopher and web , come back , gopher and web develop as distribut applic .
you might sai , oh , what do you mean , thei didn't develop .
ar thei like a plant ?
no .
understand what the writer's try to sai and then , and then again , so you can see , had been quietli decommiss where i write my gloriou english .
the translat sai wa decommiss in silenc februari 28th .
but if you read and you read for content rather than read for syntax , you can kind of understand what's be said .
and so understand if you ar read somebodi's write that , that ha been gone through translat , these kind of littl glitch in the , in the grammar ar go to natur be introduc .
and it , and so it could be written in a veri pretti wai , who know if i'm a pretti , my write is pretti or not .
and then , becaus of the translat it sound kind of clunki .
but just read past the clunki , okai ?
just read with a smile on your face .
read for content , don't read for , we're not , thi is not an english class , thi is not a grammar class , thi is a class about technolog .
okai , i think i've said enough about that .
be kind .
plagiar , plagiar often come up , especi becaus we have lot of differ cultur and plagiar is someth that come up differ and is treat differ in differ cultur .
part of the goal of a first level class , a freshmen class , at higher educ is often , especi when peopl from differ cultur come togeth , is often educ about plagiar rather than just detect , detect and punish .
we're here in thi class to teach peopl about plagiar , who mai not have ani sens what plagiar is .
thei mai not have been taught anywher els .
so if you detect plagiar , pleas do not attack the person , pleas do not tell them that plagiar is the most horribl academ offens .
if you see plagiar , think of that as an educ , an opportun for you to teach somebodi .
sai , oh , i see you took thi .
pleas , thi is plagiar , you're not suppos to do it , you should either rewrit thi or indic that it's a quot , okai ?
when you're turn in an essai , everyth that you write should be your own word .
unless it's a quot and then you should indic it's a quot .
so here's here's a littl exampl of someth that i wrote .
so thi might be someth , a question about someth like who is the most import person in the histori of the internet ?
or who is your favorit person in the histori of the internet ?
mayb that's the question .
and so here i've start to write at the top .
you know what , i sai i think vint cerf is an import figur .
and then i go , and i copi and past directli from wikipedia .
in the earli dai , vint cerf wa a program manag for blah , blah , blah , blah , blah , blah , blah .
and then i sort of switch back into my own voic , and i just kind of decid as i'm read wikipedia to help me write .
and i just grab thi littl sentenc from wikipedia .
now when i'm grade , it's interest , it's veri easi to sort of catch the chang in voic between someth that you're write kind of easi in narr flow and someth that's kind of come from a sourc like wikipedia where thei're write in a more formal style .
and so , it's like , in the earli dai , well that , for me , i can just look at that , i don't even have to look at wikipedia .
i can go like , hmm , thi writer probabl wouldn't us the phrase in the earli dai . and so i have thi littl littl bell go off .
i don't look for plagiar , but it's not hard to find , okai ?
becaus you see a chang in write style .
now if , for exampl , you realli felt that thi statement wa glorious express in wikipedia and you could do no better , you can put it into your document , you just have to put it in properli .
you have to refer it .
so i sai , you know , i think vint cert is an import figur .
accord to wikipedia , and then i put a littl refer mark in here .
and then , i simpli cut and past the text from wikipedia .
i put it in doubl quot , i make it ital , and then i put at the bottom , i put a littl refer .
thi is not plagiar .
i cut and past it liter from wikipedia , right into my paper .
but i'm honest about it .
i'm point out what part i wrote .
what part i didn't write .
what i said in the previou slide is when you're put someth in , unless you indic otherwis , you ar repres it as your own write , your own creativ express .
okai ?
and that's the kei to plagiar .
it's not that you don't put thi in , it's you don't put it in , you don't put it in and then hide it or not acknowledg it .
in the second exampl , i'm acknowledg what i'm us .
now , i mai want to rewrit it .
and that's okai , and you don't have to rewrit it .
you might even put , like , a littl , if you take thi and reword it quit nice to be your own word , you might still put a footnot in to sai , as i wrote these word , i wa inspir by the , what i wrote , read on wikipedia .
oh , and by the wai , i like wikipedia , okai ?
some teacher will tell you that oh , wikipedia's terribl .
especi for technic thing , wikipedia is probabl the best refer in the world , the encyclopedia britannica , or even a textbook is often not as , quit as good as wikipedia on someth like who vint cerf is .
right ?
so , don't get all upset if peopl start us wikipedia .
i actual encourag it .
i encourag you to us wikipedia to help form your thought quickli and if wikipedia is someth that you want to refer , far as i'm concern it's great .
and that's differ teacher mai think differ about that .
thei mai be teach differ thing .
i'm teach a topic for which wikipedia is often an excel sourc .
mayb not the onli sourc , mayb us wikipedia to learn other thing , that's all cool .
but i'm not anti wikipedia in thi cours .
so again , don't spend a lot of time like , stare for plagiar , look at everi word try to find it .
i find thei often jump out at me as i just in read as i've been do it for a long time .
you know , take point off as you see it .
if you want to put the point all the wai down to zero , if somebodi just answer , i ask that question about vint cerf , and thei just took the first four paragraph from wikipedia and thei put those right in , and that's their whole essai with no acknowledg or anyth , give them zero .
right ?
and just sai , it appear as though the first , all your paragraph came straight from wikipedia .
thi is plagiar .
you did not refer it .
you did not indic that it came from anoth sourc , so that's plagiar and so i gave you zero point .
don't sai , and you're evil .
right ?
don't be cruel .
i mean , again , not everybodi see plagiar the same wai , especi when we're bring peopl from so mani cultur togeth .
so don't add comment about your view on plagiar .
don't make valu judgement about some person be horribl becaus thei did it .
we ar here to learn .
and even in case of plagiar , our primari goal is to learn .
so , gener , i have a coupl of rubric that i ask you to rate them on .
you don't have to grade these thing particularli harshli .
i'm curiou if it wa interest to read .
that kind of , did thi person write for the audienc ?
you're the audienc .
did you read it ?
did you think that it wa worth your time read ?
is the answer on topic ?
sometim peopl will complet ignor the question and answer someth complet differ .
if thei misunderstand the question , or whatev .
so you get a chanc to give point as to whether or not the question wa answer .
and for the more technic on , you know , the , we , you know , did the person dig in a littl bit ?
or did thei just state the obviou or kind of gentli rephras exactli what wa said in lectur ?
did thei add someth beyond the obviou ?
you know , do thei have , do thei make argument without support them ?
or do thei , if there is ani kind of argument or statement that that might be question , do thei us refer to support them ?
and so , not all question that i ask will have the same rubric .
some , some have fewer rubric , some have more rubric .
but thi is the basic thing i'm go to ask you to rate point .
and you'll put like , oh okai , thi is thi is like <num> point , and thi is <num> point , and thi is <num> point .
well , okai so thi is <num> point , <num> point , <num> point .
and that add up to <num> point .
and you get to , to put a littl rank on them .
and that's how you'll be grade , so i'll do some guid grade for you , to get you , to help you .
so when the peer grade is done your grade , the grade that you get for the assign , effect drop the high and low grade .
it's not an averag , it's the median .
right ?
so it's someth in the middl .
the , the , the , the hopefulli thei're all cluster togeth and thei're all pretti consist .
the survei research sai that , you know , if you have five peopl do peer grade , you kind of throw out the top and the bottom .
and someth in the middl is , is , is veri close to what the teacher would have ultim grade the assign .
and so it's , it's a median , high and low score ar drop .
what i realli want is i want you to relax .
i want you to do these thing , i want you to learn from it .
if you're not an english speaker thei , thei can be a littl intimid .
and i want you to give them a try and i want you to see how it goe .
and if it doesn't feel good to you , then yeah , go ahead and and , and , you know , don't do ani more .
but thei're extra credit , you know ?
you just have to get us to when you look at the comment that come back from other student , some of them ar just go to be dumb .
i mean , some ar go to be bad and thei'll just be wrong or thei'll be critic .
you gotta ignor those .
look for those thing in the feedback that you get from the other student that help you learn , that help you becom a better writer .
rememb , part of my goal across these three assign is not just the materi in thi class .
but if you're to take other coursera class , i want you to be skill at write for your peer and grade your peer .
so part of thi is just practic , in case you're go to take other class that requir peer grade .
and so , look at the comment that ar us to you , and ignor the bad on .
and , you know , you , you will feel bad when you see a grader who's , who said someth veri critic about your work .
we're not go to go and punish bad grader .
we're not go to regrad .
that's why these thing ar all extra credit .
if you get a <num> out of a <num> , that's <num> extra point .
you shouldn't , i mean we all think that if we don't get anyth other than a <num> out of a <num> , we've somehow fail .
thi is a veri imperfect process .
we're go to learn from the process and that's why i made all of the credit extra credit , right ?
again , thi isn't just for thi class .
i want to get us us , to as a commun , as a coursera commun , on how to do thi in gener .
so , let's focu on enjoi thi , learn thi , and not get too seriou .
so i hope to see some of your write in the peer grade assign in the cours .
thank .
so i start our pictur where we had supercomput , at the univers of illinoi .
we went to the univers of michigan , we got the nsfnet fund .
and now we're go to fly across the ocean to cern .
cern , of cours , is a high energi physic laboratori .
thei do thi <num> mile circl and smash particl and take pictur of the smash particl and look for the higg boson .
or found the higg boson .
it's a realli cool place , i recommend that you visit .
the cern is a place that physicist from all over the world visit , live at , and collabor with .
for experiment physic , it realli revolv around those experiment facil .
and so regardless of whether you live in russia or australia or germani or america or japan , if you're an energi nuclear physicist , you have got to work with cern or spend time at cern .
and those who spent time at cern tend to make the best discoveri .
and so , these project have such long lead time , and thei take so mani differ kind of talent peopl , you know thei're metallurgi , welder , physicist , engin , design , project manag , there's a ton of peopl involv in it .
and it's a pretti well fund oper .
and everyon's pretti smart .
so on of the thing that thei do is thei have fun .
thei have these club , like the softbal club , the cricket club , the blue club .
and , and it's kind of like these peopl ar somewhat awai from home a lot .
and so thei just have fun with each other .
thi is a pictur that i will show you of the cernett .
thei ar famou for be the first band photo on the web .
some peopl wonder if thei're the veri first photo on the web .
but thei ar a doo wop group and thei sing sort of , 50s style doo wop song .
thei ar veri fun to watch .
but their song ar about like particl and internet and modem and stuff like that , stuff that i care a lot about .
sadli , thei've do thi sinc the 19<num>s you know , <num> , <num> , <num> kind of time frame .
and thei all grew up and their kid grew up and their kid ar all in colleg and so thei did their farewel tour in <num> and i , and on of them's move to australia so we don't know if the cernett ar ever go to get back and togeth and sing but for now thei're on perman hiatu .
but , for your view pleasur take a quick look at on or more of the cernett song .
so like i said , you should go visit cern .
i have had the great fortun to visit cern .
i had visit cern with on profession in a profession role , i help them record lectur with my sync o matic softwar that you mai have heard me talk about .
i , i have visit sort of in help other technolog thing and i teach and learn with technolog and thing like that .
and so thei've got a a wonder cafe .
and if you were work with peopl , you get to go in the back and hang out .
that's pretti cool .
thei also have a wonder museum that you can go see the first web server and all kind of other cool stuff .
and in <num> , i wa lucki enough to have an invit talk at cern where i talk about sakai and how thei might us sakai to do collabor work , and i brought my famili with me .
and so my wife theresa , and my daughter mandi , and my son brent , and there's me .
we were in the pit , and thi pit is like , like eight or nine stori underground , it is six stori tall .
thi is where the beam come in right here .
it's three stori from the bottom of the pit .
the pit is six stori tall .
at thi point the it wa onli less than on third complet and so we could go on a tour , and so i have a famili photo with hardhat in the cern pit .
and that's pretti cool .
anoth time i visit i went and sang with on of our univers of michigan physicist .
and that would be thi gui right here , hi name is steven goldfarb .
and he's a physicist that work on the atla project , but he also is the band leader of a all physicist band call the canett blue band .
he let me sing a song .
i wa come to do some video work for him .
i happen to be in the area and i just stop by on on of my trip and me and anoth michigan staffer , we grab a coupl of camera and made some music video for him .
we put the cernett , some of the cernett music video up on the web and then thei let me sing on song call i got my mojo work and so i got i'll share with you the video got my mojo work .
that's just , oh so , everybodi in thi band is a physicist .
and pretti much everybodi danc is a physicist too .
now the reason i'm show you all thi is to give you a sens of the energi and joi , in addit to the hard work , that goe on at cern .
so i don't know if you notic , halfwai through , i knew that song by heart , but i had still written lyric on my hand and so halfwai through you can see me look at my hand to check the lyric that i knew .
made me look like a dork .
i'm not , i realli want to sing .
i'm just not a veri good singer , and thankfulli steve let me sing with the band .
so , back to the topic at hand .
in <num> , i visit cern as on of my first task at the univers of michigan to help them with lectur record .
and i said hei i got a camera , you know , ar the inventor of the world wide web here .
and we still had a littl bit of the televison show go back then .
so i went and interview robert cailliau who wa still at cern .
he wa just sort of across the street from the cafeteria .
and we walk in to hi offic and gave him the microphon and just start talk about the begin of the world wide web .
and robert cailliau is the co inventor of the world wide web along with tim berner lee who , who built it at cern .
so let's take a listen to robert cailliau .
> hi , charl sevrenc here .
i'm at cern in geneva , switzerland , on of the world's preemin high energi physic facil .
we were lucki enough to talk to robert caillou , on of the co founder of the world wide web .
the big collabor at cern , and steven here is is a member of on of them , have peopl spread the all over the world and us cern as the infrastructur to do the experi .
and so obvious , the whole of high energi physic ha been thi sort of miniatur inform societi sinc wai back when , as soon as there were network essenti .
and so becaus we have thi need for spread document around we built these thing like central databas .
there wa cern doc , you know .
you could us it , but whatev .
we had a , well we still have have a larg databas of high energi physic articl kept by stanford and you could get at it befor the web by know exactli what comput to log in to over the network , blah , blah , blah , blah .
when the web came , all the necess of know which comput to go to , what to sai to that comput , and so forth just disappear .
you know , peopl put up these page with the link and you could just follow link and get to place where you want to be and find everyth .
and it wa also all in the same format so that wa veri import too that we broke thi proprietari commerci system of vertic market which , you know , don't let you get at anyth except if you stai with thi particular compani or with that particular compani .
so that horizont split , the cut that we made between the browser on top and the databas at the bottom wa , i think , essenti to make it us for us , but also make it us for everybodi els .
and so that wa , that wa what it wa like in begin and tim and i did thi all on thi next machin here in about <num> .
so the first server wa in about <num> , the first , end of <num> .
the first server in the unit state came out about a year later at stanford becaus of that databas that i wa talk about befor .
did you and tim feel like thi wa the big on , or it wa just busi as usual ?
well , in a sens of cours , as i alwai sai , we call it world wide web in <num> and , and tim had in fact a name like that just befor that .
so there wa , in fact , no wai of build it smaller than the internet alreadi wa and the internet wa everywher .
so there wa no wai we could build it smaller .
but the thing that we probabl did not expect or did not aim for definit , in the begin at least , wa to have thi be us outsid the commun of academ and internet peopl that exist then .
see , the internet came outsid the academ world onli , what ?
after , i would sai also after <num> , right ?
after <num> .
that's <num> roughli , when i think of the begin of the current .
yeah , <num> is what i call the , the year of the web , it's when we had the first confer , it's when , you know , mosaic got off the ground realli and when commerc start to notic it and compani began to be form in sens of a exclus with that in mind and that wa onli then .
befor that it wa mainli univers and academ .
gopher wa simpler and easier to instal and easi to popul , and that explain it easier success for a while becaus both took off at about the same time .
and becaus the web wa somewhat more difficult , it took somewhat longer .
but gopher becam also integr in the web browser almost instantan .
and so , you know after that , after , after short while that you saw what you could do with the web and what you could do with gopher , you went to the web .
but it wa easi , much easier to instal gopher .
thi is a veri , which is why it had a , a sort of bump where it went ahead of the web for a while .
the same is true with mosaic .
mosaic wa just no good but easier to instal , right ?
and so it went ahead of what we were try to do .
we , we were complet kill in the browser environ .
becaus what we tri to do with our browser wa more difficult than what mosaic wa try to do .
and so , you know , thi prove that a better thing sometim get kill or take much , much longer to come up becaus the easier thing , so like a viru , you know outgrow the other on .
i think that the real problem wa that thi develop system is so much better than anyth els that port what we had here to ani other platform took a lot an order of magnitud more time .
and the , for exampl , everi time you click here you had anoth window , everi time you click on a diagram , you had the diagram in anoth window .
when you click on a map , you got the map in postscript , scalabl , perfectli printabl , and so on and so forth .
you try to port that to anoth system you , you go berserk .
and thi is the reason why in mosaic you had onli on window and everi time you click you replac the content of that on window , which wa not what we want .
everi time you see a page you got the imag inlin so you scroll and thei ar gone and so thi wa not all we want , thi is horribl complic for the user and , and it's not effici but you know , it wa the easiest wai to do it on the next system .
and so , you know , there you go .
so that thing spread and , and if you want to make .
and you know , there's a big differ between make an editor and someth that just put up a page and you can't do anyth with that .
so our system from <num> wa also the editor .
i mean , i start .
it's onli after next stop make hardwar , and i had to go back from a next to a macintosh that i had to learn html .
right ?
i mean , befor we produc all of the document , the stuff , but we never saw ani , we never saw ani html , we never saw ani url .
right ?
becaus you link by sai link thi to that , not by type in a url .
there wa a special window you could call up in which you could type a url if you need to .
but it wasn't the usual thing .
i mean thi , thi navig which sai http da , da , da , da , you know , i learn all that the hard wai afterward , that you have to us that , becaus we've lost that system , right ?
the interest thing though is that i , see , i found html a gloriou languag .
now i'm not , i'm not the averag user but i like to write it .
i mean i enjoi it .
> just , i mean , god .
ar you kid ?
more as a word process .
it's like tex .
it's terribl .
yeah , right , right .
it's exactli as bad as tex .
that's exactli what it is .
it's exactli as bad as tex .
and can you imagin in that the head have level which ar absolut ?
true .
you need a plu .
certainli .
what !
i mean , come on .
html wa , we just didn't have .
you must realiz that we were never more than four peopl here .
tim , and myself , and a student each .
okai ?
so , thing like put in seriou effort into think about html wa a low prioriti busi and on , then , of cours , by the time it there wa time to do that , it had spread beyond repair , right ?
that's sort of like unix , right ?
right .
but of cours , we have like a viru .
yeah , in a sens .
we , we , we have xml come now , fortun , so that'll , that'll help .
thi machin here it's , well , it's more than ten year old now .
it's got , it run unix but it ha unix with a nice visual interfac .
it had some other interest thing which wa the , which permit us to do the develop of the web in such a small time , such a short time .
that wa it had a complet or it ha a complet object orient develop system in which there is alreadi suppli as part of the librari an edit text object and that wa what tim us to make the first browser .
and thi , thi wa all nice becaus it got us there quickli and then we realiz that , you know , somehow the real world us these horribl machin and , you know , port it from here to make it avail to these horribl machin in the same eleg wai is an enorm amount of work .
but half wai through <num> , i think , we , we made a last effort in output browser that were also gear to becom editor , but then there wa just no hope .
so i realli like that video , it's real preciou to me .
we shot it in <num> .
i don't know if you notic , but i got a ponytail in back , and i got a villag peopl mustach .
when i first came to the univers of michigan i thought i wa pretti special so i grew the ponytail .
i don't have a ponytail anymor .
i got , my hair's a littl darker now .
i , i realli like the moment where he start yell at me , becaus i like html .
and html these dai with html <num> is so much better than html wa .
he wa exactli right that html wasn't eleg .
but it wa amazingli power at the same time .
and the fact that we could see it meant that peopl believ in it and it wasn't , it wasn't magic .
the other thing that you might have notic is that he had some veri strong opinion about the design of what a web browser should be and thei might not have seem logic when you first listen to them .
on thing he said wa , everi imag had to pop up in the same screen and mosaic had on page that replac the whole thing and you saw the imag inlin , which is not what we want to do , that's what robert said .
that might sound illog todai with farmvil and facebook and , you know , all these thing , but you have to understand that in <num> the network wa veri differ , even than it wa in <num> .
it wa a veri slow network , and if you put imag on everi page , thei would slow down terribl .
and so what that user interfac look like is you had a document that wa the text , bold , ital , these kind of thing , and when you click on someth , you got a new page .
and then it would take awhil for thi page to displai becaus the network were realli and truli slow , and the comput were slow as well .
so that might sound to you as an irrat design choic but in the time of <num> , it wa a complet ration design choic .
and on of the thing that sort of chang over time wa that becam less and less a ration design choic as the network becam faster , the comput becam faster , and imag becam , imag becam more a natur thing that the technolog wa capabl of handl .
so continu our stori , we start at univers of illinoi at urbana champaign .
we went to the univers of michigan .
we got the nsf net up .
in <num> , cern creat the world wide web .
the web took a great step forward at stanford univers when the veri first web server in america came up .
now the fact that's it's the veri first web server is not actual all that import .
the , what wa import wa what wa on that web server .
it wa <num> , <num> physic paper at the slac , stanford linear acceler , store in the databas on a mainfram and you met and cailliau , robert cailliau mention thi in hi convers about thi .
now , what happen wa is paul kunz , who'll you'll meet in just a moment , he , you know , he said i'll put my databas .
the databas wa well known and peopl had mani wai of us it , but with the web , it made it much more easili us .
and so , i think in a wai paul kunz inadvertantli creat the first search engin , the first read of someth that's mostli content that peopl read .
up to that point , tim berner lee and robert were realli try to build someth that allow collect edit of inform store on server all around the world .
so let's take a listen to paul kunz .
well , the databas that wa here at slac wa us by peopl around the world , but with great difficulti becaus thei had to have an account on a mainfram .
most peopl weren't familiar with mainfram .
and second of all , the databas languag that you had to type in wa difficult .
so befor there wa a web , i invent a wai for peopl to do what's now call instant messag .
and to do a queri to the databas without log in .
and that improv access to the databas , but still had thi terribl languag of the databas machin to , to type in , in order to do your queri .
a littl later on , peopl ad an email interfac so you could send your queri by email and you would get your respons back by email .
so , when i wa at cern in septemb <num> , and tim berner lee drag me into hi offic to show me , to give me a demo of the web , at first i wasn't veri interest but when he demonstr do a queri to a help system databas on a mainfram , i immedi put two and two togeth and said , well if you can queri a help system on a mainfram , you can queri a databas on a mainfram .
then i start get interest .
the thing is that , that we couldn't chang the queri command becaus that wa built in the databas .
but the web page could give you exampl and remind you what the queri would be .
so did you have to write it all from scratch ?
i mean , did you write it from the protocol ?
or wa there softwar that you us to make your first web server ?
well i us the cern server softwar , which wa written in c .
and fortun we had a c compil on the mainfram at the time , that time .
it wasn't veri long that we had a mainfram on a c compil , but we had on .
so all i had to do wa to write some extra c code to get the queri that the user had made and turn it into the databas queri .
it wa decemb twelfth , <num> when we instal our , our web server .
and we , we inform tim berner lee that dai to give it a try .
the big boost came about a month later in januari , in southern franc , where there wa a workshop on comput topic for high energi and nuclear physic .
and at that workshop , tim berner lee had a plenari talk .
so he gave hi hour long talk to about <num> physicist from around the world .
and as part of hi talk he gave a demo .
and at the veri end , when most peopl i think were bore most of the time .
the worst thing that softwar peopl want to think about is document and he wa pitch document .
but at the end of the talk , he connect to the slac web server and made a queri .
and that realli drop a lot of jaw , becaus the instant everybodi knew the databas , everybodi knew how hard it wa to access .
okai ?
and here he just click awai and type in a few thing for the queri term and bang , the result came back nice format .
so , i , the wai i sai it , the interest in the web went from about twenti peopl to <num> peopl in that hour , okai ?
now those <num> peopl went back home , and if each on of them told ten peopl , then within a week the interest in the web grew to <num> , <num> peopl .
so that wa the big turn point and i think tim recogn that that wa realli the kickoff .
and i think the , the reason that the web took off so quickli onc the commerc appreci it and start to realiz it , it's a win win situat .
okai ?
it's a win for the custom obvious becaus he can do price comparison , he can brows the airlin schedul on hi own , and visual what he want to see quickli , and cut and try differ thing as much patienc as he ha to get the price down .
so it's much , much better for the consum .
but what about the provid ?
the airlin ?
well , it's much better for them becaus it's just softwar that's run on machin , okai ?
it's much lower cost for them .
and , and so thei're win , too .
i point out in my talk about the web near the end , sort of a punchlin , that in do big scienc , we're solv , we're find solut to problem that the gener public don't know thei have .
so , who would predict that out of high energi physic research you would come , someth like the web would , would come up ?
i think that would be unpredict .
but , in hindsight , you can see that it wa a natur place for , for the web to have been invent .
so again , i think paul realli creat for us the first search engin , and show that the web could be a mostli consum environ and be extrem us .
if you think about it , if there wa no web and there wa no content , how would you know that the web is a great wai to view content ?
so paul kunz had the advantag that he had a lot of content .
and it wa content that at least the physicist found extrem valuabl .
and then peopl go , oh , i can see .
matter of fact , i rememb when i first saw the web .
i , i wa , like , okai , fine .
it's got pictur , who care ?
becaus other thing like gopher were just as good .
and then i saw the abil to go to feder express and track a packag , and i go like , now that's a cool idea , right ?
the goph , gopher couldn't do that .
as a matter of fact , in <num> , sort of three year after the web wa creat , the web wa actual not all that popular .
<num> wa the paul kunz , but that wa mostli physicist .
and a few nerd , myself includ .
but in <num> , gopher wa a much better product and it wa a much more belov product .
and the problem again went down to , came down to the fact that the network wa so slow that simpl text base thing work better than highli graphic thing .
as it , there's apocryph stori that happen in march of <num> where there wa a meet of the internet engin task forc that doe standard for all these thing .
and thei had a bird of a feather session for gopher and a bird of a feather session for the world wide web .
and the gopher session is full of peopl .
and thei couldn't have enough in the room .
thei were sit on the floor and peek in the door .
and then , later , i wasn't at thi meet , by the wai .
rich wiggin , my co host on the televis show wa at thi meet .
and , what he tell me is at the bird of a feather meet , there wa almost nobodi there .
and tim berner lee wa like , i've been work on thi thing for three year , and it's better than gopher , but nobodi want to us it .
and the peopl in the room at that point told him , thei said it's just too complex , it's too hard to get work .
and so , thi is a long time ago and the web wa not assur to be a success at that point .
it just wasn't realli clear .
so , <num> wa kind of like , it wa a real , there's a lot of thing that could have been veri differ in <num> .
and i want to show you a commerci , and there's a coupl of these out there , from <num> that on of the larg telecommun vendor put out as a nation ad campaign .
and thi is what the telecommun industri wa think about , thei saw it all happen .
thei saw thi all happen , thei knew it wa go to be big .
thei knew it wa go to allow interact in mani wai .
thei knew it , thei weren't dumb , it's wasn't like , oh what's go on ?
no , not at all , thei absolut knew .
so thi , thi realli wonder seri of commerci is , is just quit amaz .
so take a look .
at the end you'll see , actual , what the larg telecommun compani's name is .
so take a quick look .
i hope you got to see a coupl of those .
i just , i just love watch them .
over and over and over again and like whoa , what a vision , what a beauti vision .
on of them ha to do with like a person assist in the shape of a dog .
so , again , sort of look back at thi and look at thing that might not have been , there's nobodi that realli make the connect that steve job might have had some impact on the world wide web .
but in a wai , he wa actual quit influenti .
steve job , of cours , found appl and then wa kick out of appl at , after the macintosh , and he start a new compani call next .
and if you listen close to what robert cailliau sai , and you listen close to what paul kunz sai , and the comput that wa on my desk dure thi entir period of the 1990s to <num> , were next comput .
next wa a bold , unix base , highli network , high definit displai , high perform comput , that steve job built when he form the compani next after he got fire from appl .
of cours , he eventu came back to appl and the next technolog is macintosh , that's the macintosh oper system .
and so if you make a mistak in macintosh , you might see an error messag that start ns someth .
that's call next step , which is the oper system on these next comput .
for the first three year of the web , it wa pretti much onli on the next comput .
peopl would , even the server wa , you know , on the next comput and the browser wa on the next comput and so it's , the next comput realli kind of did that .
i , i wrote an articl .
in sort of a coupl month after steve job di for ieee comput magazin's januari <num> issu , that realli sort of tri to , at least from a histor perspect , point out how import steve job mai have been in help the internet get form .
so we start our journei at the univers of illinoi , urbana champaign .
we got the nsf , the univers of michigan .
we creat the web , we creat the first web server .
and now we're go to come back to where we start .
we're go to go back to the univers of illinoi at urbana champaign .
these ar the folk that basic explod the web .
move the web from the academ space to the commerci and end user space .
and there's all kind of thing .
the network wa grow .
thing were get faster .
person comput were get better at a veri rapid pace becaus the ibm pc is almost ten year old and mani comput , thei were get quit fast in the , in the 90s .
so the 1990s , our comput and the displai capabl were were get better veri rapidli .
and in thi environ , ncsa at urbana champaign , univers of illinoi , urbana champaign , built an open sourc web browser that work on mac , window , and unix .
it wa the first web browser that did thi and it , it wa the thing that realli made it so averag peopl who had pc or mac in their home could get a network connect and start enjoi all of thi new content that wa come up on the world wide web .
after thi , the ncsa staff , student programm , softwar develop , all form the compani netscap in order to commerci all thi .
joseph hardin wa the supervisor of the softwar develop group at ncsa that wa respons for build and releas both the mosaic web browser and the httpd web server as open sourc and gave them awai free .
ncsa wa kind of a special place , right ?
on of those thing that happen veri infrequ where there's lot of energi , a larg amount of resourc , visionari leadership , and a lot of free space for peopl to plai .
larri recogn from the begin , and we all love the idea , that these small littl thing on the desktop were realli the gatewai for everybodi to the big machin in the background .
and that all of thi would turn into on cloud behind the , the screen , yet we need to figur out how to get the user involv in as much as possibl .
initi , our interest wa in synchron tool when were think of collabor tool .
so we were build someth call ncsa collag , which wa a set of tool that work and on of the big deal wa that thei work across the three platform .
the x window for the unix peopl , the window environ , and the mac .
and that wa on of the thing that wa sort of part of the underli cultur there wa that we want to make them avail to as larg a commun as possibl .
so , we start work on collabor tool and there wa a set of peopl on each of those machin that wa work to make it possibl for peopl to share in real time imag of their data , the spreadsheet of their data , and paper that thei had run across interest refer to with their colleagu who were remot from them geograph .
so that's the context in which dave thompson , who wa on of the develop , on of the x window develop , the lead x window develop , i think , for the collag tool , pull down on of the earli web browser .
it wa the on from slac .
he went through the effort of get it work and brought it in and show it to marc andreesen and i .
and both of us look at the screen .
dave describ what he had in front of us .
and we said , we can do better than that .
that's a complic system and the interfac look terribl and dave said that it wa a real pain for it , for him to get it work , for him to download it , instal it , and compil it , and everyth .
and it onli work on an x window box .
and wouldn't it be cool if it work across all three of the box and if there wa someth that wa just a plug and go like the rest of our tool .
mark and eric were work on that , the first gener of ncsa mosaic , and thi wa an x window app and nobodi wa work yet on the window or the mac version .
and we saw the first version of that come out , when wa it , earli <num> , late <num> , and it wa probabl earli <num> .
and the respons , of cours , wa fantast .
it's wonder to be abl to just click on someth and see it right awai , and inde , the combin of hyperlink in a document as far as navig and retriev of document as a user interfac is just great .
and a lot of peopl got it immedi , especi peopl that were work with the tool at ncsa and the compani .
i rememb an hp exec come in on time and marc and eric had written a littl filter that took unix document and made it into html and made all of the refer into link .
and thei went to , thei hit an hp site and the exec said , where is thi come from , becaus he wa abl to see all of hi hp document there in the room at ncsa and navig through it real easili .
and he said , well , you've got three or four folk back there that have put up httpd server .
you mai not know what those ar yet and , he said , i never heard of thi , and he said , but thi is the kind of thing that is probabl go to be realli us in the futur for peopl who ar try to manag document in a distribut fashion yada , yada , yada , right ?
and went on with the stori like that .
and thi gui wa bounc up and down in hi seat .
and thi wa the kind of respons that we got with it .
in <num> , late <num> , earli <num> , there's thi full suit of mosaic that work across the x window , the mac , and the window system .
and that's the point at which the gui who wa the presid at the time of the internet associ said ncsa ha fire a shot heard around the world .
becaus it's avail now across all these platform and anybodi can us it .
and , we saw , you know , an exponenti growth in the number of httpd server and the amount of traffic yada , yada , yada .
all that stuff that went on there .
and tim , of cours , tim berner lee at thi time , would sai , well , he had seen an exponenti growth from the veri begin and he's right .
we're both right .
we had seen it from the time we brought out the browser and thei certainli help with it .
but there wa alreadi an underli exponenti i think that wa go on in peopl be abl to put up their materi easili with html and do all that .
i rememb sit in room with commerci folk that came in and pitch to us .
and i'd bring the whole team in , the whole softwar develop group and sai listen to these gui and , you know , tell me what you think about thi .
and we were , nobodi wa sure what it wa go to do and there were peopl who start off build browser and just kind of never got off the ground .
it wasn't until the netscap effort start up that there wa suffici energi and suffici resourc , i think , to realli get on and ride and push and , and , you know , crank up a group of x hundr develop in a matter of month and then thei were , you know , quickli overshadow by the effort that microsoft put into it .
i rememb on of the netscap gui sai i came back from a meet with some folk up in seattl and thei said that microsoft now had , thi is when netscap wa ride at the top of it form , right , top of the game .
thi gui sai , microsoft just told me that , somebodi from microsoft just said that thei've got like <num> , <num> develop work on thi .
he said , at that point i realiz that we were , you know , go to have some difficulti .
and we , of cours , alwai felt that there should be more than on browser and so we want , becaus we were interest in standard and open , right , at the time .
if on , if there's onli on browser , then that compani get to determin what the standard ar .
and there were all kind of hassl earli on about put in differ featur and the browser drive the standard rather than the standard drive the browser and all thi kind of stuff .
so we want some divers .
but nobodi , i don't think in <num> , mayb by <num> , but in <num> , we were still amaz at what we had and amaz at the respons , and just tickl pink , thrill with the whole idea of thi be someth that wa a lot of peopl were go to find us and that we were go to have a lot of fun plai with .
we had no real sens , everybodi talk , we talk about all the possibl , but we had no real sens that it would take off and simpli monet so quickli .
if you go back and you ask peopl who were sit in front of machin in <num> , <num> , or <num> , all right , and you said , you rememb the first time that you us mosaic , right ?
or do you rememb the first time you us a browser , if it wasn't mosaic .
and the vast major of them that i , that i've run into sai , yeah , i can rememb it .
so at the end , joseph is realli talk about how microsoft had to react to netscap and how all of a sudden the market began to sort of crash togeth and ton of invest , a lot of intens .
trigger mostli by the releas of the window and the mac version of mosaic , <num> wa distinctli differ than <num> .
the staff at ncsa went and found netscap in april <num> .
the first world wide web confer wa held in switzerland .
shortli thereaft , the other first world wide web confer wa held in chicago .
there's some interest stuff about that in these book .
the book , robert cailliau's and tim berner lee's book talk a littl bit about that .
in octob , <num> tim left cern and went to form the world wide web consortium .
and then by the end of the year , window <num> beta <num> with an internet browser wa there , with tcp ip built in .
and so if you realli think about , i mean it's not even a whole year , it's almost six month where the world chang forev .
and so , at thi point , now monei is come into it .
up to that point , it wa mostli idea and research , but now monei is come in and we start see a transit .
so netscap wa on the forefront of do thi , and netscap basic took the open sourc product , thei start kind of compet just to build a browser .
but thei quickli decid that thei would go turn the browser and their web server more proprietari and try to creat distribut comput applic us proprietari thing that netscap would build uniqu to themselv , and thei would attack microsoft .
the moment it becam clear that netscap wa go to produc a wai , to , to develop softwar on mac , window , and linux portabl , then microsoft got worri .
becaus then the oper system wouldn't matter , and window , microsoft had put so much into the window oper system , that if the oper system didn't matter , it would realli , tremend threaten microsoft's busi , henc window <num> , with tcp ip and a free web browser .
so , netscap sort of scare .
now , as microsoft tri to bui netscap , netscap refus to sell , want more monei .
and then microsoft vow to destroi it .
and as microsoft wa come after netscap , first netscap tri to compet by build better and better softwar , like the javascript languag , which we'll meet brendan eich in a moment .
and then after that thei tri to sort of switch from be the proprietari bad gui and go becom more the open sourc good gui .
and that kind of blew up in their face and thei built thi open sourc mozilla , which eventu becam the mozilla foundat , which eventu begat firefox .
so now , what i want to do is i want to , you to meet two peopl , both of whom now ar the senior leadership at the mozilla foundat .
brendan eich is the cto of the mozilla foundat , but he'll realli tell us about <num> , where he invent javascript in ten dai as part of netscap .
and then we'll meet mitchel baker , who wa the founder of , on of the founder of mozilla .
and she will talk about how netscap kind of , fortun declin , got purchas by aol , and fortun declin even wors .
and how thei basic pull the netscap codebas out to form the mozilla codebas , which then becam firefox codebas .
and the firefox , of cours , had thi great idea , that mitchel will tell you about , of have a search box .
and thei made ton and ton of monei , as mitchel will tell you about .
so , up next , brendan eich of the mozilla foundat and mitchel baker of the mozilla foundat .
i wa hire at netscap in april , <num> .
netscap had alreadi launch it <num> mosaic killer .
if you rememb , mosaic wa the big , i would sai mosaic wa the big browser until netscap took over , so when i came to netscap , thei'd been go for about a year .
i actual had an option to go on to it at the begin and i pass it up , but i went in in time to do what i wa tempt to do , which is a program languag for html for web design and programm to us embed directli in the web page .
not someth that wa like come along at the time call java which wa more of a profession's languag where you would write real code with type declar and you would have to write that code in a wai that compil .
i wa write someth , javascript , that could be us by peopl who didn't know what a compil wa .
thei were just go to load it , it wa like basic .
and that wa realli the pitch , that we would make two languag , not on , analog to microsoft's visual basic for c , so javascript for java .
bill joi of sun actual like that idea , and agre with it .
and he wa the gui that sign the trademark licens , by which what i had creat becam javascript .
the name is a total lie , it's not realli relat to java so much as to a common ancestor c in syntax .
and , and , to the extent that we made it easi to us and someth you could copi , past , program , or start small from script and grow to program , javascript ha succeed massiv .
it wa also an incred rush job , so there were mistak in it .
and someth that i think is import about it is that it , i knew there would be mistak and there would be gap , so i made it veri malleabl as a languag .
and that ha enabl web develop to make it be what thei want it to be , to project their own style of , not just api but almost languag pattern on it and creat their own innov network , to us eric von hippel's phrase , or innov toolkit on top of it .
so it's not a languag that tri to restrict you to on paradigm , it's a multi paradigm languag .
i mean , there's all these thing where a languag come out and immedi trip and fall and you have to sort of , it's okai mm hm .
the second time , mm hm .
but there wasn't realli a trip and fall in javascript , why ?
so you could sai there hasn't been a version two and that's true becaus i've tri to work on what might be a big version two , that wa call the fourth edit , and that fail .
there ha been evolut .
the web is all about evolut .
peopl don't quit see thi while you're in the midst of it becaus it's microevolut .
but web page from the 90s don't all render properli these dai , thei don't all work right .
and a lot of them ar lost , and onli avail through webarch . org .
javascript had enough at the begin , enough good part to us crockford's phrase , or enough genet materi from other languag .
you know , first class function , prototyp inherit from self .
the inherit of first class function from scheme is realli kind of a fraud becaus scheme is differ in mani wai and i couldn't make those differ manifest .
i couldn't do the scheme thing in javascript .
that wa under these march order to make it look like java .
i had ten dai to prototyp it .
so scheme wa more of a spiritu than a actual influenc .
but first class function ar veri power and thei fit with an event handl sort of program model .
i wa inspir by atkinson's hypercard .
so that's why you see onclick in javascript .
hypercard had thi pattern for event handler call on , you know , onpag , the downer , whatev .
so javascript had enough good at the begin to surviv .
now if you think back though to the mid 90s , javascript wa curs becaus it wa mainli us for annoy like littl scroll messag in the statu bar at the bottom of your browser or flash imag or thing that pop up window massiv .
we could have put in control for those , and we should have .
eventu browser , firefox kind of champion thi , led thi automat suppress of annoy that made it all much better .
and with moor's law compound and with javascript get some evolutionari improv in the standard process , it becam realli quit fast enough and good enough in <num> and <num> , to beget the web <num> revolut .
that wa , i think , ti in with firefox's retak market share from ie and develop realiz there wa a client side to the program stack that could be express and power , and could be fast enough thank to faster comput mainli .
you must have had some kind of train .
oh , i'd done a lot of some kind of set of experi that got to the point where you could pull from scheme , and , and .
mm hm .
i had implement , i wa sort of a languag buff when i first enter comput scienc .
i wa a math physic major origin and end up math and comput scienc when i final got my undergradu degre .
so i , i wa program formal languag theori appli to recogn languag .
lexic analysi , parser , automat construct parser from grammar .
i love that stuff becaus it wa all veri pretti and clean , theoret .
and it , it still is .
it hasn't chang a lot .
there's been onli on or two innov sinc my time at the univers in the earli 80s .
so what , what that gave me wa the abil to quickli knock out , you know , sort of a , a languag interpret .
i could do the parser and the scanner , i could gener bytecod , becaus netscap want to do a server side embed , and javascript , even though it could have been a treewalk or someth that interpret pars tree , i made a bytecod for it .
and it wa an intern bytecod , not the java bytecod that's becom a handicap for java , i think .
and i knock all that out realli quickli becaus i'd done it befor .
i'd done it at silicon graphic to build sort of network monitor tool to captur packet base on express that were field of the variou protocol header .
i'd done it for fun , just to make my own languag .
and final i got to do it realli quickli .
the , the speed wa an issu for me .
it wa partli we were all feel like microsoft wa go to come after netscap .
becaus thei had tri to bui netscap in late <num> for too littl monei .
i'd heard about thi , it wa befor my time at netscap .
but we also were in a weird game period with respect to java .
becaus even at netscap , some peopl thought , well , if we have java , do we realli need a second languag ?
thei didn't see the benefit of the visual basic companion languag for a much larger cohort of programm or amateur , design , beginn .
to , to write java , as to write c for the microsoft platform todai , took a lot of educ , and greater pai .
it wa a higher price proposit .
to get peopl glu compon togeth and design page and fill gap us javascript as thei did with basic and visual basic in microsoft's window , wa cheaper and wider spread .
it also enabl thi user innov toolkit approach , to us von hippel's phrase again .
becaus javascript wa malleabl , becaus there were so mani web design , you would see differ school of thought on how to us it emerg , and thi ha becom quit clear over the past ten year with the variou javascript librari .
and i think that's actual an advantag , as i said earlier , to javascript , that we're not tell you , here's the on wai to write it , here's the on true object orient paradigm .
here's the onli wai you should ever make a reusabl extract .
it's not unmix , right ?
it's hard for beginn , peopl reinvent certain wheel and make mistak do it , or don't like have to acquir a librari .
but you see jqueri , a veri popular librari , becaus it give peopl thi veri sweet queri and do paradigm .
and , and again it's not mandatori with javascript , but a lot of peopl learn that and thei think that it is javascript .
thei think jqueri is a languag , or thei think , you know , jqueri is the tail that wag the dog .
jqueri is great , and don resnick us to work with us at mozilla .
and , but there ar so mani good librari out there now .
thei're actual shrink and becom more composit , which is a good trend .
so javascript , by be malleabl and sort of foster user innov , i think ha plai a uniqu role .
if i had done someth more rigid , i think the odd ar pretti good it would've fail .
i , i just can't imagin how you would have escap from the object orient pattern of c .
partli i had to , becaus if i'd done class in javascript back in those ten dai in mai in <num> , i think i would have been told thi is too much like java , you're compet with java .
you know , somebodi at sun would've yell at bill joi more than thei did .
and it might have kill the deal .
so i wa definit not onli under a time constraint , but also under market order .
make it look like java , but don't make it too big for it britch .
it's just thi sort of silli littl brother languag , right ?
a sidekick to java .
but then you , you put in some primit .
i snuck some stuff in , yeah .
you put some primit , you know , like closur and all those other thing that , that it's like you can build what you want .
ye , and , and that kind of went under the radar for a lot of peopl , and it wasn't all even there , you know , in good work order in the first releas .
but over the next few year it becam not onli well known , i would sai more standard than well known .
over the next ten year it becam evangel , like crockford's a big expon of the closur pattern and the good us you can make of closur .
so peopl find the malleabl and the express and the power compel enough that some peopl actual resist ani version two .
thei sai , i don't want you to add clich or common , special form for pattern that i'm more happi write myself or acquir as a librari myself .
you , you've creat an abstract that implement can do crazi thing with , right ?
mm hm .
and peopl can rethink what the interpret's realli suppos to do .
thei can .
and thei can just sai , okai , here come v8 .
and thought about a lot of thing differ .
and it put , that's right .
right .
optim that haven't been tri , i would , i knew about these optim becaus i had studi smalltalk itself .
but nobodi had gotten the time and the monei .
googl wa mayb first .
there were other effort go on in parallel , and appl and mozilla have kept up as best thei can .
but v8 deserv a lot of credit for push thi forward .
it wasn't quit as first on the scene as , as thei claim , becaus it wa all come togeth in <num> .
but it ha been veri help and it ha shown peopl what can be done .
what's interest to me is that you then go and put differ , more intens workload on the languag .
and you see there's a new v8 that should come out of somewher .
and it mai not come out of googl becaus thei mai have tire of optim javascript .
in fact i believ dart is a respons to that by the princip who did v8 .
thei want to do a languag where thei don't want have to worri about all thi crazi compat .
it mai not succe and it also doesn't give javascript the next level of perform .
but i believ that level is there .
and it's still improv perform much more dramat than a languag like java where the gain ar a percent or a fraction of a percent on the standard benchmark .
but a lot of html5 develop now , quot unquot html5 , javascript , css , web api , beyond what's in html5 , is take off .
you're see like zynga do html5 onli game .
it's realli come faster than some thought .
and i talk to ventur capitalist fred wilson of union squar in new york he said yeah , it's , it's here .
he thought it would take year .
it's , we've turn that corner .
and so you call it html5 , what it realli mean is it's the web stack .
it's the same stack you us to write web page and host the web app .
you can write app that run in your devic , app that ar mayb host mayb offlin , and mayb the line is blur so that you can associ them with a url but you can also take them on the plane without ani fear that you're go to lose anyth by disconnect from the internet .
netscap is , of cours , known for it netscap navig product , first commerci browser on the web .
so , first tool .
first gener realli us to get on the web , and that wa success for a while .
and then competit becam quit stiff from microsoft .
the differ wai to compet would be by build a share asset .
instead of netscap versu microsoft .
that netscap would gather contribut of volunt and other commerci part , commerci partner , and then build the product that would be share .
and that group of peopl knew that to be open sourc , you have to be real .
you couldn't just sai , oh , we ar open sourc , love us .
you realli had to manag it differ .
so at the time there wa six or seven or eight of us who were emploi by netscap as mozilla . org staff .
and anoth <num> or <num> emploi by netscap as netscap engin , build the netscap product and contribut their work to the mozilla open sourc project .
so we were all in the same build .
we all went to mani of the same meet .
but we had slightli differ goal .
becaus although we call it the netscap product , netscap had been purchas by aol alreadi .
and so the client itself wa diminish in import , and the import of the netscap client wa to push traffic to the aol websit .
but we , of cours , at mozilla . org were an anomali .
becaus our charter wa to build a success open sourc project .
and so , that work for quit a while .
you know , there , there were tension .
these were the dark year for mozilla .
we came to understand we need to rebuild our core technolog .
that took a long time .
while we were do that , market share continu to slide .
and there wa a set of tension over what doe it mean to run a real open sourc project .
and as it turn out , there were two compet view .
and on view wa that open sourc is phenomen , we're veri happi that the code is out there .
anyon is veri welcom to take that code and us it .
we absolut want to build a larg and engag contributor commun .
but all decis and all author will be held by the manag group and we'll make those decis as we think best , which is , of cours , to benefit the client we're try to build , which wa the netscap browser .
we at mozilla . org were convinc it wouldn't be success , that build a product to benefit aol onli wouldn't gener the kind of interest either from individu volunt or from commerci partner that we need to be success .
and that we found the differ in perspect from the volunt made the qualiti of the project much higher .
thei were under immens pressur to ship thi product becaus the compani need it .
and not onli wa it difficult technic and in an engin sens , but we at mozilla . org were sai , and there's these other thing , right ?
you mai think it's good enough , but we're tell you it's not becaus thi is the feedback that we're get .
and you need to chang some of the develop process and manag practic .
and so thei thought well , i , i'm not sure what thei thought .
but we experienc it as no , we realli need to keep go on the wai that we're go till we get thi product ship .
but unfortun , here the mozilla commun wa correct becaus when that product ship it wa a failur .
that wa netscap <num> .
univers acknowledg as a bad product and pretti univers acknowledg as the end of the netscap product line .
you know there ar all those peopl that had held on and hope through the netscap <num> dai and wait and wait and wait for for the updat onc thei got it pretti much gave up .
so that's what we experienc .
so that certainli didn't help us , that wa unfortun .
it did reinforc our view that , you know , our view of the world wasn't crazi .
and , so we continu on and it wa still long and slow to get technolog and product that we like .
and the tension continu .
the manag tension continu .
you know , the failur of netscap <num> didn't make anyth easier .
and certainli , for the , the aol folk , it realli didn't make thing easier either .
and we fought a lot about the ui .
i think ui's a constant sourc of tension .
but in our case , it wa wors .
becaus some of these fight would be .
it make sens to aol to put someth in the product .
in the interfac of the product .
either a button to an aol site , or someth that ha an ad in it , or some featur that a partner ha paid for , so it gener revenu .
we think it might send peopl to our site .
you know , some of our user might realli like it .
so it all made sens from their point of view , but if you're not build the aol client to benefit aol , and you're try to build an open sourc product that is us for mani peopl , then , of cours , those featur ar a big neg .
and so those were veri fierc fight , becaus , becaus the manag of the client group had veri clear opportun in hand that thei want to build into their product .
and we were thi small group sai no .
you were diametr oppos .
we were pretti oppos in that case , and we would sai no , you can't put it into the core product .
you're welcom to have a build system on your own and add it in later .
and that's how we end up do these thing .
so we , so we did develop a system for it .
but it wa , of cours , it's awkward .
and you're alwai rub against what should go where .
and it turn out , even in the veri earli dai , that the open sourc mozilla version of the product got a lot more test than the netscap version .
and we also tri to build in some qualiti mechan that again , seem normal todai .
so you can't , you get hire as an employe , you don't automat get the right to check your code into the tree , right ?
someon ha to , you know , look at your qualif and sai , at mozilla and the wai we work , we understand your code level , we understand you know how we work , we understand if someth goe wrong with your code , you know where you need to be , and all of these thing .
and that's a veri difficult set for a hire manag to sai , well i've just hire you , and you can't be as effici as you think you can becaus there's yet anoth vet process by thi other group .
so i understand , yeah , why it wa difficult , but on the other hand as an open sourc project , if you can't control the qualiti of the code and you don't have ani sai in it , you're not veri real .
aol client fortun declin and the netscap browser declin and declin precipit after thi netscap <num> .
and so aol wa interest in lai off peopl and in on of the big layoff , i wa includ .
and that wa , see , that wa in <num> .
and that wa seen as a power struggl as well .
becaus by that time the fight back and forth about what we were build and who wa make decis were pretti well known within the engin organ .
it's hard for them not to be .
i mean , it's true anywher , right , but , but in some case the fight and the bug ar all veri public as well .
but , and , and so , so i wa laid off , fire , depend on your , you know , how you want to describ it .
and as it turn out , it wasn't realli possibl to take my place and i continu as a volunt and the netscap engin organ wa veri clear whose leadership thei were most interest in follow .
and so we had to work out a wai in which the manag at netscap aol that remain and i work out a , you know , sort of a wai to work togeth enough so that thei could ship the product thei want to ship , but that i continu to lead the project .
and i think that wa a surpris not , not so much to me i think .
and so i work as a volunt on the mozilla project , and for a number of year , includ the year in which we ship our first product which we call mozilla and which we were veri proud of technic .
and for it dai , mani peopl were surpris at how good it wa but it didn't have a good user experi .
but eventu i end up work on anoth open sourc project with mitch kapor for a while .
and that wa lucki .
he had start thi open project and reach out to talk to brendan and i about it to learn someth .
and the dai that he wa schedul to come down and talk with us wa the dai that i wa laid off .
and so it , it wa an odd sort of time .
chandler invest , by ani chanc ?
yeah , that wa chandler .
that wa pre chandler , but it wa , yeah .
so i , i work on that for a while .
and mitch wa alwai a support of mozilla .
even befor firefox , when he didn't like the product .
but he recogn that we were an import part of the ecosystem .
and that went on until <num> when aol decid to stop invest in a client almost complet and , fortun , thei knew that just kill it wasn't good .
thei knew enough about mozilla and the name and the brand to think it would be good to do someth with it .
and , so eventu i end up work with them , and , and thei , some of the peopl there knew mitch as well .
and i wa work with mitch , and thei knew him , and so we all , you know , spent a chunk of time try to figur out what wa possibl .
and my partner brendan wa still at netscap , veri eager to make a move , and mani of the kei peopl we want were also desper to keep work on mozilla .
and so we end up get a two million dollar seed monei from aol and mitch wa help with that , and few other thing , trademark , name mozilla , and the four giant server which were so import to us at the time and which would have taken almost <num> month to get through the purchas cycl at aol .
and so i think we still have those box sit around , becaus thei were so import to us at the time .
and so in <num> the mozilla foundat wa form .
and mitch wa the first chairman becaus he had done so much and had so much to offer .
and brian belendorff and , and chri blizzard , who work on mozilla forev , and brendan and i were on the board .
and aol understood that there were three or four peopl that would be leav , when thei , thei did some kind of re org or when thei close down the client group .
and that those peopl would be come to join us .
and of all the peopl that we thought would be most help at mozilla , thei all came .
that wa about nine or ten .
so we were , and mitch continu to support me and on other person in mozilla part time .
so we were mayb <num> or <num> peopl .
and i , and brendan and i had alwai felt that we need employe .
it wa excit .
it wa a littl scari becaus we knew that two million dollar wouldn't go that far , and that we had a lot of work to do to make ourselv real .
we were still <num> month awai from ship , well <num> month awai from ship firefox .
so that part wa scari .
but it wa immens excit .
on of the friend of mozilla show up , and thei had a big leas , and a littl bit of space thei could subleas to us .
so we found a funki littl room , wai in the back , not even a sink .
veri odd , but , but we were realli happi with it .
and we work awai on build our product .
at that time , we made what wa a pretti fundament chang that wa critic , and we decid unambigu it'd be a consum product .
that seem obviou , but when you're a bunch of develop it's not that easi , and it mean that you have to strip out a lot of the thing that ar clunki for a gener consum .
you realli have to be determin that you're build for a gener consum , not yourself .
and i think mani open sourc project probabl don't want to do that and shouldn't try if you don't want to , becaus you have to keep at it .
so we start do that .
out of the blue , some visual design appear from princ edward island in canada and so we start to get nice look logo , which we'd never had befor , and visual element .
and then we tri to figur out what to do with the start page , becaus we knew that mozilla develop tool weren't the right answer and we just , took us forev and we look at all sort of thing and final decid the on thing we knew that everybodi did wa search .
you know we'd have peopl who'd sai well it's obviou you should have the bbc , at least an english languag version .
it's obviou .
and then , you know , our engin gui would look up and sai well , it's not obviou to my <num> year old daughter that that's what she want .
it's not obviou to my son either .
so , but everybodi us search .
so we thought we'd have the search box .
mayb we should put that on the start page too , make it easier , mayb it'd be more obviou to peopl about search .
so we went to talk with the search provid .
we had veri fruit discuss with googl .
i think thei also saw the valu of have a mozilla browser in the world .
thei were veri explicit about that and i believ them .
and so , thei were also open to do a a busi arrang .
and so often peopl ask how mozilla get paid , and we're like most busi on the web , search and ad .
you do a search , you know you'll see ad .
if you follow those ad , revenu is gener .
you know it goe through the system and we get a littl piec of it .
as do other browser maker .
so it's veri similar to the busi model on the web .
and we did someth that i believ had never been done befor , which wa to make sure that googl and yahoo were right there next to each other .
i , you don't see them next to each other .
you have to click on the arrow , but thei're there .
and todai peopl laugh at me when , when i sai that , becaus you onli see on , but , but i negoti that , and that wa an absolut utter i will walk awai from the deal term to everyon .
becaus i don't think i'd ever seen it befor .
and i wasn't .
you know if you get on a plane and you want a diet coke , but the plane onli ha diet pepsi , becaus that's their deal , you're angri , and if you don't want a diet pepsi and you want a coke .
and i , i us that exampl .
i said , i'm not go to have firefox user angri at us becaus thei want on or the other .
you know , you have to agre you're both go to be in the product .
but it also is your valu , right ?
it is .
ye .
your valu front and center .
ye , becaus the choic is there .
we can do it .
and , and to not do it would be to take awai a choic that somebodi realli want .
and it matter to someon , so .
so we , we have a choic in the search box .
but we still didn't realli know what to expect .
so we ship firefox .
and our sens that we were on to someth turn out to be far more true even than we knew .
we'd seen a , you know , rise in interest from <num> and <num> that wa pretti notic but onc we hit the releas version it just explod .
and part of that wa it wa the perfect product .
thi time we had a product at the right time in the market .
and then internet capabl have grown and now peopl could actual download a browser easili , and more peopl had bandwidth and abil to do so and a comfort level to try it .
so that wa good .
we had a beauti product , and it wa an import product .
and the altern wa horrend and danger and aw .
and so all of that combin to creat thi giant excit .
and so firefox market share climb by , you know , a percentag point immedi and start move in these huge number .
so it wa a complet viral storm with noth drive it other than , you know , the product and the need itself .
and so that took everyon by surpris .
you know , we were hope to be abl to gener a few million dollar to support ourselv for the next year .
you know , we had <num> or <num> employe , you start to add that up , so we were hope to make enough monei to do that .
and it turn out , you know , we gener that amount of monei befor the end of the year .
six week or eight week or whatev it wa befor the end of the year .
and so , thing , actual thing got even more stress and more hectic at that point .
becaus now you kind of got the proverbi tiger by the tail .
we're still <num> peopl , right ?
so that immedi need to grow and that sens of pressur and stress combin with elat and success is probabl , you know , i don't know mayb it's like have a child .
right , but it's that , it's that combin doesn't immedi get easier .
it's a littl easier to be anonym .
ye , ye .
you're nervou .
that's for sure .
we certainli see that .
and so by the end of , firefox ship in <num> .
just actual , we just pass the eight year anniversari .
and you know , by the end of <num> , it wa pretti clear that we were a differ organ .
we were , we were i would sai still struggl with a differ set of problem , but we had chang the natur of the problem realli quit fundament .
and , you know we'd done so in a wai that , that our user love .
by <num> we were in a realli differ world , where we began to be abl to actual influenc other , and that's alwai been the goal .
i mean , market share is nice and it's nice when peopl love your product .
market share is a valid that you produc the right thing , so that's awesom on it own .
but the more import , i would sai not more import , equal import goal is to be abl to influenc not onli ourselv , but other in the industri so that we start to see more of the thing that we care about .
so that wa a seri of action pack video .
brendan and mitchel have done a great deal .
and if you look at the current html <num> , javascript , realli some of the work that brendan and mitchel have done have creat thi new world that we live in right now with these highli interact applic , javascript , ajax , it can realli all trace it moment back to it creation moment back to these folk , who a , creat the clever technolog , and b , fought to keep it from becom too proprietari .
and so a lot of peopl gave up on , sai , their own person benefit to believ in a caus that wa the greater good of societi through open sourc .
now the thing to also think about , just kind of in the back of your mind is , if it wasn't for microsoft , would netscap have been success in it origin strategi to make the web and both server and the client , make them proprietari ?
thei were go to sell web browser .
thei were sell web browser from <num> to <num> .
you us to be abl to go to a store and bui a web browser .
your op , your comput didn't come with a browser .
as a matter of fact , the first time that microsoft put the browser in with their oper system , thei got su for it .
but by microsoft try to catch up , thei had to give their browser awai free , which made it imposs for netscap to charg for the browser .
and so in some wai , not that microsoft wa try to make the world safe , but thei basic blunt the , blunt , put hundr and million of dollar into blunt netscap's strategi and make sure that .
well , thei didn't make it , but it , the net result wa the creation of firefox and mozilla , and a much more , and the world wide web consortium , and a much more fair marketplac .
so the world wide web consortium , it wa creat in octob of <num> .
cern made a consciou decis , even though it knew that the web had been creat there , that the sort of futur curat of the web and what the web meant wa not someth that a physic lab should take on .
and so tim berner lee went to mit .
mit welcom him with open arm , thei fund him , thei help him creat the world wide web consortium , and have done a wonder job in lead the charg in defin the standard that , that make , that defin the standard that defin what html is , what css is , etc .
now in octob <num> , there wa no wai to know if thi wa go to be success .
again , it wa somewhat of a reaction to netscap who had thi sort of like , you know , bunker mental that netscap wa go to take it all over and own it and push everi , all these open peopl awai .
tim , and mitchel , and joseph , and all these peopl did not want that to happen .
thei felt it should be free for everybodi .
and open , and mani browser , and mani server , and everyth should interoper .
and standard were the kei to that .
and the world wide web consortium wa go to be the vehicl through which that happen .
but thei didn't have ani power compar to netscap , and netscap had all the monei .
but ibm and microsoft were not particularli fan of netscap either .
and so thei earli on join the world wide web consortium and gave it enough credibl to eventu sort of take over , in term of be veri respect .
and the standard produc by the world wide web consortium ar high qualiti and veri respect and , and , thei're , thei're a guid , thei're a shine light to keep the web safe for the rest of us .
and let proprietari compani do their proprietari thing , but the world wide web consortium is a real import part of todai's web .
and so we final come to the point where you can assum the web , where the web is just there .
there wa a bunch of browser .
there wa a bunch of server .
there wa some open sourc stuff and non open sourc stuff and , and i want to briefli introduc you to tim berner lee , thi footag wa taken by richard wiggin , not me .
caught him in a confer and he's onli , we onli got a minut of hi video .
last month i wa off in boston for the 4th annual world wide web confer , and i had the opportun to talk to the inventor of the world wide web , tim berner lee .
and i ask him a littl bit about where ar we go with thi web stuff .
and we have just a littl bit of footag from tim tell us where that's go to be .
you ain't seen noth yet .
but you wait until peopl assum the web .
when the web becom someth you can assum , when the web , when the infrastructur is all laid down and we have an inform space , then it would be time for the next revolut .
and who know what that will be .
it's hard to imagin a greater revolut that what we've seen .
i mean , i go to the smallest place and everybodi's put up a web page .
right , the web could onli take place , the revolut , the web revolut could onli take place becaus of the internet , which had been a quieter , smaller revolut , but that had been , the internet itself quietli be deploi throughout the world , had happen .
and becaus the internet wa someth peopl could assum , the web revolut could take place .
when the web is someth you can assum , then mayb a cultur revolut , a nicer cultur revolut .
and the cultur revolut , perhap , or mayb we'll find wai of do thing better that we hadn't imagin .
pretti neat , rich .
on of the thing that i , i like about it wa he , he just said we're go , hi idea wa the next step is someth complet differ , a cultur revolut as compar to just a littl more technolog .
i think you can see that tim berner lee is a real bright gui with a real strong vision of the futur and a real deep commit to the , the web and the internet be a agent of chang in the world .
and , and i think that it's go to continu to be that , unless proprietari compani can get an upper hand .
and so , it's realli incumb on all of us to protect the freedom of the internet .
and there's , there's , believ me , there ar organ that think thei should run the internet and the web .
there just ar .
thei never have stop .
so we're at the point where the web is all here , it's quit amaz .
and befor we move on , i want to , i want to character just a littl bit about the peopl you've met so far and , and talk about some of the common , common thing that , that thei , thei have between them .
and in a wai thi , i got the book the wisdom of crowd here , on of my favorit book .
each on of these peopl when you listen to them talk , thei would quit often talk about all the other peopl do all the other work and , and thei rare consid themselv in ani wai hero .
thei rare consid themselv as the great innov .
thei alwai see themselv as part of a collect curios .
and there were mani thing that i haven't told you about that were curiou explor that help inform it and , and thi wa realli research , and you know until sort of the late 90s , it wa just a question of how to do it .
and at some point , after the late 90s , it switch to what to do with it and at that point we have a whole differ group of peopl that start realli enter the world .
and , and on that's , on of the earlier on , and ha benefit greatli from it , is jeff bezo and he's the founder of amazon . com .
and if you listen to jeff you will hear that he talk veri differ .
come at it from a busi perspect .
he's not necessarili try to make the world a wors place , he's try to make the world a better place .
the fact that you can get , you know , all these book like the next morn , that's kind of cool .
so what amazon doe is realli wonder , it's , it more effici for societi , it's econom benefici , but he ha a profit in mind .
he is sai thi web exist , browser exist , protocol exist .
how can i take best advantag of it ?
richard wiggin caught up with jeff in <num> , so just look at how smart thi gui wa in <num> .
everyon els figur thi out much later , but jeff bezo is a realli , realli bright person .
so , here's jeff bezo .
hi there .
who ar you ?
i'm jeff bezo .
> and what is your claim to fame ?
> i'm the founder of amazon . com .
> where did you get an idea for amazon . com ?
> well , three year ago , i wa in new york citi , work for a quantit hedg fund w hen i came across the startl statist that web usag wa grow at <num> percent a year .
so i decid i would try and find a busi plan that made sens in the context of that growth .
and i pick book as the first best product to sell onlin after make a list of , like twenti differ product that you might be abl to sell .
and book were great as the first best becaus book ar incred unusu in on respect , and that is that there ar more item in the book categori than there ar item in ani other categori by far .
music is number two .
there ar about <num> , <num> activ music cd at ani given time .
but in the book space there ar more than <num> , <num> , <num> differ book worldwid , activ and in print in ani given time across all languag , more than on and a half million in english alon .
so when you have that mani item , you can liter build a store onlin that couldn't exist ani other wai .
and that's import right now becaus the web is still an infant technolog .
basic , right now , if you can do thing us a more tradit method , you probabl should do them us the more tradit method .
what kind of inventori do you keep ?
we inventori the best sell book at ani given time worth inventori in our own warehous , onli a coupl of thousand titl .
and then have , we do almost in time inventori for anoth <num> , <num> titl or so .
we get those from a network of electron , we order , order electron from a network of wholesal and distributor .
we order those todai , thei're on our load dock the next morn .
then for anoth <num> million titl , we get those directli from <num> , <num> differ publish , and those can take a coupl of week to get .
and then the , there ar a million of out of print book in our catalog .
we have a catalog of two and a half million book altogeth .
those million out of print book , some of them we can get , and some of them we can't .
but we find them if we can and then we ship them to our custom .
we do kind of a search on those .
what's almost in time inventori ?
almost in time inventori is the phrase we us to describ the whole select of , of book that we offer .
it's basic the thing that ar , you know , below the 2000th best sell book up to the <num> , 000th best sell book .
those ar the titl we can get from a network of more than a dozen differ wholesal .
so if a custom order a book from us todai , we order that book from our wholesal todai and that book show up on our load dock the next morn .
and then we can ship it to the custom .
thei sai on of the toughest thing to do on the internet is to captur mindshar .
what wa your secret ?
how did you do that ?
yeah , even more gener , i agre with you that , you know captur mindshar on the internet is extrem difficult .
even more gener , it's the late twentieth centuri , not just the internet .
you know , captur attent .
attent is the scarc commod of the late twentieth centuri .
and on of the wai that you can do that , and it's the wai that we did it , wa by do someth new and innov for the first time that actual ha real valu for the custom .
that's a hard thing to do .
but if you do do that , then newspap will write about you , what you're do .
custom will tell other custom .
and you'll get a huge word of mouth fanout .
and , and that can realli drive and acceler busi .
and that's what happen with us .
in the first year of open amazon . com to the public we didn't do ani paid advertis and all of our growth wa fuel by word of mouth and media exposur .
i saw littl ad at the bottom of the column of the new york time .
that wa our veri first advertis .
we don't do that ani more but at the veri , at the veri begin we did littl tini ad at the bottom of the front page of the new york time .
i thought that wa veri clever .
it's sort of us a url as a macro becaus i , i read .
and it expand .
we're a bookstor , click here .
right , that's a great wai to think of it .
> and it work veri well appar .
i don't know , you know .
the problem with that kind of advertis is it's extrem difficult to track .
put a differ url for everi that's the problem , is you want peopl to start to learn your url .
so you don't wanna actual us a differ on .
and , it's veri easi .
on of the great thing about onlin ad .
we do advertis todai in mayb <num> differ , on , on differ websit , we do banner ad and that advertis is veri easi to track in term of know how effect it is .
so we know , for each piec of creativ in each venu , not onli how mani click through we get , but how mani sell through we get , how mani dollar of revenu it gener per ad dollar spent on that creativ and that venu , and that is a sort of a market's , you know , nirvana in a certain sens .
well , it's an excit place to be on the web right now .
oh , it absolut is .
i mean it's just incred .
thi is .
what's realli incred about thi is that thi is dai on , thi is the veri begin , thi is the kitti hawk stage of electron commerc .
we're move forward in so mani differ area and lot of differ compani ar as well .
in the late twentieth centuri it's just a great time to be aliv .
you know , we're gonna find out that , i think , a millennium from now , peopl ar gonna look back and sai , wow , the late twentieth centuri wa realli a great time to be aliv on thi planet .
so , if you're a stockhold of amazon , i think you're in good shape , becaus he's a bright fellow and he's alwai look for how to realli do the right thing and , you know , give us product that we realli like .
now , in thi , we sort of evolv the modern internet .
and , and much like jeff .
jeff said that invest wa grow at <num> , <num> a year or someth like that .
there wa thi mania in <num> , <num> , <num> , where peopl just bought , and bought , and bought .
and the notion that commun wa go to be so valuabl led to , in a sens , an overbuild of the fiber optic plant .
we have a massiv amount of fiber optic in the ground right now .
and our abil to send more data through the exist fiber by just upgrad the equip at the two end , that's grow veri rapidli as well .
and so we're in thi realli weird world now , where a fiber optic between ann arbor and chicago , <num> mile , is not that much more expens than a piec of copper wire that goe <num> mile in <num> .
and so distanc is less and less import on the internet .
that's why long distanc phone call don't cost ani monei anymor , becaus long distanc and local ar not that differ becaus there's so much fiber in the ground .
but just on thing i want you to think about and wonder about is , will we run out ?
the , we ar live off of the overbuild that happen in the late 90s , when thei put so much in , and thei've been abl to upgrad so effect , but we might run out .
and where will the monei come from to dig the next set of trench to put the next round of fiber in ?
we'll have to see .
so if we take a quick look at , thi is a graph of the growth of the , of the server on the world wide web , and if you take a look , we start in <num> with on web server , decemb , <num> with tim berner lee have on web server .
and then it sort of doesn't grow , and then you sort of see kind of like thi takeoff in last two year , last late two year of the 1990s , where you go up to about , you know , <num> to <num> million , you know , from what , i don't know , <num> is <num> , less than a quarter of a million dollar , less than a quarter of a million host .
you see the kind of the crash .
the boom , and the crash , where it wasn't grow .
and then you sort of see anoth new graph , which is realli , thi is when everybodi had to be on the internet .
everi littl store start be on the internet .
everi web , on had to be a web server .
thi wa kind of the big on come on .
and thi wa sort of like the flame out of the exuber growth of the late 90s .
and thi exuber growth get so exuber that it realli chang the stock market , in the unit state and the rest of the world , to the point where , you know , from the earli 90s to <num> wa the longest period of expans .
and there's a lot of factor for thi , but on of the factor is , as we began to us commun and comput to make commerc more effici , that trigger a great deal of growth .
it also trigger over specul , right ?
and so the kind of , the , thi part here , the crash , the dot com crash , wa a bit of the over specul work it wai out .
probabl if , you know , if thei hadn't over specul it , it would go like thi instead , but it can't be like that .
you go crazi , crazi , crazi , crazi , crazi , oop , oop , oop , oop , oop .
and then we sort of had a crappi economi for a while after that .
but again , the web , the internet , and all the technolog that i just talk about realli put a stamp on the entir world's economi in the 1990s .
so , i could go on and on and on and on about thi stuff .
open sourc is a big part of thi .
i will put link up for these video that i've got .
these ar three open sourc luminari that i've interview .
richard stallman is the free softwar foundat , the gnu , which is much of unix util ar written thi wai , compil ar written thi wai .
he is a tremend advoc for open sourc softwar .
also we meet brian behlendorf , from the apach foundat .
and the apach foundat wa form base on the web server that wa creat at ncsa , becam the first web server , that wa the apach web server .
so that lineag goe all the wai back to joseph hardin and the team at ncsa .
and then rasmu lerdorf is the inventor of php , and on of the mani veri popular web program languag for build web site .
and so i'll put the link up for these and you can take a look at them .
but thei're not requir for the cours .
and up next we're go to start dig into how thi all work rather than what it is , how it came to be .
so we're go to talk about what it is rather than how it came to be .
and so , thank you for your time so far , and i look forward to see you at the next lectur .
oh , oh hi , sorri .
i wa in , i wa in the forum .
i guess it's time for thi week video .
so thi week we're move from histori to technolog .
and in a sens were go to tell the same stori again .
you know , we'll sort of start from the begin , but we're go to start from the bottom and move upward so it sound as though we're kind of take about the same thing , but just from a more technic perspect .
don't worri , you'll be fine .
we're not go to over , there's no math , i promis , there's no program .
don't worri about that .
so of cours , i appreci ieee comput magazin , who i write for to let me us the articl that ar associ with some of the video , as well as the folk from up in michigan who have help me , so .
hang on a sec .
now hang on , i've got a phone call .
i'll be right back .
okai , well that's been sent .
sorri for that interrupt .
again i thank everybodi for the us of the copyright materi .
part of my hidden agenda in thi class is that you will be abl to look at thi xkcd comic and you'll understand the humor .
so , i'm go to stop for a moment and let you look at it and see if you get the humor .
okai so mayb you did , mayb you didn't .
but hopefulli by the time we're done , you'll have a better chanc of get here .
so if you recal , the most academ throughout the 60s 70s and 80s .
the best thei had access to wa thi store and forward network where you would send a messag and it would go into a comput and it might sit for some time .
then it would find it wai across a network and it would sit for a littl while longer .
find , and , and hop , and there ar these multipl hop .
we call these hop , and each of these would be a coupl hundr mile perhap .
and to go from sai michigan to stanford , there might be fifteen or twenti hop .
hop ar as much , defin by geographi where we're all try to optim the cost of these long distanc connect .
so the thing that realli character store and forward network wa that there wasn't a lot of share .
on messag wa be sent across on of these link at a time and all the other messag just kind of wait in time , in line .
now , that the , the , the innov that happen in the research network in the <num>'s through the <num>'s ultim unbodi in the arpanet wa the fact that thei were go to be packet network .
first , how do we share on link , so that a long messag doesn't clog it up ?
and how do we deal with outag more dynam ?
with the idea that , eventu , you could send a packet across the countri .
and back into a comput and back out in mayb a half of a second .
and that wa seen as someth to do rather than .
somewher between ten minut and a dai or two .
so how to do thi effici .
it wa a research project .
and it wa a research project that last almost <num> year , well , <num> year .
and , <num> or more year .
and , and it , on of the neatest thing about thi is thei were abl to throw it awai and rewrit it a bunch of time .
so that thei could put someth in product , see it flaw , see what wa good about it , and thei had the monei from darpa to throw it awai and rewrit it .
now by the late 1970s it had 100ish comput on it , here's a pictur , and these ar not the school , these ar the comput , these ar .
you know , list all of the comput that ar there .
and so the engin , the , the innov that thei spent <num> year perfect , wa the notion of packet switch .
so how can we simpli move data simultan across the connect ?
and the essenti brilliant idea is break the messag into packet .
and again to sort of review , here i have a messag and i have post card that onli can handl <num> charact .
and i'm go to send thi hello there have a nice dai messag to daphn in california .
and so i have <num> <num> charact post card .
i basic put a from address and a to address on each postcard and a sequenc number on each postcard , <num> , <num> and <num> , and i put ten charact on each and i stick them in my mailbox .
i just put them in .
put the sign up and then i wait .
now let's just sai you know , that the post offic person come and pick thi first on up and it goe to chicago from michigan than it goe to omaha then it goe to denver then the second on kind of fall on the floor and it end up go to charlott north carolina .
and then thei're like , why is thi here ?
and then thei send it to atlanta to get check .
and then thei make sure .
and , and thi on goe and .
and number <num> end up go to st .
loui .
and then tulsa .
and then colorado .
and thi on get rout back to charlott becaus thei weren't sure why thei sent it to them in the first place .
and then thei send it to memphi , tennesse and then thi on make it to california .
and thi other on sort of goe to phoenix and thi on final get to dalla , texa .
and thi other on goe final .
and the third on goe to tucson , arizona , then la vega nevada and final he make it .
so , these poor littl postcard i put in thei have each a differ journei .
right ?
it's a littl adventur for each of the postcard that thei go through .
and , so , we don't , i don't see how thi work on my end .
i put in three postcard .
i number them , on , two , three .
but on the far end , in california , daphn open her mailbox .
and ha scribbl all over her mailbox .
oh , the shame !
no , actual we'll get rid of the scribbl .
so daphn open up her mailbox , and she doesn't know how these packet got there , i mean , postcard , how thei got there , out come the first on .
she goe , oh look like i just got a messag from chuck , but i onli got part of it .
then out come the second on shortli thereaft .
then after a long period of time , final the third on come out , but it's actual the second on .
and now she understand that she's got the entir messag , and she reassembl it , and awai we go .
and so thi is the basic notion of how all those postcard can share the infrastructur .
all , thei can all be invit at the same time .
thei can take differ path .
you don't have to connect them all togeth like train , basic .
and , and thi led to a share network infrastructur .
and so the comput that were in a store and forward network , went from , sort of , big power comput with disk drive to realli tini comput with a singl purpos of forward packet .
rather than long term storag of messag .
and so , so the , the store in forward had , long term storag of messag , in the router .
so the , but , i mean , not in the router .
in long , in the store in forward , the old on , long term storag wa somewher in the network .
but thi is onli short term , right , short term storag , short term storag .
and so when a packet come out , it simpli ha to find it wai through a seri of hop .
it still hop and it's still connect , but basic it ha to find it wai across the internet .
and then we would take whole campus like univers of michigan , sai , or stanford for exampl .
and , then we'd have sort of variou kind of local network on those campus , and comput on the campus , and server and variou thing .
and thei would rout all their packet , all their data out to the internet , and then the packet would find their wai across the internet , and then we might have a home connect as well that might connect .
and so , the share , share network infrastructur focus onli on packet , not reliabl or anyth els .
so , thi notion of hop didn't go awai .
as a matter of fact , i don't know how mani hop it took to get from ann arbor to palo alto in us bitnet .
i'm go to guess it might have been <num> or <num> , in these dai it take <num> or <num> hop .
the differ is in the internet , the <num> or <num> hop happen in a hundredth of a second , or a tenth of a second .
so the ho , notion of hop , and the notion of intermedi comput is still present in the internet , and the tcpip network that we us todai .
and so your , your , your messag sort of leav you the host that you're in , hop to the first router , and then hop to howev mani router .
dot dot dot , thi is more of a dot dot dot thing .
and then final hop it wai out to the far host .
and so thi is sort of either your comput , mayb stanford's web server , and then there's thi seri of router in the middl that it hop through .
okai ?
and so , the problem of what data goe between here and here is you gotta solv a lot of problem , right ?
how to , all , all kind of problem , and so , in order to simplifi the solut or break the solut into simpler , more manag part .
thei came up with a layer network model .
now thi is a cartoon and comput peopl love draw cartoon and sai thi is our architectur .
thi is our frame work .
thi is our approach .
sometim thei're help .
sometim thei're not help .
sometim the cartoon is just kind of a cartoon .
but what's usual be commun in these kind of pictur is thei're take a big problem and break it down into some subset , some set of smaller problem .
so , the whole problem thei've gotta solv of get data reliabl reliabl across the whole countri is that big and if we can break into four piec .
and work separ and come up with wai to let these piec interact , work separ with each onem then mayb we'll have a better solut , okai ?
so take a problem that's so larg and so complex that we might not be abl to solv it and break it into four smaller problem give us a better chanc of solv the four problem .
now , there's a certain art to pick how you break the problem up .
and there's more than on network model .
the on that we us in the internet is the tcp ip or the internet protocol suit model , and we'll meet some of the peopl who design that .
there wa also a model call the <num> layer osi model , open system interconnect model .
so there's a model out there that ha <num> , <num> , <num> , <num> , <num> , <num> , <num> layer .
and thei all have name , and thei all have purpos , and thei all have definit .
thi wa not quit as po , thi wa not veri popular .
and i doubt that it's mani place .
becaus the tcpi model is the on that kind of won .
um , and so that's the on that we're go to studi .
but that doesn't mean that , that ha to be the onli on .
but it is the on that ha becom popular on the internet .
so , onc you break the problem down from a big problem into four small problem , you have to develop document about how these layer work togeth .
how variou comput work togeth .
how router work .
all these thing and so earli in the process of the develop of the arpanet thei creat an open process to build these specif .
where thei would vite , invit engin from all kind of compani and univers and who know what ani expertis to show up at a meet .
sever time a year .
i mention the ietf meet when i wa talk about the histori of the internet and tim berner lee boff , that onli <num> peopl show up to .
that's thi meet , the internet engin task forc , which is just a bunch of engin that get into room , mani room , and solv a bunch of problem .
and so the standard that come out of thi , you can go read them , thei're all open document .
thei're veri throwback document .
thei've got thi text thing that's dial thi like , beauti upper case , it remind me of back when printer didn't have a lower case .
and these ar document that describ how most compon of the internet work togeth .
so , the layer architectur that i just describ where you have a comput and then it send data out to back of it .
and then hop , hop , hop , hop , hop through router , and then the data arriv at the destin comput , and then it , the destin comput send it back it hop , hop , hop , hop , hop come back and it come to you .
we're go to expand on thi a littl bit .
so each of these host on the two end is go to expand to thi much right here .
so that's on host .
that's anoth host .
and each of these router is go to expand into thi .
so thi bottom pictur is just an expand version of thi upper pictur .
so that we can see how the internet layer work togeth .
so when you send a messag in on your comput , it's thi is all softwar , applic , transport , internet link .
so thi is all softwar , and then it all come out the littl plug on the back of your comput .
right .
so , mayb your comput ha a littl plug like thi on the back of it .
right ?
that's an ethernet plug and here's an ethernet wire and i plug my local area network in .
right ?
and so , thi right here is that right there .
that's kind of the plug .
it might be wifi which mean it's kind of like air but if you have a wire like thi , then it's a littl more tangibl , and there's someth on the other end of that wire .
thi is a veri short wire , but there would be a router on the other end of that wire .
the router take the data off the wire and then forward it just like a post offic , intermedi post offic would do , onto the next link .
on to the next on .
and thi would be multipl hop in here , thei're onli show <num> hop .
and final it's on the last link go to that comput at stanford .
and then it goe up through these <num> layer of softwar and then goe and doe whatev it's go to do .
now when thei send you the respons back it kind of goe the other wai .
and back up and back to you .
so if thi wa you in a web browser , you know and then here's me .
and here's a slide i've got , right .
thi web browser and you move your cursor in the web browser is send stuff back and forth to the server right here .
and that's what's happen , all right .
so if as you look at thi pictur over here , thi left colmn is the host you're come from .
the right column is the host you're go to , and the rider ar these thing in the middl , okai ?
okai .
so let's start look at all four layer .
we ar go to start at the bottom , at the link layer , then we're go to move up .
so if you recal when i talk about the , the , the basic reason why we even have a layer architectur at all , is to simplifi the problem .
to simplifi the problem .
so the idea of the link layer .
is , the link layer is a , it , it on , onli worri about get the data across on hump , right ?
onli worri about get the data from , across on piec of wire .
white like voltag goe on these littl wire , and .
how we send the stuff and if more than on comput's us the same wire , how do we share ?
it's a complex enough problem but , we don't worri about the whole world .
we worri about thi on link layer and so the link layer is sort of like the connect out of on comput and into anoth comput .
and , and thi might be fiber optic , might be , you know , <num> mile or it might be <num> feet for all we know .
but it's on link , okai ?
and then , a router pull it off that link and then forward it onto anoth link .
if you go to the post offic , you could think of the , the person who pick your mail up from your hous , with the thing on their shoulder , that's on link and thei put it in a truck which take it to a place that put it in a semi truck .
and then it put it to anoth place that put it on a train .
and the semi truck and the train and the postman or postwoman ar these littl link layer .
each person or semi truck is not take it all the wai , thei're just get a littl farther .
so that's the link layer so the link layer doesn't worri about the rest of thi stuff .
it realli , the stuff that is defin on thi wire , it doesn't even care if there's a world wide web or anyth .
it job is to get data across on foot .
that's what it job is .
is it up , is it down , how do we share ?
it doesn't care .
it's got a veri narrow view .
so .
what it mean is we can zoom in on thi problem , right .
we can zoom in and focu and ignor everyth els .
so the link layer basic ask question like , you know , i've got some data insid the comput and i want to send it out .
how do i encapsul it ?
what if thi is share ?
how do i deal with that ?
and common link technolog that we see ar like ethernet or wifi or cabl modem , dsl , satellit or optic .
these ar all link layer of on form or anoth .
so if you're go back to thi ethernet link layer , which is on of our favorit caus it's kind of ubiquit .
other than wireless it is probabl ethernet is the most ubiquit link layer .
so , when the manufactur build an ethernet or a wireless adapt , thei actual build into it , which is probabl right here .
no , it could be right here , thei build into it a serial number .
so , thei , thei mark thi as have a serial number .
and you can actual whether you're on window or mac , you can work your wai down to find the serial number for your actual manufactur piec of equip .
so there's mine on the mac .
that's an exampl on on the mac .
and that's an exampl on on the pc .
thei tend to be six two digit number concaton togeth often with colon or in thi case with window it show dash .
and so thi is a raspberri pie and all the raspberri pi ar go to actual have similar prefix and then serial number within that prefix .
and so the raspberri pi get manufactur , thei come out of the manufactur line with thi sequenc number just kind of go chug chug chug , up up up up up .
and , then thei get ship to all corner of the world .
and so , these number ar not the number for thi to get across the world , all the number , all these serial number at the link layer ar good for ar to get across on connect , in case that connect is share .
and if you were to plug thi into a hub , and you're plug other comput into that same hub .
well then you're share that connect .
and thi comput might see the traffic for that other comput .
and so we us the physic address so that thi comput know which of the packet belong to it on the piec of wire .
so , wire ethernet or wifi certainli if you're sit in a room with a bunch of wifi comput .
you're share the air .
so let's come up with rule how to share thi , how to share nice and how to behav .
so the wai it work , ccc , is you could . . . the ethernet could easili have a bunch of comput hook to it right .
caus it realli share , and so thei're all sit here , thei're all talk simultan .
no .
but , we have a com , we have a pair of comput that want to talk .
so , it's not just on .
it's got a bunch of folk sit here .
just draw a bunch of em .
bunch of folk .
thei're all talk or all potenti talk and we gotta figur out how in the share medium .
like thi is , think of thi as a hub and thei're all connect into thi hub includ the two we want to talk .
thei're all connect in the hub , includ the two that we want to talk .
and how can these two make sure that the data goe , is , is the data that's sent with the intent of go to thi comput , thi router .
how can it make sure that it get there ?
well , if it know the address of the send and receiv unit it just encod that , in the packet .
and that wai , it sort of goe by all these folk .
let me chang color here .
the packet we send goe by all these folk , and even if thei all heard everi on of the packet , thei all know that it doesn't belong to them becaus thei all have a differ number and thi is the onli on that respond to it .
so that allow them to share the wireless or the wire , and , share the wireless to the wire and have it all work out for them .
so , so that's the idea , the link layer .
now , again , rememb thi might onli be fifti feet , or fifti yard , or fifti meter .
and thei can be meter .
it's onli <num> meter , but you still have to share the network in that <num> meter .
and then your router take it off of that and forward it on a differ link .
and that's how we get across the countri .
but that's the next layer up , and let's not worri about that for now .
so , the idea is think about on link , whether it's fiber optic or cabl , or wireless , or wifi .
and so what ar the kind of problem that you have to solv on thi link layer ?
well , so on of the thing that's cool about mani link layer is , like wireless and ethernet , is thei can be share , and it make it real easi just plug new comput in .
so you just sort of like , here's a hub , and you just plug anoth comput in , and it's on the network .
but thei have to come up with a wai to avoid the chao when thei're share .
and so , the wai ethernet doe thi is with a techniqu call , carrier sens media access with collis detect .
and as you'll see , a lot of thing we do on the internet have a lot to do with courtesi .
mean that we're just nice .
and if everybodi's nice , it all work out .
kind of like drive in a car .
just everyon can't run through the stop sign at the same time .
some of you gotta stop , got a green light , your turn , my turn , whatev .
thi probabl wouldn't work so well with car , becaus sometim you do have a collis of packet .
you just have to wait .
packet collis don't crush your car .
thei just slow your data down .
so , here we go .
thi is basic carrier sens media access with collis detect .
the first thing you do if you want to send some data , sai we got some data insid our littl comput and we want to send it out , know that there might be other data go by the first thing we do is listen .
we listen to what's on there .
if it's not silent we just wait until it goe silent and then we start send .
so if someon's alreadi us it , why crash into their data and crush their data ?
becaus there's , it's share , there's onli on .
you can't both be send at the same time .
so first you listen .
onc it's silent you begin transmit data .
and then what you do is you also listen to your own data and if your own data is come back , then it's sound pretti good .
and and then if , if you .
if there is a collis , becaus there's a chanc that two comput will want to send at the same time and thei'll collid .
then what thei have to do is back off . .
and thei have a sophist random number calcul , so that thei back off not alwai the same amount .
each comput back off a differ amount , and thei make it so that it's fair .
so that on comput's not alwai back the most off .
so it's veri fair .
so it's , when you detect a collis , you retransmit after a random backup .
first , you avoid collis .
but in the , in the rare case that you have a collis , then you do thi .
and so , i want to introduc you to the person who invent ethernet , ethernet .
hmm , thi is robert melcalf and he wa work at xerox , palo alto research center , parc , everyon call it parc .
and thei had , thei were build what is most consid the first comput , the alto comput .
thei were connect line printer , or , fast printer to these .
pate , xerox wa build the first , laser printer .
and thei need someth faster .
and so thei just start build , and thei built thi thing call ethernet .
now it's a littl differ than the ethernet that we see , the first ethernet that thei built is a littl differ , you can see a pictur of it down here .
if you ever go to xerox park and get in , you'll go see thi littl museum thei have .
it us a singl piec of cabl that ran along , thei just ran it down the hallwai , and thei would connect a tap in and then thei would us that to send the data .
so it would go down the hallwai and a tap come out at each offic , and thei were truli share the media .
thi comment is not share , except when you plug it into a hub .
that's what make the share .
it wa inspir by an earlier wireless network where thei were do not collis detect , but retransmiss call aloha , and a lot of earli network , packet network inspir come from the alohanet in uni , come from univers of hawaii .
and becaus thei didn't have anyth except wireless , but thei did have wireless , thei did a lot of realli cool earli research on wireless .
and so let's go ahead and meet bob metcalf the inventor , on of the inventor of ethernet .
.
i wa extraordinarili lucki and happen to be at the xerox research , xerox palo alto research center when a , a problem evolv that had never befor occur , the problem had never occur .
and that wa the problem of have a build full of person comput .
and i wa the network gui , so thei turn to me and said , network these puppi .
and we bad just finish start the internet .
it wa the call the arpanet , which wa packet switch .
and it wa pretti clear we want thi network to connect to the , it wasn't yet call the internet , thing .
so , it would be packet switch , we were pretti sure .
at the same time , we were build , arguabl , i don't want to get into that argument .
the first laser printer , which in our case , the first on , whose name wa ear .
that's a whole other stori .
it wa a page per second , <num> dot per inch , and if you do the math , that's about <num> megabit per second .
so the exist method of interconnect had a lot of problem .
on is that thei were all home run , so all these wire , on from everi desk , ar all come to thi on place in the build and put a big rat's nest .
we call it a rat's nest by the wai .
two is thei gener ran at <num> bit per second or .
if you realli rate them up , thei go to <num> <num> kilobit per second , and that wasn't even close to <num> megabit per second .
and we want to be abl to keep the printer busi by send document from all these pc which hadn't been built yet .
except at park .
well , thei hadn't been built even at park at that point .
okai .
so we were build the printer .
we were build the pc all at the same time .
so , i start work on thi , and there wa a preced effort befor mine call signet at park .
and it wa be done by charl simoni , my friend , and but he wasn't a network gui , so thei sent me in to pick up signet from charl .
and he wa go to go off and do someth els .
and by the wai the other thing he did , is he wrote a word a text editor , a word processor , call bravo , which then becam microsoft offic .
so , charl is a billionari and he ha been to the space station .
twice , the intern spa .
so mayb i shouldn't have kick him off signet , mayb i should have done bravo .
i don't know .
anywai , so i , immedi decid that signet , by the wai , signet stand for simonyi's infinit gloriou network wa in fact infinit gloriou and much had too mani move part to be a lan .
by the wai , the word lan wasn't invent until <num> , and thi is still <num> , so the word lan wa still wai in the futur , so that's an anachron .
anywai , the signet had too mani move part for a lan .
and it wa in the cours of investig how to organ thi lan that i ran into a packet , quit by accid , a packet radio network at the univers of hawaii that wa call the aloha net .
and what wa beauti about the aloha network wa it had a solv a distribut problem .
that is , how would we share a radio channel back to the mainfram in , in hawaii , at the univers ?
if we're just a bunch of termin scatter among the hawaiian island and thei couldn't realli easili talk to each other to get coordin ?
how would thei coordin their share of thi inbound radio channel ?
and norm abramson , there at the univers of hawaii devis thi veri simpl random retransmiss procedur , where a person would type .
by the wai what thei would type wa a card imag .
it wa <num> column wide , back from the dai of card batch process .
so , you would type in your card imag and hit send .
and then your termin would send it in toward the main frame , and then would wait a short time to see if there wa an acknowledg that return on the outbound channel .
and if there wa , everyth wa hunki dori , but if there wasn't , that probabl meant that two termin decid to send at the same time .
so , then as mani termin particp in that collis of transmiss would then randimo and then re transimit at a random time in the futur .
that wai if thei overlap here thei would not overlap again in the futur becaus thye would choos differ random number to count down .
so that's randomizori transmiss , multipl access .
sinc i wa try to avoid thi big rat's nest of wire and onli want to have on wire , just on wire and not <num> or <num> or whatev the altern were , just on .
i want a distribut solut to how to share thi cabl , and the aloha network produc that us random retransmiss .
so then , i , actual y'know , there's sort of two stori here .
on is a hardwar stori .
i wa wonderin' about the hardwar .
there's a hardwar stori , and there's a softwar stori .
and the hardwar stori is , not that interest but it's there .
so on of the first thing i did wa to bui , a kilomet of cabl , or it mai have been a mile i don't know if i'd gone metric yet , but i .
so a spool of coax cabl about thi big , with the two end stick up .
so i got a , puls gener and i hook it up to on end and hook it around back into the oscilloscop , and start launch squar wave down the cabl and watch what came out .
i thought that would be good prepar for build a network .
and what came out the other side wasn't a squar wave .
it wa sort of lazi rise time and lazi fall time .
but if you put a digit gate , you could recov the squar wave .
that is just set , us the digit threshold , so out of thi gate came a squar wave .
so you could recov , at the end of a mile of cabl thi squar wave .
so i kind of knew .
i kind of had some confid then that we , that variou station connect to thi cabl could inject their squar wave and , the other gui could recov them .
so that hardwar wasn't that hard that did it wa , a , straightforward .
thi wa the first hardwar .
wa it kind of rel straightforward ?
veri straightforward .
and the and the squar ware , by the wai wa call manchest .
what we'd do is we'd take the bit , we'd make a packet of bit , and then we'd send them on at a time down thi cabl , and we would encod them .
and the encod wa also simpl , it wa manchest code .
mean that for each bit the first half of the bit would be the complement of the bit .
and the second half of the bit would be the bit .
so you would have a transit in the middl of each bit cell , which is a veri simpl modul scheme .
so as you're send the packet the cabl wiggl and you can recov the signal at the other end then .
clock those bit into a shift regist , and then click the sh , clock the shift regist into the memori , and then collect a packet that wai .
and that all took just some solder to make that all happen basic .
well i don't wanna it got a littl bit complic when you want to put <num> of them on a mile of cabl .
you had to be a littl bit care about the imped on the tap .
okai .
becaus the squar wave by a tap might gener reflect that would then interfer .
but the beauti of manchest encod wa that while you were send a packet , there were constant transit .
so if you listen , you could tell whether a packet wa go by and you didn't have to listen for long .
you onli had to listen for about a bit time , which turn out to be <num> nanosecond .
so you could wait that long , and tell whether there wa a packet go by .
so on of the first differ between the ethernet , and the aloha net , we got a lot of differ , but on of the first on wa carrier sens .
in the aloha network .
you couldn't tell if somebodi els wa transmit at the same time as you , but on the ethernet , you could .
and the advantag of that wa , you might as well , if you're send and somebodi els is send at the same timey might as well give up , becaus you've destroi each other's packet , so punt .
then that recov that bandwidth that otherwis would be lost just continu to transmit a damag packet .
and the the other wa thi , thi manchest code meant that the cabl wa on half the time and of half the time .
that is the , the driver , so the open , what we us to call an open collector driver would either yank the cabl up to three , four , five volt .
i even forget the voltag now .
but it wa under five , i'm sure of that .
i had a rule .
i never went abov five volt .
you would yank the cabl up .
and then dure the other half of the bit when you weren't yank you let go .
so , so for exampl in each bit cell you got to look to see if anyon els wa transmit when you had stop .
and if there wa somebodi els , then you had a collis .
so that wa the second featur .
so it wa realli a digit signal .
it wa realli a digit signal , it wasn't a modul signal in ani wai .
right ?
no , well it wa , at best you could send addit signal over on off , with the manchest encod .
so manchest encod is akin to a modul scheme .
but it's the simplest on you can think of .
it's veri base bane .
yeah , it's veri base bane .
but it's the sort of modul scheme that a comput scientist would come up with as appos to on of those fanci radio peopl .
radio peopl .
right .
so , and , and by the wai , took a lot of ga from those radio peopl .
why do you us such a simpl scheme ?
right .
you're wast .
.
you would have wast all that , you wast all that bandwidth .
that capabl , that cabl wa capabl of carri hundr of megabit per second and you onli carri <num> <num> .
what a wast of the cabl .
exactli g .
well , the there wa plenti of cabl to wast .
so we talk about carrier sens inclus detect , and the scheme would be that each packet would carri two address .
the address of the destin and the address of the sourc .
and each of these would be <num> bit .
and so on the backplan of these littl person comput with wire app you would wire app in a code between zero and <num> and that would be the serial number of the machin .
and that , and then you'd read that off the back plane and put it in the pack .
so each packet had two address .
thi is differ from the aloha incid which had on address .
becaus the channel wa onli go .
through two channel .
so two address , and we ad a cyclic redund checksum on the end of the packet , which we implement in hardwar .
so , that you in addit so you could tell if the packet had been damag .
so if there wa a collis and the termin , the contend station back off .
there would be a hunk of garbag on the cabl sit around .
but when it wa receiv , the check sum wouldn't add up and you'd just throw that chunk of garbag awai .
the dai that i wa launch puls down thi spool of cabl , i wa do some sodder , and i wa do some knife work to get the insul off the copper .
and across the room wa a young grad student , who wa do someth els and he notic me not be good at thi .
and it turn out , he wa veri good at it , becaus he had work in a televis studio and he had work in cabl televis .
so he knew all about skin wire and coax .
so he came over to help me , and that wa da , hi name wa david bogg .
and then we start work togeth , and invent ethernet togeth .
so , he wa , and he wa , he wa , slightli more hardwar , and i wa slight more softwar .
but there wa then a third gui .
who wa even more hardwar than david .
who wa the picofarad gui .
the gui who would put those last few passiv compon on the end just to be sure , that , that connect to the coaxial cabl would be clean for transmiss .
everi time you tap into it you didn't put a lump of imped on it .
yeah , the tap seem like a counter intuit thing to me .
i mean , think the , i mean everyon would think that a star is the right thing , but you were go to tap into that .
just tap into .
on of the problem we decid to solv wa the rat's nest problem .
we did not want a rat nest , and everi time we instal a new pc we didn't have to home run a cabl back to the rat nest .
so we want to put on cabl down the middl of the corridor and then everi time you want to put a pc you just run up and tap into it .
and we didn't want the network to go on , go down while you were tap into it , becaus we want <num> by seven access to the network .
so there had to be a wai to tap into the network without bring it down .
so that led to a devic we found in the cabl tv industri .
it wa call gerald tap , and it wa basic a , a vampir tap .
you'd , you'd drill a littl hole in the outer , case of the coax , and then you would screw in thi tap that would punctur the insul and go right to the copper and tap in .
and you notic in that oper you're not break the copper , so the network continu send , you tap in , and you're now part of the network .
so that came from the cabl industri .
it did .
oh , okai .
so a gui name david ladel , who had done cabl tv instal when he wa in grad school in toledo .
suggest that we us the gerald tap sinc it wa alreadi be made in volum and work just fine , as far as he wa concern .
and it allow us to solv the rat's nest , what we perceiv to be an import problem , the rat's nest problem .
the aloha network ran in the kilobit per second rang , like <num> or i don't rememb the number , but kilobit per second .
the ethernet then start at <num> . <num> megabit .
and in those dai , by the wai , t1 wa <num> . <num> megabyt per second .
so in <num> , the ethernet wa alreadi as fast as t1 .
of cours t1 is still around , oddli .
but then we went from <num> . <num> , we briefli went to <num> megabyt per second insid of xerox .
and then when we bump into dec and intel for the standard process in <num> , we decid on ten .
we came down from <num> to ten so the chip would work .
and then we went from ten , and later , i help found a compani call grand junction network , that introduc the <num> mg ethernet .
and i rememb be at my coffe tabl in palo alto , i think it wa .
i forget the year .
no , mayb it wa in woodsid .
but we were try to think of how we would make a fast ethernet , and there's some math that show that if , as you go faster .
the effici depend on the diamet of the network , and as you go faster and faster , the effici goe down .
the diamet of the network in bit .
and when you're try to up a factor of ten , and it i don't know who it wa , on of us observ , that wait a minut , we've been assum that ethernet is a kilomet in diamet .
but we're go , we're all go to hub now so that we onli need <num> meter , not <num> meter .
and that wa the factor of ten right there , so that by chang the collis interv .
you maintain the same effici , theoret effici by just assum you're go <num> meter instead of a kilomet .
so that got us to <num> megabit per second and not gigabit , ten gigabit which i guess is the mainstream now , and then <num> gigabit is now begin to run .
<num> gigabit per second .
you can't , you can't be a comput scientist and build that kind of digit now .
you have to actual be an engin , a hardwar engin to run at a <num> .
i think at that point , you're pretti much a radio person .
but then after <num> gigabit come terrabit , so i've alreadi begun give talk on terrabit ethernet .
welcom , back .
so , i hope you enjoi that .
now , i want to make it real clear that , when i give you a <num> minut video of an amaz inventor and comput scientist , you don't have to rememb everi word that that person sai .
okai ?
it's more import to get the gist of it .
i try to cover the thing i realli want you to know in my slide .
you might want to listen to it more than onc , or listen to my slide and then go back , but you're not , i , i don't want you to memor it , i , i want to give you smart peopl , i want you to hear from the smart peopl who did all thi cool work , in their own word .
but when we hear from their own word , thei're sometim pretti technic , so just relax and enjoi listen to these peopl and understand that you're not go to get everyth .
but hopefulli you'll come back and you'll get more and more later .
so the idea wa that he realli start with thi idea of wireless which wa , we're go to share on medium , and the wireless and the wire , the ethernet wire that he built , the coaxial cabl that he built , wa like a giant radio , except it ran in the ceil .
and , so , the design end up realli simpl and that's been good for ethernet over the year , and later wifi is a , a variat of ethernet .
and so it turn out to be sometim it's best to build someth simpl but that just make it go realli fast and make it realli cheap .
he also form the compani <num> con which wa on of the first manufactur of pc card .
and so back in the dai you would go bui a pc and you would go bui a 3com card and you'd plug it into the back of your comput .
and so , there wa a time when san francisco stadium candlestick park wa name 3com stadium and our friend bob metcalf wa involv in all of that .
so , he's done mani thing throughout hi life , and we're honor to have met him .
so , we start with thi four layer architectur , that sai we're go to break down a big problem of cooper applic across variou kind of network .
we're go to break it down , and we just got them talk about the link layer .
it's liter , <num> , <num> , mayb <num> , <num> engin have spent the last <num> year figur out how to make thi work , becaus the layer architectur let them think , although it wa inform , thei had <num> , <num> , <num> , <num> , i don't know , <num> , <num> engin that think about that problem , and the , thei ignor the rest of the problem .
'kai thei ignor the rest of the problem .
that's great , becaus thei've gotten realli good at thi on problem .
now , we're go to go like , you know , i don't know how mani engin .
let's just make it up , 5k engin think about thi next problem .
the next problem is call , oh my color got chang , the internetwork layer .
it is the notion of forward each of the post card with a from and a to address , forward enough time to get them all the wai across the network .
that's the next problem we're go to solv , we're go to stop think about the link layer , we're just go to assum it work , it's just magic .
that's what a layer architectur give you .
you don't worri about the stuff abov you .
you don't worri about the stuff below you .
you focu like crazi on the stuff that you're focus on .
so , the link layer onli work on on link , right ?
it , it worri about on link , and there might be <num> or so of these link .
but the internet layer worri about all the link , and the proper sequenc of link to follow to get from to stanford .
that's a kind of complex problem .
we're not even go to worri about reliabl .
we ar just go to worri about if i had a pack , if i had a postcard with a from and a to address , a packet , can i get it there ?
how will i forward it ?
i assum the link layer is perfect so the internet layer is the first end to end , becaus if you recal thi vertic box , thi set of box is the host start comput , and thi vertic set of box is the destin comput .
so in thi littl raspberri pie , all four of these thing , applic , transport , ip , and the link is all part of thi on gadget , okai ?
so ip is best effort and it's okai to drop data if thing go bad .
and that's on of it's charm , most charm featur .
but what it had to introduc , in addit to the ethernet address or the media access layer or mac address , is an address of the destin .
now , if you rememb , the mac address , the address for the link layer , come from the manufactur .
the moment thi equip is manufactur , it is burn in a serial number .
but these move all around the world .
if thi run here at the univers of michigan , it need on address to connect to the network .
on ip address , if it run at stanford , it need a differ ip address .
so we have to be abl to chang these , so thei're assign differ .
so it's the worldwid number that is your like postcard address .
it's like a phone number , right , so wherev i'm at , you call my phone , and thi gadget ring , so it address well that's actual kind of a bad exampl caus i us a sync on it .
okai .
ignor that .
phone us magic , thei us crazi magic .
so , and comput thei're not as cool as phone .
you have to chang the address everywher you go .
we'll talk about how you chang the address everywher you go .
the ip address ar base on where the station is connect .
thei do get reorgan onc in a great while but not veri often .
and you can even go to variou websit on the internet and sai ip address look up is the most common search and it will tell you someth about where your come from .
right ?
you know , kind of be sometim realli weird , becaus you might be at starbuck , and it might send it all to st .
loui , and it might sai , oh you're come from st .
loui , even if you're not .
so you can look it up , and you can look up other address as well .
you can sai oh , here's an ip address , i'm go to look thi on up .
first it start by look your , but you can put in differ address , like in thi particular on if i put a differ address in here , it will actual go look that address up .
so the ip address format , it's four number that ar separ by dot .
each of the number can be between <num> and <num> , <num> and <num> and it suggest a represent of a <num> bit number , back in the dai , it kept the number small becaus it didn't want to us all the comput memori .
and so , thi is an exampl of an ip address .
four number between zero and <num> , separ by dot , okai ?
now the concept , the address is broken into two part .
there is the network number part which is the prefix , and then there is the comput number within network , 'kai ?
and it's kind of like phone number were befor cellphon where the area code wa where the phone wa , and then thi wa within that area code , where to find it .
and even in the older dai , these were actual geograph too , right , so these number would be neighborhood or whatev .
these dai , it's all electron , so the precis map of a phone number to a geographi is less precis .
and that's why you get a cell phone number and you move to a whole new state , you keep your old phone cell phone number becaus it's becom electron .
but in the earli dai , when it wa actual relai and switch make the phone number work , thei actual had to do with where .
it's actual kind of fascin how phone work .
i ought to , i ought to teach a class on like how phone switch work in the 1800s .
actual quit fascin , becaus thei were surprisingli simpl .
that's the interest part is how simpl turn of the centuri , well turn of last centuri , phone number were .
so , let get back to ip address .
there's four number .
some part of those four number is a prefix .
we call that the network number .
and when the packet is in the middl of the network , it doesn't realli look at these number , it onli look at the prefix , so it kind of think of all the packet go to a piec of the univers of michigan as <num> . <num> . . , and then we , we assign these number within michigan , and then thi number is assign to us by the internet author that assign number .
so we sai hei , we need some more and thei give us a prefix .
then within that prefix we get to set up all the other thing .
so .
thi network number which is the prefix of the ip address is the wai that a packet is rout through the internet as it progress through the internet .
and so it's sort of like if i start with , if i start with my comput here in u of m , and that's my number , that's my actual number .
and here's a stanford comput , and that's it number , all right ?
and i send a packet and i sai , okai , i'm go to send it from <num> <num> <num> <num> <num> <num> <num> yada yada .
as soon as the packet enter the network , it doesn't throw the data awai , but it stop think about it .
it onli look at the prefix and so it's simplifi , greatli simplifi what the router have to do as it go across the hop on the internet .
it's greatli simplifi becaus it onli look at the first part .
it doesn't have to look at the whole thing .
and then thi start make decis as to how to get there .
so it sai okai , i'll hop it over here , again it's like in kansa citi and sai , what am i go to do here and i'll pick on of those two link and i'll go over here and then , as it exit the network , it dump it somehow onto stanford's campu .
and then , it find it wai .
oh , it didn't find it to thi on ; , it found it wai to that on .
there you go .
unpredict comput .
now it , so within the stanford campu , these number mean someth and the stanford campu us those number to get the thing to the actual real comput .
and so it sort of us thi prefix .
you know , it ha a real number , but then it us the prefix in the middl and then the real number reappear at the end .
so that's call a network number .
and it greatli simplifi .
it's complex enough to be in the middl and have tot worri about all these thing come from kansa citi and beij and , like , where do these thing go to have to look at each on and know where everi comput is is crazi .
so that's why thei call it the internetwork protocol , becaus it sai there's on network , there's anoth network , and the onli thing i care about is the network number , and i am the internetwork protocol .
i p , in a network protocol .
i'm just get these thing from on network to anoth network , and then it's up to that network to figur out how to get the darn thing to the right comput within it , and it's up to stanford to figur out how to get it to the right comput at stanford .
so these thing ar call the network number , it's the prefix of the ip address .
now the kei thing that it realli a beauti , beauti design .
becaus the , becaus the center of the network is both exceedingli complex in on wai .
that it's so big and so fast .
but exceedingli simpl in the other .
it just ha to move the data from point a to point b .
if you think about it , it's even simpler .
if we look at it from the perspect of thi router , the router here i've got circl .
right ?
it just receiv a packet , it look at the network number , and it actual doesn't even care , to some degre , where it realli belong .
it onli ha on of two choic .
it's go to go thi wai , it's go to go that wai , right ?
which on's better ?
and it turn out , if you look at it , either on will work .
it turn out thi on is better but if i went thi wai , it would just take an extra tenth of a second or someth .
right ?
so it turn out that decis that ar made don't even have to be perfect .
you can make the wrong decis , and the network automat correct .
that's part of the goal of the network .
and so it realli simplifi and limit the need for each router to understand the entir network , which make these router , i draw 'em small on these diagram on purpos .
becaus we think of them as small and fast , and onli solv a realli tini problem but do it realli super awesom .
so router maintain what we call router tabl .
and thei maintain a list of network number and the best outbound rout for each of the network number .
now , the other thing that thei do is thei pass rout back and forth .
and thi is how thei adapt to error , right ?
thei get updat dynam .
thei ask each other for the best place .
if thei see a network number thei haven't seen befor , thei ask their neighbor , then their neighbor' neighbor , and thei go , oh , god , ok ; i got a good wai to get to <num> and so there's all kind of commun , but it's rel slow and it doesn't have to be perfect .
and so it's router tabl ar what router have but thei're index by the network number of the packet , not the host of the destin .
so that's an amaz , amaz improv in the perform and effici of the internet core , the ip core .
so it's realli quit simpl , right ?
you basic have a local area network on your campu .
thi might actual be your hous too .
hous is kind of like a campu .
and you can do all the crazi thing you want hundr of comput thousand of hundr of server and thousand of laptop .
and you get on address that is the address of your campu .
it's the network number of your campu to the rest of the world .
and then all over the world peopl can send to you and by simpli look at the prefix .
data make it to you .
keep thi realli simpl and realli fast , ok ?
so it's beauti .
that's with a network number , on area code , on network number .
it's the onli thing ha to be kept track of .
a whole campu can be character within the quarter of the network as basic a singl network number .
now , the realiti is , it's usual a few of these .
becaus thei give them to you in smaller chunk , so you end up with you know , <num> or <num> of these thing for your campu if you're a medium to larg campu .
okai .
so now i want to talk a littl bit about the problem of comput that move around .
so you have a laptop , and you us it at your local coffe shop , and then you close the lid and you go home and open it and it work home , and then you close the lid and you go to school and you open it , and talk to wireless at school and it work .
it's like , hei dr .
chuck you just told me that i have to have thi address and i can't talk on the internet if don't have the right address .
and the packet ar rout base on the prefix of thi address .
why is it that i can be in three place coffe shop , home , and school and it seem like everyth work ?
well , that's becaus while your comput ha an ethernet address that's bake into the factori .
most comput ar configur when thei first open up and connect to a wifi to ask instead of have an ip address configur in your comput .
thei send a request out to sai , hei i'm new here .
is there anyon who will give me an ip address that i might us for thi particular locat ?
and , if there is an access point , sai , at your starbuck , it sai sure , us thi on .
you're at starbuck , that's a good number for starbuck .
now , it turn out that the prefix of thi is exactli the prefix that the , the world see all thi traffic to starbuck , so there's actual kind of a real address , okai , and it give you an address .
okai , so you ask , when your thing come up , it ask , what can i get , and then it's told what address to us .
so us on address while you're at starbuck , a differ address at home , and a differ address yet again at school .
so that's call the dynam host configur protocol .
now it turn out , with school and home and , there's just too mani comput give everi comput a real address .
and so we have these special address , thei're call the non routabl address .
so you'll probabl notic if you go to on person's hous , you will have a ip address of <num> dot <num> dot someth dot someth .
go to a differ person's hous it'll also be <num> . <num> .
someth dot someth .
and you go to your hous and it's <num> . <num> .
someth dot someth .
and you're like , how can that work ?
i seem to have the same address .
well , that's becaus of a technolog call network address translat , where each of the home router actual ha a uniqu and distinct address , but you're not see it .
it's give you a temporari address , an address that realli can't run at all on the internet . it onli live within the hous , but then as your packet leav the hous or leav the starbuck , the real address is put in , and then when it come back the real address is taken out and your local address is put in .
so thei're call non routabl address becaus if thei ever escap into the real internet , thei'd be like , oh those ar for your hous , thei're onli for , thei're not suppos to go veri far and i don't even know where thei go .
thei go nowher in the core of the internet but thei go properli insid your hous .
so the wai thi end up work is if you ar at your coffe shop , the coffe shop ha an address .
you associ with their base access point .
it give you a non routabl address to us local , and then as your traffic get sent .
thi address is chang to the address , that address .
you never see thi happen .
it's done as the packet goe through the base station .
and then when the packet come back , it come back with thi address .
but then as it goe to the base station it switch back to thi address .
so even though thi address is not the real address the network see , thei see you have thi address here .
so if you would do an ip lookup from a coffe shop , the coffe shop will be identifi .
you'll see the ip address here , and if you look at your laptop , your laptop would not have that same address , becaus it's be translat in the access point .
so then , you go home , and at home , your access point ha a differ address , but your comput ask your as , ask , address , ask your access point foreign address , and it get a local address that's gener local .
and again , there is a map .
it's call nat , nat .
oh i'll chang the color .
nat , network address translat .
so as the packet goe through , it take out the on address and put in the second .
dave come back .
he take the address out and put the local on in .
and the same thing happen at school .
all right , so , you're at school final and you get a differ address .
thei're not the same , but you look and the prefix ar the same .
it's like thei should be the same , but thei're complet differ becaus your school ha a differ address and there's a translat that goe back and forth as the data goe round and round .
so just for the distanc of the local wi fi , or whatev , us these <num> . <num> number , and then thei're translat to the real number by your network access point .
so these ar illeg insid thi network , so if it ever saw a <num> . <num> it would just throw that packet awai .
thei're onli for veri local connect .
so with that , i'm wonder if by now , you know why thi is funni .
i'll give you a minut .
ok .
so the reason thi is funni is she trace the killer's ip address and it had a prefix of <num> . <num> which mean that killer had to be within a short radiu us like the same wifi access point which mean it wa close .
veri scari .
hope you think it's funni .
'cours , xkcd is never exactli funni , but it hopefulli make you smile a littl bit .
so up till now , i've been talk about .
so , up to now , i've been talk about thi cloud network that's magic .
and the packet take differ rout and we don't know , but thei show up .
rememb the mail box , like , thei just show up or don't show up , right ?
so , it turn out .
that sometim , we as engin , want to take a look at what's go on insid the internet .
and it turn out that there wa a featur thei ad earli on to help diagnos problem in the internet that we still us todai .
and it's so conveni that it's built right into your oper system .
y'know , in macintosh or linux , tracerout is built in , and if you have window , you've got to instal tracerout .
so just sai window and instal tracerout , and you'll find someth .
but there wa a problem .
so if you recal , i said that each router see the world veri narrowli , and simpli see a packet and make a decis , on of on place .
so let's sai that here come a packet on the wai to stanford , and these router ar sort of strang configur .
thi router think it should go there , thi router think it should go there , and thi router think it shoud go there .
well it come in .
it goe like , oh , well i know where that on goe , there .
so if you end up with thi misconfigur router situat , you end up with your data go round and round in circl .
it would actual , like , crush the network becaus it's like a whirlpool .
you can't even notic that it's happen , becaus there might acut be , you know , ten .
you know there might be a bunch of them , and then it come back and you send it around again .
so you're fill up all your bandwidth .
it's never go to get there , unless someth chang , unless someth crash .
it's not go to chang becaus these router think that's the best thing to do .
thei're mistaken .
but thei ar , thei can be mistaken becaus thei're , thei're oper with imperfect inform .
so how would you solv thi problem ?
the router ar imperfect but thei solv the problem with a thing call time to live field .
so much like the network entranc translat tweak the address on the wai in and the wai out , time to live is a field that router chang .
everi time a packet goe through a router it subtract on from thi field .
and it start with a number between <num> , it can be as high as <num> but it usual like <num> .
and what happen is , is everi time the packet goe through a router , the number goe down by on .
so , if it wa , it would be come in here as <num> and it will go through here <num> , and <num> .
it will come back it will be <num> and what would happen is eventu .
we get to on of these gui and it hit <num> and thei would decid okai , you've been run around to long we will throw you awai .
so the number goe down , and it alwai goe down but then when it hit <num> thei throw the packet awai .
thei sai you have been through <num> hop .
chanc ar good you're never go to get to your destin .
so the tracerout command sort of cheat .
normal packet ar sent with a ttl , or time to live , of like <num> , <num> hop or <num> hop .
but what tracerout doe is send broken packet it turn out that when a router throw awai your packet most of the time it is courteou , and it send back a notif and sai hi i got your packet , i decrement it , subtract on and it got to zero and i threw it awai .
sorri about that .
here's here's who i am .
i mean i realli feel bad about throw your packet awai .
mayb you want to figur someth els out .
i don't know .
someth must be mess up .
it can't be my fault , but i threw it awai .
so what it doe is , it first send a packet with a time to live of on .
so the first router goe like hello , thi ha been around a long time .
set to zero , throw it awai .
then send a note back then tracerout send a packet of two across .
it goe hop , hop , and then it get thrown awai , and a littl note come back .
so you can kind of build a map by send enough packet and get kind of a return reject from on of the router .
it would have got there .
so if , for exampl , i do a tracerout from the univers of michigan to stanford , you'd , if i did it now , it'd be a differ set of thing .
i get thi output , and if i take a look at thi , thi is the hop .
so there's the first on , two , three , four through <num> , <num> hop .
so it take <num> hop .
now interestingli , again i don't rememb what the hop count wa in the store in former dai but is quit a few .
and that's becaus it's optim geographi .
and so you can see the first hop is on my campu .
then the second and third hop ar bounc around my campu some more .
now we don't quit know where thi on is .
but now it's on an , on a nation network call internet <num> , internet <num> , internet <num> .
thi is probabl go across the countri .
and then it end up on scenic , which i think is sort of california's network , it bounc through california's network a coupl of time .
let's see hprlax , that's lo angel .
and thi is , i don't know where that is .
lo angel , that look like it's make oakland , i don't know , there's probabl some mean to these thing .
so it's make it through oakland , then it's go to stanford from someth okland .
i don't know .
but now it's on stanford campu , and now it ha three more hop to get across the stanford campu to the stanford campu's web server .
now what's also go on here , is it's keep track of how long it's take .
it send each on a coupl of time , and so these ar millisecond , so millisecond ar thousandth of a second , so <num> millisecond is a half a second .
<num> is a half a second .
so these ar , like , half a second , half a second , oh , wait , no , no , sorri , not half a second , that'd be <num> , <num> , well , <num> , <num> millisecond would be on second so i got that all wrong .
so , <num> . <num> millisecond is like half of a thousandth of a second .
so that's fast , fast .
<num> millisecond is <num> <num> <num>000th of a second .
<num> millisecond , which is <num> hop awai , that's <num> , <num> or <num> , 100s .
so it take about <num> , 100s .
yeah , so like <num> over <num> .
so , no <num> <num>'s .
sorri , <num> <num>'s of a second .
it's less than a 10th of a second to get through <num> router from michigan to stanford less than a tenth of a second .
pretti impress .
now , if i do a trace rout from ann arbor , michigan to east lans michigan , michigan state univers , we have a veri close connect .
i mention the merit network , where we've have a close connect for a long time .
so not onli is it fewer hop , it's onli eight hop to get to michigan state .
if you look at the , if you look at the hop here i'm bounc around the campu for three , i'm bounc through the state for two and bounc on the michigan state campu for three .
so it's total of eight , two hop to get , two , three hop to get across my campu , two hop to get across the state of michigan and three hop to get on campu .
and it's realli fast .
it's <num> 1000th of a second which is less than a hundredth of a second .
so realli fast , you can kind of see it .
now if you ran thi tracer out more than onc , thi might chang .
it doesn't chang too fast , but legal it could chang .
i mean it , there's no guarante it's go to be the same .
it's highli like it's go to be the same becaus the most effici wai is not go to chang within a few second .
but if you start in the middl of the dai , and you do it the next dai , it might chang quit a bit .
so it'd be someth to plai with .
run it .
print it out .
and run it again at midnight , run it at noon , see if your tracerout is differ .
right , interest .
so here's an exampl of a tracerout from univers of michigan to peke univers in china and and so it's again , you know it's .
cough it bounc thru the state of my campu for a coupl of hop .
all right my campu for a coupl of hop .
it bounc around the unit state for a coupl of hop .
and then it start cross the pacif ocean .
it goe thi , there's traffic actual went through seoul , korea .
and then it end up in beij .
now the interest thing is you can see that it look like it's take about <num> thousandth or six on hundredth , just over a , just almost , well , a half of a tenth of a second to get across the countri .
and then it start take longer .
and then by the time it's go all the wai to china and back , it's do <num> millisecond which is about a quarter of a second .
now the big differ here is like not traffic it is like the speed of the light .
it is how fast it take light to get across the pacif ocean , so it take awhil .
the reason i think it's most like number load traffic becaus these ar veri consist .
pretti much all the time .
so that suggest that we're not wait for ani traffic .
we're get through as fast as we physic can .
which is some combin of the speed of the link and the speed of light .
so we just got done talk about how we add to everi packet thi global number , the ip address .
it ha the prefix of the network number in the internet part , the inter network , where it's realli move data from on network to anoth network and leav it up to those destin network how to , how to move it .
we end up realli simplifi the postcard , and the postcard end up be a realli apt exampl .
but the kei thing , especi when think about the four layer architectur that , the reason that , i think , tcp ip succeed wa in thi real complex problem of move data between billion of comput , it kept the part in the middl real simpl .
it doesn't try to be perfect .
it doesn't try to retransmit data .
doesn't try to store it , it doesn't try to keep it in the right order , it doesn't try to sai that if thi packet went here i'm go to make sure the next on goe there . if the two packet , on get ahead , we don't realli care .
it mean it realli fast and realli scalabl .
and by keep it simpl and realli fast , it solv realli an amaz problem , but we yet have other problem to solv .
so i want to close thi lectur by introduc you to anoth person .
so , vint cerf wa a graduat student as the whole notion of packet switch wa be sort of examin and , both in the feder govern at the defens advanc research project agenc , darpa , and in higher educ .
both in the unit state and europ uk and elsewher .
so , vint cerf wa kind of at the right place at the right time and we can be veri thank for that .
he's credit as be on of the father's of the arpanet .
which of cours begat the internet .
and so , vint is go to talk to us , in a sens , go back even pre arpanet and bring us up packet and what packet's mean and then how that all flow into the arpanet and how the arpanet evolv , to becom the internet , enjoi .
packet switch wa an idea which wa specif studi by leon kleinrock at mit , who wa actual look at messag switch .
and he did a brilliant dissert , on these queu theori , to analyz what network of queue would look like , us thi , messag switch approach .
and , hi analysi , although we'd never us the word packet is , is equal applic to packet switch as it is to messag switch , so that's on import mileston , in , around <num> .
in <num> , or there about , paul baron is do work for the rand corpor , and is deepli concern about , the abil to preserv command and control in a post nuclear environ .
we were serious worri that the russian would actual launch , and that we would suffer a nuclear attack , and that we had to be abl to respond , and we need command and control for that .
so paul , in <num> , befor the exist of integr circuit or anyth els is sai we realli should be digit and packet voic and then us sort of pole mount radio that ar abl to transmit in all direct to creat a highli connect environ .
so that if hole were knock out of it by nuclear explos .
you would still , if it's a fabric that's in ani wai connect .
the inform can get from <num> end to the other .
so he envis the notion of a messag block .
and it wa dynam rout .
he us hot potato rout .
if he got someth , he got rid of it as fast as he could .
he chop up the speech into littl <num> millisecond piec .
he didn't talk so much about data as i rememb it .
and thi wa suppos to be a highli resili voic network for command and control .
i mai have just done him a disservic becaus later he wa veri much consciou of the import of data commun too .
so that's around <num> it get document in an <num> volum seri call nondistribut commun and he can't sell it to anybodi .
that at tradit telco , at t in particular , and the peopl at what wa in the defens commun system , er defens commun agenc , laugh him out of the room , said thi wa a silli idea , couldn't possibl work , and so you know he should just go awai .
so he never got anywher with that in spite of all the document .
in <num> , larri robert along with on other gui whose name i'm now not rememb , doe a point to point experi to test packet switch .
it wa between the ansf q <num> machin , at system develop corpor in santa monica , and the tx2 machin at mit lincoln laboratori , wa what larri wa .
thei demonstr on a <num> you know , bit line , bit per second line , that you can move packet back and forth .
then in the <num> or <num> time frame .
a man name donald w .
davi , of the nation physic laboratori in london , also get the bug .
tri to get monei from the scienc research commiss at in , england .
and get onli enough to build <num> node you know , the , the <num> node network .
so he build thi packet net .
he invent the term packet to describ what these object ar and it work .
he's got a bunch of you know , termin and other thing hang off of thi <num> node .
so in , in a funni wai he built the local area network if you like .
but it wa you know , base on physic wire .
so those three gui , introduc packet switch , larri and who ever it wa that he worker with demonstr that it's possibl to get veri distinct kind of comput , talk to each other , us the standard wai .
jcr licklid , is , is , a psychologist actual , at mit but he's convinc in the earli 60s that comput is import to non numer process .
that it will allow peopl to work togeth and collabor in wai that thei never could befor .
he come and start the inform process techniqu offic at arpa .
with thi bee in hi mind .
and who doe he encount ?
he encount dougla engelbart , at sri intern , and the two bond , basic , becaus engelbart wa all about nonnumer comput and the abil of peopl to build up a superstructur of commun and document and interact with each other hyper link .
the mous , the portrait mode displai .
black on light , black and white present .
i mean , the gui had a worldwid web in a box at sri .
and licklid understand that .
licklid's send out note to hi littl commun of , of peopl talk about the intergalact network .
i mean it tongu in cheek .
so he realli get credit for have put thi meme in place at arpa .
then taylor come along to pick up the , the respons for run the ipt over from rick leiter .
and it's all hack off becaus he got <num> termin in hi offic at the pentagon , connect to <num> differ machin and he can't , why can't there be <num> termin talk at all <num> ?
we need a network .
and so as he's pursu thi idea with charli hertzfeld , he's the head of arpa at that time , charl hand in a million buck over a <num> minut convers and now taylor's got the problem , who's go to actual do thi becaus taylor's not a technologist either .
he's be anoth , you know , kind of psychologist type .
so he decid to get larri robert , from lincoln laboratori , who did that packet thing , and larri doesn't want to come .
so , he goe and complain about thi to charli hertzfeld .
charli call up the gui that run lincoln labortori , and sai , you know , we pai for a signific fraction of your research budget everi year , you should , you should tell larri he should show up .
and in fact , i thought that mayb larri had been forc to do thi , you know , by charli .
i think it wa probabl a littl less aw than that , but larri wa persuad to come down .
eventu , of cours , inherit the oper of the offic from bob taylor but in the meantim , is the gui respons for do the , initi the internet , or the arpanet project .
so thei write an rfc , or , no an rfq , request for quotat .
a bunch of respons come back , probabl on the order of a coupl dozen , i don't know .
person , for sure how mani .
i know that i wrote on of them with my colleagu , bah , steve crocker , while we were still at ucla as graduat student , but we were consult with a compani call jacobi system , in san , santa monica , and jacobi system wrote on of the respons .
bolt , baranek and newman wrote anoth respons , primarili written by bob kahn , who'd come to bb and n from mit .
so , the respons come back and thei get evalu and <num> of them end up .
and the jacobi system on isn't on of them .
or if it wa , it didn't get select .
bb and n got select .
so steve crocker and i kind of hike back to ucla as graduat student .
and the next thing we know , glen klienmach , who's at ucla , and who had written , you know , thi origin dissert work on packet switch , ha come to ucla to teach and explor queu theori is a close compatriot of larri robert , becaus thei were both in lincoln lab togeth .
so he get the network measur center piec of the arpanet project .
and steve crocker and i and john prostel , all of us from the same high school in santa monica er , in san fernando vallei .
end up in glen kleinmach oper , run the network measur center .
so i wa the principl programm for that .
steve crocker took the respons for manag and lead the network work group which led to the protocol , host to host protocol .
and jon postel eventu becom the keeper of the document .
he's the rfc editor .
which steve crocker start , request for comment .
he's the gui that becom the number czar , which is keep track of address space , and alloc , and eventu becom the domain name manag of the internet assign number author when the internet happen .
and that hasn't happen yet .
that thi period of time of the arpanet program , it bring us up to <num> and thi is an import moment in thi whole histori becaus the first demonstr of the arpanet happen in the washington hilton hotel basement in octob , <num> .
a whole bunch of peopl from the network , interest network commun .
packet switch commun at tem not onli in the us but from franc and from england and itali and germani and elsewher , that group of about <num> or <num> peopl conven , see the arpanet in oper , see applic that were be done .
and includ doug englebert's staff .
and then form thi intern work group model after the work group that steve crocker manag to build the arpanet system .
and at thi point i becom the chairman of that group becaus steve is busi at arpa do artifici intellig .
the next , at the end of that year bob connelli leav bolt , bemnek and newman and goe down to arpa .
i leav ucla where i'd been work with crinerock , and crocker , and pastel and i go to stanford .
so bob is at arpa , i'm at stanford and in the spring of <num> , bob come out from arpa and he sai , i have a problem .
he sai , what's your problem .
he sai , well , we got thi arpanet .
he sai , yep .
but we also ar work on other network capabl to make command and control work for the militari .
if you're go to be seriou about put comput in command and control , thei have to be mobil , thei have to be in you know , armor personnel vehicl , and tank , and all these other thing .
thei have to be seaborn so we can have ship to ship , and ship to shore commun , which mean satellit .
and we so we need mobil radio , we need satellit , in addit to the fix wire system that ar , ar repres by the .
we have fix instal that ar not move around .
so we have all these differ technolog , and bob's brilliant idea is not to build on network with all those technolog embed in it .
instead he break them apart and sai let's build a packet satellit network .
which optim the us of satellit take into account that it got a half of second round trip time .
let's build a packet radio network which optim a system whose connect is chang with time as thing move around and if we get the variabl the wai and ar also variabl interfer .
so these were differ packet network then the problem is how do you hop togeth .
you would have thi problem if you put all the technolog into <num> net but if you put them all into <num> net it make it realli hard .
to do control over all these highli variabl paramet .
so instead he said break them into differ network and connect those togeth .
so we design and build a gatewai which todai we call a router .
and that concept , also introduc a whole bunch of other thing like how do you refer to anoth network ?
each network think it's the onli network in the univers .
thi is true of the proprietari network like sna , intechnet and so on .
and you didn't have a vocabulari that said .
take thi packet and move it to anoth comput on anoth network somewher els , that you might not even be connect to .
so we have to invent an internet address space in order to solv that problem .
we have to find a wai to allow packet loss in thi path to be recov which is where tcp now becom a manag of reliabl on an end to end basi instead of reli on each net to be reliabl .
the arpanet wa built upon the assumpt you can build a reliabl underli .
the internet wa base on the assumpt that no network wa necessarili reliabl and you had to do end to end retransmiss to recov .
so dure thi it's <num> period , bob and i get the paper .
first paper written and publish in ieee transact and commun , mai of <num> .
and i think mostli nobodi paid too much attent to it .
meanwhil , arpanet is fund us to go make thi actual work .
at stanford , i am work with my graduat student .
some who ar at oxford , some ar at , at here at stanford .
on thi detail specif of tcp ip , we publish that in decemb of <num> and it's the first time the word internet show up in print anywher .
these ar the first paper we talk about the internetwork .
so internet show up in a , in a complet spec in decemb of <num> and it's also got bug but we don't know that yet until we start implement it in <num> with two other organ .
so bob kahn sai can't have just on implement .
bolt beranek and newman becom on of the implement .
univers colleg london and peter kirstein's group in england is the second or third implement .
so we have <num> implement of tcp ip .
in fact , by thi time , it's onli tcp .
we haven't broken off the ip part .
three implement ar go .
we instantli find problem with the design .
and we start evolv .
so over a period from <num> to <num> we go through four iter of the design and implement and test , till we have a veri stabl thing .
and then we standard .
so <num> we fix everyth .
it's , now by thi time the intern protocol's been split off .
becaus peopl like david reed and danni cohen ar sai we need to have real time commun that is not necessarili reliabl but which ha low latenc so voic commun radar track and all that , you don't care where the missil wa two second ago .
you want to know where is it now .
so and in the case of voic if you lose a packet and you just sai , sai that again i miss someth .
so we split tcp into tcp and ip .
and we creat someth call user data gram protocol which is parallel to tcp and it is the real time , low latenc version of , the reliabl tcp .
all of those littl compon , ip , tcp , and udp , now go to the internet architectur , start in <num> , and we start implement .
for the next five year , we start , we , do everyth we can , to get tcp ip implement on everi oper system we can find .
it goe onto the ibm machin , it goe onto the digit machin , hp , goe into unix .
we have a unix version built by bolt beranek and newman .
we sent it out to berkelei , to the berkelei bsd releas gui .
bill joyc sai , i don't like that code build hi own .
put it into bsd <num> , and that's the version unix that carri a lot of tcp ip to the academ world becaus of the same sort of time frame .
sun microsystem come along , build these fantast work station and thei want to us open sourc , or at least open protocol .
and open oper system .
so thei adopt unix , and the tcp ip come with it .
and thei us ethernet as a wai of connect workstat togeth , so thei ar the engin that's drive the academ commun which ar all gangbust for workstat and high speed local network .
so all of thi , cours , place huge demand on the arpanet backbon , which is onli run at <num> kilobit a second .
and eventu lead to the need for higher speed .
nsf jump into the frai , see how valuabl all thi is for the academ commun , and conclud that it should build the network that run even faster .
and it doe so , and it's call nsfnet .
so i wa a student at mit , and i wa schedul on the wonder scholarship program , support by mit lincoln lab to get a master's degre .
and it wa a veri rigid schedul , you're go to be done in two year , get a job at lincoln lab , and do research .
and so i wa on the program and i wa on of the few peopl who actual finish on time .
and as i wa finish i schedul to have my first child the summer of <num> when we're go to be done .
in that summer , my professor at the server mechan lab at mit said , you have to get a ph . d .
i said i don't want to get a ph . d , i've done thi program , i'm schedul , my child ha just been born , so you gotta do it .
so he kept twist my arm , and final i said okai , i'll do it .
but if i'm go to do it , i want to work on someth that's realli signific , and not piddl around for the next three or four year .
so i decid , i'm go to work for the best professor i know at mit , and that wa claud shannon .
okai .
the infam , wonder , magnific person claud shannon .
so i call him up , and he invit me to hi hous , and we chat a bit .
decid ye , we're go to work togeth .
first thing i start work on actual wa a chess plai program .
just work with the man wa a delight .
the , the , he wa a great engin , great mathematician , smart as heck , could solv a problem like that .
then i look around at my classmat , most of whom were work for him , and most of them were work on the kind of work he had develop , mainli the field of inform theori and code theori .
and i look at them , and i'd taken those cours .
and i said , you know , the work that thei're do , the stori that he left behind .
those problem that ar left over ar hard , and probabl not of great signific , littl bit and piec left .
i said , that's not what i sign up for .
i want someth to be fun , excit , challeng , and have impact .
meanwhil , be at mit , and lincoln laboratori , i wa surround by comput .
and i recogn , you know , on dai these comput ar go to have to talk to each other .
becaus thi wa wai earli , nobodi wa think about that at the time .
but i said if thei're go to talk to each other , what technolog would support their commun and interact ?
and the answer is there wa noth avail .
so i had an approach , i figur the wai to provid the commun would be to provid the abil for share commun link .
becaus i knew that comput , when thei talk , thei don't talk the wai i am now continu , thei go blast , and thei're quiet for a while .
a littl while later , thei suddenli come up and blast again .
and you can't afford to dedic a communc connect for someth which is almost never talk .
but when i want to talk , i want immedi access .
so we had to not us the telephon network , which is design for continu talk , the circuit switch network , but someth els .
and i had an approach us some mathemat think , mainli queu theori .
there wa a model i could develop , and it just made sens to do that which we had done in time share .
in time share , you have a big comput , and a lot of peopl share it .
when you're us it i'm not , when you're not i am , so we sort of interlac each other .
why not us commun the same wai .
we're go to set up commun capabl , that everybodi jump in and share and thei onli get to us it when thei have someth to send .
thi is a new technolog .
and i said well there's an approach , i have a mathemat tool to do it , it's clearli import , it will have impact .
and nobodi's look at thi yet , so there's a lot of low hang fruit around .
it's not that hard .
it's not that hard .
so it's perfect for me .
so i , i start work on the problem .
now , thi wa year befor anybodi need thi technolog .
in time share , for exampl , which is the underli technolog that i adapt to commun .
in time share , you want to let the littl job go befor the big job .
yeah .
becaus why , why should the littl gui wait a long time for a big job , he's go to get in and get out .
so when job come in , you ask them how long ar you ?
and thei're all go to sai i'm tini .
so you sai okai you're tini , i'll give you a littl bit of time .
and if you're tini you'll be out of there .
no ?
i'll send you to the back of the queue and you get anoth tini shot .
the notion of round robin .
so you get a littl bit at a time .
we're go to break you into littl chunk .
you get a chunk at a time .
i said that's a great idea for share commun .
we'll give everybodi a littl bit of commun time .
the littl on will filter out .
the short job will filter out .
when i sai job i mean messag , a short messag will filter out .
and the long on will take a littl longer , and thei don't mind be interrupt by the littl gui .
the import thing in thi technolog , wa not to make , the veri short messag to wait behind veri long messag .
thi automat , round robin , which is now call packet switch , you chop thing into fix length .
you give them a littl bit , it's not , that's not enough , give them anoth piec , and thei go fly through the network on their own .
so the idea of packet wa import , the idea of distribut control .
the idea of larg share system in which you get some terrif design benefit came along .
and so thi got publish , a mcgraw hill book , nobodi care .
i want it publish earli ?
yeah thi , thi is publish .
right awai .
my visit end in decemb' <num> , i graduat in june' <num> , thi book wa publish , in <num> .
and nobodi care .
nobodi care .
in fact i went to at t , the biggest network of the time , and explain to them , you gui outta give us good data commun .
and their answer wa , what ar you talk about , the unit state is a copper mine , it's full of telephon wire , us that .
i said , no , no you don't understand .
it take you <num> second to set up a call .
you charg me a minimum of three minut , and i want to send <num> millisecond of data .
and their answer wa , littl boi , go awai .
so littl boi went awai , and with other develop thi technolog which at their lunch .
but nobodi care , and thei said it wouldn't work .
and even if it did work , thei want noth to do with it .
so that wa the envireon we face .
it wasn't until year later when the govern decid thei need a network , that suddenli i saw a wai in which i could implement the technolog i had .
but get back to what i said earlier .
i set up thi mathemat model , it wa analyt intract and still is , by the wai .
had two choic .
on is give up and find someth els , or two , make an assumpt which allow me to move forward .
so i introduc a mathemat assumpt , which crack the problem wide open .
from that point , i could just sail through the solut , get the perform behavior , get the design principl go forward .
but then the question is , wa that assumpt ani good ?
what wa the assumpt ?
the assumpt wa what i call the independ assumpt .
and it's absolut a fals assumpt .
it sai when a messag travel through the network , it chang thi length independ everi time it hit a new node on it hop through the network .
right .
mathemat that creat an independ which allow you to proce with the analysi .
but it's clearli not true .
right .
so what i had to do wa to simul a network with and without the assumpt .
i simul mani network on a machin at lincoln laboratori , on the tx2 transistor comput there .
and i spent four month write the simul program , without debug a singl line of it .
out of <num> , <num> line , assembl languag simul .
and i knew if i didn't get that simul right , i would get no dissert .
ran it , test with an without the assumpt , and the result were amazingli close .
so i had my solut , i could prove it would work .
the packet wouldn't fall on the floor .
i could tell when thing would work well , and when thei wouldn't .
got publish again and still nobodi care about it .
as i said , lincoln laboratori sent me for my master's dissert , thei also sent me for my phd .
so thei support me for year .
wonder econom , financi , research environ support , and i felt an oblig to work for them .
and i wa prepar to take a job at lincoln laboratori , which is a great institut .
until when i , went i went to work there , the first thing thei said is look lem , why don't you look outsid befor you can commit to work here , make sure there's noth out there that you realli would like better .
thi wa a gen , a magnific part , step on their part .
so i took a trip to the west coast , i went to some of the aerospac compani .
i wa not interest in univers posit at all .
realli .
but it turn out when i wa go up to san francisco to look at some of the high tech compani up there .
a friend of mine suggest i interview with berkelei .
so i did .
i interview , i came back , thei lost my case , thei chang the the chairman , i never heard from them .
but on sabbat , on of the professor that interview me came to mit while i wa just finish my , my ph . d then .
and he see me and holler kleinrock , how ar you !
and he think that i'm look for a pa , an academ posit .
he contact on of hi friend here at ucla , who then invit me out here , offer me a job , and now i've got a dilemma .
do i want to teach ?
do i want to cross the unit state , it's almost like on a wagon train , <num> , <num> mile awai .
from the east coast where the world is , famili is , for a job pai half that i could earn back at , at , at mit lincoln lab , and try someth i've never tri befor .
so i went to the folk at lincoln lab , and i said look i've got thi offer , it look attract , it's , it's a new challeng .
what should i do ?
and there wa a wonder answer thei gave .
thei said , len , try it .
if you don't like it , come back .
wow .
wow is right !
well , i came here in august of' <num> , <num> year ago , and i'm still here .
the domain name system it realli doesn't have a great place to fit in thi architectur .
it is the thing that convert user friendli name like www . umich . edu to , to like a network friendli address .
these network number and ip address ar import , becaus thei ar the .
thei encod the geographi of the , of the connect of the internet .
but we human realli don't care about the geographi of the interconnect of the internet .
www . umich . edu or www . facebook . com is what we want to rememb .
so i like to kind of think of the , the the domain name system is kind of like , sort of , somewher either between the internet and the transport , or between the internet and the link or somewher like in thi area .
you know , somewher here .
and it's certainli not in the applic layer , it's not the link layer .
it us the link layer .
but basic , it's kind of a littl add on to the side .
so the domain name system is for user friendli name , okai .
so let's talk a littl bit about just how it work , becaus domain name ar what we us all the time and ip address ar what comput us all the time .
and router us , router realli have no knowledg of the domain name , thei simpli move data base on the ip address .
numer address ar tough for peopl to rememb .
i rememb in the old dai we would have littl post it note on our comput and that's how i would keep track .
oh , there's a new , minnesota just put up a server , let's put that number on my littl post it note .
so the fact that thei were number didn't bother us at all , becaus there were onli <num> of em , but quickli there wa more than <num> .
and each campu even in the earli dai would onli have on network number but now campus have <num> or even <num> network number .
multipl group of address , thei're group of address but their mani of them .
thei get reorgan , you move a server from on place on campu to anoth like the , the michigan web server , it wa on our north campu so it would have on address , it wa on our main campu .
we'd have anoth refer and so you don't peopl to know what these ip address ar .
so thei invent thi notion of a domain name system , the .
the visibl name that we could switch the map from the name of the ip address transpar .
and so the domain name system is like the internet's address book and it's a big distribut data base that's fast , it us cach so that it's local fast even if the network is partial down .
ip address reflect the technic geographi .
and thei read right to left , at least to the point where the network number is kind of the physic attach point for the campu or busi .
and then , thi part is the attach point within that campu or busi .
and so , the most specif , the least specif to most specif goe from left to right .
doman name , on the other sa , hand ar like organiz structur .
the least specif is on the far right , and then it goe more specif as we go left .
so edu mean educ institut , umich . edu mean the particular educ institut univers of michigan , si . umich . edu mean the school of inform at the univers of michigan .
not all school but just a particular on .
and then dub , dub , dub is a particular server at that school .
and it read like a posta address .
so , if you think that where i teach <num> north quad , it's kind of on earth .
and it's on the countri usa , and it's in a zip code to the state of michigan , it's in ann arbor .
and then thi is the build and then thi is the room number in the build .
so we go from veri gener to veri specif .
so , domain name lead , read in a sens right to left .
phone number and ip address read left to right .
the other thing that's interest about domain name is that thei're own .
thei're own from right to left , and so there ar sort of , thei're a hierarchi , and basic an organ own edu .
the organ's name is educaus .
it ha confer and other thing but on of the thing that it doe is it own in the public trust the name edu .
so univers of michigan could go to edu and sai hei could i have umich . edu .
and thei would sai let me think about that , and then mayb thei would give it .
and thei did , becaus univers of michigan , nobodi els had it and it seem like a good name and univers of michigan wa like accredit in higher educ so thei will give it to them .
if i want to sai like i'm dr .
chuck and i want to creat a dr .
chuck univers like dr .
chuck . edu and thei go like no , you can't .
you're not a univers .
you're not a , you're not a educ institut .
so thei might sai ye , thei might sai no .
thing like . com and . org , thei're kind of a catch as catch can and so the first on who get there tend to win .
there's , there's some situat where if , if i got cocacola . com , and had no particular us for it and coca cola own the trademark coca cola , thei could take it awai from me , unless i had a legitim purpos for it .
it's hard for me to imagin a legitim purpos for coca cola , but target . com might be a club for target shoot , and it would be difficult for target to sai , sorri i got to take your , your target shoot club awai becaus that' , even though , though it's not as big as target's comapni , it it's a legitim us .
so , at each level , onc the univers of michigan is award the univers of michigan it creat a mechan to a word subdomain within that .
and so , there is actual committe at the univers of michigan .
and if we want , like our learn measur system is call ctool . umich . edu , if we want that , we have to go to the committe and convinc them to give it to us .
a top level domain within the univers of michigan .
we got on , the school of inform , where i'm a faculti member , is si . umich . edu and thei gave us that on .
i can go to that committe and i could sai hei , i want to be drchuck . umich . edu .
and thei would sai no , you can't .
so , then the school of inform , where i teach ha si . umich . edu and thei have a committe .
and thei can give out sub domain within that .
so , you get the pictur .
right ?
so , i could go there and i'd sai , hei , can i have drchuck . umich . edu , si . umich . edu ?
drchuck . si . umich . edu .
and it will sai , no .
but you can have csef .
peopl . si . unich . edu .
so onc you own on of these thing you can give out sub domain .
i do own drchuck . com .
drchuck . com and if there wa a high desir for someth underneath drchuck . com .
that i could have my own littl busi sell domain under dr .
chuck .
com .
nobodi seem to want ani of those thing .
but you know , some peopl have mail . com and other thing and so each on of these is a new potenti for expans .
and so , that's kind of how the domain name work , right , it is thi map between these name there is sort of thi right to left ownership of these name and and you have to ask peopl to get those name and so that's a real quick overview of the domain name system .
hello , and welcom to the transport layer .
we ar work our wai up from the bottom of our four layer architectur up through the top .
so we're kind of at the half wai point .
we have cover the link layer , like ethernet , and then we cover the internetwork layer which is kind of like the postcard layer .
so let , let review the magic of ip , right .
the magic ip is thi postcard layer that bounc these packet with from address and to address , through you know , <num> or so hop , get them their , get packet to their destin network from on network to anoth network as well as it can .
and then when it get to the destin network it find the final comput on that network .
the magic of thi is there is no interim long term storag insid the network .
all the long term storag is outsid , and now we're go to talk about that .
so on of the thing that make ip so fast is that it is not demand to be perfect , it is not demand to , to deliv data in order , and it's not demand to , it , it's , there's no requir that it doesn't lose data .
it fast and bare ever lose data and when it doe there is a layer to recov and that's we ar go to talk about next .
so the internet protocol is thi multi hop packet can take multipl path , thei can make us of all kind of crazi link .
but now , we're go to move up on , right ?
we're go to move up to the tcp layer .
so the tcp layer is both simpl and complex .
the purpos of the tcp layer is to compens for the possibl error in the ip layer as well as make best us of avail resourc .
so if the network , if the overal network from the overal network from here to here is extrem fast we want to send data realli fast right .
if on the other hand the overal network from here to here is realli slow we want to send data slowli and be effici caus rememb part of the goal of the .
tcp ip network is to share effect and so we need to be awar of whether our network is fast or slow .
and those ar the kind of problem we solv with a tsp layer .
how fast is the underli network , how reliabl is it and if someth goe wrong what do we do to deal with that .
so the kei idea in tcp ip is that when we send some data , we break it into packet and then we send each on .
and then we keep them until thei get an acknowledg from the other side and then and onli then do we throw them awai .
and at some point , if a packet get lost it can be sent again , and again , and again until it final is acknowledg in the destin system .
and so that's basic what tcp doe , is it figur out which packet have or have not made it across the internet layer .
so here's an exampl scenario .
so we got a messag that's broken up into five packet .
we've got sort of the first hundr charact , the , the , you know , first charact , the second , and third packet .
now , what tcp doe , is it specul send a few packet .
sai okai , let's get ahead .
caus if you sent on and wait then you might not make best us of the network , so you kind of guess and dump a few packet out there .
and so you send , let's sai we send three packet , cue them up for send .
and as fast as we can send them out the back of our network , we start spool them out the back of their network .
and somehow , two of them make it across the internet , to the destin , but somehow that poor second packet , just like everi time i'm do a lectur , the poor second packet never get it .
you don't want to be the second packet in on of my lectur , 'caus you're go to get it .
but somehow , the second packet ha gotten vapor .
now , time pass .
and , the receiv get thi s , s , thi sensat that mayb , mayb , mayb someth's miss .
and so it send and acknowledg back , and it sai , i'm go to send a note back that sai , look , i'm readi for <num> .
i do have <num> , and i'm , i'm readi for <num> .
matter of fact i might even through awai <num> caus it's been so long .
so i want you to start me over at <num> .
but sender all of a sudden know that <num> ha been sent .
and so it know that is can throw thi on awai now right it's been acknowledg .
so there's an acknowledg stream go back and forth , so now the sender send <num> and <num> and then thei make it a cost , the receiv sai i have got <num> .
thu the <num> and then thei send <num> specul .
<num> make it , <num> make it and receiv sai .
i got <num> , which mean now it can cross off <num> and <num> , right ?
check those off and throw them awai , and then send <num> cross , and at some point check those off .
it's got <num> , and now the sender can sort of like empti , check everyth off .
everyth's been sent , and it's been acknowledg , and we know .
and so that's kind of an oversimplifi view of the kind of bookkeep it's go on , on both side of a tcp connect .
and so thi , right here is in a sens the geniu of the internet .
the storag requir in the middl , the router , thi is the ip basic the network of network , thei , we didn't design these to requir a lot of storag .
we want them to be fast , we want them to be agil , we want to be dynam , we want to be clever , but we also gave the right to fail .
so we didn't demand storag .
we didn't sai , hei , hold on to packet , you know , all over the place .
just , store up pile of packet , pile of packet and pile up in these , we don't ask that .
no router ha to keep the packet .
as a matter of fact , router ar suppos to throw packet awai to commun back and forth between the system that mayb thing aren't work so well and , don't us me to get to california .
on the other hand , with hundr , mayb , you know , hundr of thousand or million of router but billion of comput on the outsid .
so we need a wai to make thi reliabl .
so we need to have memori to store the packet while thei're in flight so we can retransmit but we store the packet in the comput that ar outsid .
and there ar billion of these comput , there ar billion of them .
everi comput that you can carri around , everi laptop .
come here .
everi time we add anoth comput to the network , we add storag for packet that ar be sent .
so when your comput or , or phone is send across the network , it is respons for retain it own copi .
it doe not expect the inner part of the network to do so .
and that is absolut brilliant , so it's what realli make thi work .
and so that's kind of a great oversimplif of what's go on .
and it turn out that there is still a lot of engin to make that happen .
so i'd like to introduc you to a , to anoth of the innov in the , that we meet in thi class hi name is van jacobson , and i met up with him at xerox park he did the work we're go to talk about while he wa at berklei , and in the late <num>'s there wa thi predict that the internet wa go to die .
and it seem obviou that it wa , it's a good idea now , but back then there wa a bunch of folk that felt like academ weren't smart enough to make a network .
and and thei were like ibm and digit equip that thought thei , the vendor , should make the network , and we should just pai them to us their network .
and as the nsf net wa come up , and more and more comput were be connect in the background , the backbon wa so slow it start to fail .
and it look like the predict of all of the comput vendor that said academ couldn't build a robust scaleabl network were go to be true .
and so van jacobson tell the stori veri differ but the wai i saw the stori happen and unfold in <num> is van jacobson save us .
the network wa crash , and we all instal van jacobson patch and the network got better .
and in my recollect thi wa the last time it appear that the entir internet wa go to crash .
so we name it the van jacobson protocol .
and he doesn't like to call it the van jacobson protocol becaus he's a shy and unassum gui .
but i , i think he save us .
and so thi interview is him describ sort of that moment back in the late <num>'s where he invent the slow start algorithm that realli is part and parcel of everi t c p implement that you have on everi comput that you us as a matter of fact it's be us to float control on thi lectur right thi second as we speak .
so here's van jacobson .
there were lot of campu ethernet becaus thei were realli easi to deploi and you could put them in a depart , and then you could run a wire between two depart and it made a bigger network .
and so , we've grown up network sort of by agglomer in lot of differ univers campus and , nsf came up with some monei and said , oh we've got a littl bit in our budget where we could get some <num> kilobit line , and tie those campus togeth .
and , thei did that .
made the nsfnet phase on .
but now you're ty togeth ten megabit campu infrastructur with <num> kilobit wire and it wa wildli popular becaus peopl that couldn't talk could suddenli talk .
and thei're send email and move huge file and , just , everybodi's realli excit about thi technolog .
but , ani on of those campus could oversubscrib a net by , you know , a factor of a thousand .
so we had a lot of packet pile up and get drop .
at the time , i wa , a research at lawrenc berkelei lab , which is in the hill up abov the berkelei campu .
and i wa also teach on the berkelei campu .
even back in those dai , which wa mid <num>'s we had a , for everi class there wa a messag group , you know like a littl new group that wa set up , all the assign would be put onlin .
and i wa try to get cours materi from my offic in lbl down to a machin in evan hall at berkelei .
and if there wa , like , zero throughput in the net .
it wa , on packet everi ten minut or so .
and , it seem unbeliev bad .
and i went down and talk to mike karel , who wa head the bsd group , the peopl that develop berkelei unix .
and he's get report of these problem from all over the countri .
from , in those dai , the easiest wai to start run tcp ip wa to bring up berkelei unix becaus there wa a arpa fund , veri nice implement in it .
and everybodi wa see poor perform .
so , we talk for a long time that dai and on succeed dai , about well , what's go wrong ?
is there some mistak in the protocol implement ?
is there some mistak in the protocol ?
thi thing wa work on smaller scale test and then it suddenli fell apart .
i think we struggl for three or four month , just , go through the code write tool to captur packet trace and look at the packet trace and try to , to sort out what wa break , and i , i rememb , the two of us were sleep in mike's offic after we'd been pound our head against the wall for , for liter month .
and on of us , i can't rememb which on said , you know that the reason i can't figur out why it's break is , i don't understand how it ever work .
you know we're , we're send these bit out at ten megabit .
thei're zip across campu . thei're run into thi <num> kilobit wire .
we expect them to go through thi wire , pop out on the other side .
go through how could that function ?
that turn out to be the , the crucial start point .
at that point , we start sai well what is there about thi protocol that make it work , how doe it deal with all of those bandwidth chang , how doe it deal with the multipl hop ?
so , thi pictur , that direct is time , thi direct is bandwidth .
so that's a fat pipe and that's a skinni pipe , and , the scale at the time , thi is a ten megabit pipe and thi is a <num> kilobit pipe .
so , here the differ is about three to on .
it wa realli closer to hundr to on .
and , so time , second time bit per second equal bit .
so each of these littl box in there is a packet , it's the number of bit in the packet and if you scrunch it down in bandwidth it got to spread out in time becaus the number of bit doesn't chang .
and so see the burst of packet , a window's worth of packet , get launch .
it's go to fly through the net until it hit thi fast to slow transit .
and then , becaus the packet have to stretch out in time , thei'll have to sit there and wait as thei're fed into the slower wire and you thei pop out the other side .
thei get spread out by thi bottleneck , by the slower wire .
onc thei're spread out , thei stai spread out .
that there's noth to push them back togeth again .
thei hit a receiv , it turn everi data packet into an ack .
so you've got a bunch of ack that ar go back toward the sender .
and thei rememb what's the right space for that bottleneck .
so the ack get back to the sender and everi ack get turn into a data packet .
so we can see the data packet flow back and thi is after on round trip time .
now the packet ar come out perfectli space so thei go by a new on goe into the net in exactli the time it take a packet to exit from the bottleneck .
so these ack ar sort of act as a clock that tell you , tell the sender when it's safe to inject everi new packet .
and thei're alwai go to be space by whatev is the slowest point in the net .
> and then the kei thing is how , how quick , how can you get to steadi state , sort them most quickli without wast > i , yeah , and the issu of the failur we saw wa thi work perfectli after you've exchang a round trip time worth of packet .
but , when you're start up , when you're here , there's no clock .
and so the hard part on tcp is not get it run , it's get it start .
becaus onc you've got it run , you've got a clock that tell you exactli what to do .
if you turn them on suddenli you get in thi repetit failur mode where you satur the , the buffer that wa avail at some gatewai .
then when you retransmit you do the same thing again .
so your alwai lose packet .
but if you turn it on more gradual , then you wouldn't overload the buffer .
and then you'd get enough of a clock go , so that you'd control the amount of backlog to fit the avail buffer .
but you'd still be grow the number of packet in flight , so that you'd eventu get a , a , you'd start with a kind of sporad clock where you you'd eventu fill in the detail and get a per packet clock .
> how did you get it to the point where it wa in all the tcp ip implement on the planet .
cuz thei kind of have to cooper in a wai .
> so , rememb it wa a much simpler time when you're talk about all the tcp ip implement on the planet .
at that time , there were , like four .
so , there wa the berkelei unix on .
there wa the mit pc tcp .
there wa a bbn on that wa us in butterfli and nymph .
and there wa a multic on .
i took the coupl of tcp kernel modul that we'd been work on .
packag them up a tar .
i had thi horribl driver hack that would let us snarf packet from the kernel .
and i mean , it wa realli a horribl driver hack .
it wa the wai you said what you want to snarf wa by adb ing the kernel , you , you wrote , in binari , some new valu .
these ar the port that i wanna look at .
and the driver would captur those into a circular buffer .
and you'd read kernel memori to pull that buffer out .
craig lere and chri torek who were work in my group at lbl and were both long time kernel hacker were just embarrass at thi and thei put togeth a realli nice , clean driver i think call bpf , the berkelei packet filter , that would let you pull packet out of the kernel by a , a veri effici i o control interfac and so we bundl all of that up and on the tcp ip mail list , which , in those dai wa , you know , tcp ip wa veri experiment .
it wa veri lead edg .
and pretti much everybodi who wa plai with it wa on that mail list .
so , now , sinc thi stuff wa avail , a bunch of peopl ftpd it , tri it , it blew up , sent kernel core dump , and bug report , and i fix the bug report and put new version out .
somebodi would immedi come back and sai , panic here , do you want the kcore ?
and i'd go , oh , no .
embarrass put out a new version , go out .
somebodi els would come back and sai , panic here , and fix that .
and just cycl like that .
and after about a dai we got a version that didn't immedi panic , and then start work on the , actual algorithm and a littl bit of tune to make sure that it actual did good all the time and didn't do ani harm .
just complet a , a commun effort and ya know sort of when the , the commun wa sai thi , mostli doe good , and never seem to do harm .
that's pretti much what mike need to put it into the kernel .
so he took that , the commun develop modul , and roll them into the bsd releas .
so basic the transport control protocol ha a respons of compens for the imperfect of the ip layer .
data can arriv not out of order , it can arriv not at all and so the tcp layer mark the data in a wai , and store the data in the sourc comput until it is acknowledg by the destin comput .
and so tcp buffer thi inform , and the buffer ar kept on the edg , and thi allow the internet , to grow in wonder wai . cough so , thi result in a layer , that realli provid us what seem to be an end to end connect .
so we can send data in on end , a stream of data , just send it in , just roll it in , and out come a stream of data .
it come out in the same order , it come out reliabl , and we can stop think about it .
and again , the whole goal of thi layer architectur is so that we can pretend that the complex insid thi box is simpl .
so it's not simpl insid .
but we , the applic , we're go to make us of thi transport layer and pretend it's simpl .
okai ?
and so we just , i put in h .
and a h come out and i put in an e and an e come out and i put in an l and an l come out , an o come out , and it's hundr of thousand of engin and billion of dollar of research that make it work , but it just is simpl .
it's been oversimplifi .
so now we've talk about the link layer , the ip layer , and the transport layer .
and up next , we're go to talk about what we do onc we have reliabl pipe connect on applic to anoth .
so now we're go to talk about the applic layer .
and , up to now we've been talk about these bottom layer and we've been sort of work our wai up .
we talk about the link layer , the ip layer and the tcp layer .
and , and , and each of these layer work with the other .
the , the ip layer depend on a link layer , the tcp layer , depend on and add valu to the ip layer , and now we're go to talk about the applic layer that is go to make us of the servic of the tcp layer .
and the servic of the tcp layer ar basic to give us a reliabl , sequenc end to end stream , that can start in on applic in on comput and end in an applic in a differ comput , and have a two wai commun .
so i can send the word hello , hello , from on applic , and then , all kind of billion of dollar of hardwar , hundr of thousand of engin , <num> year of engin design , and out come hello on the other end .
and what's beauti , and thi is the beauti of the layer , of the four layer architectur , is we just pretend thi is magic .
thi is magic .
we send someth and out it come .
with that magic avail , with that billion of dollar and <num> year of research magic avail , now what would we do ?
right ?
now what would we do with that magic if we had it avail to us ?
so tcp is give us thi reliabl pipe .
we're go to think about now , we're go to ignor all the rest of it .
right ?
we're go to ignor , all thi part , we're go to put , all we're go to sai , is , we have an applic on thi end of our comput .
now rememb , thi is your comput .
and sai thi is the server , right ?
so thi is you , and thi is the server .
and all the softwar run in it in , in everi , all the softwar's run in your comput and all the softwar is run in the server .
so the question is , what ar we go to do between these two thing , okai ?
what , how we , what , how ar we go to ask for data ?
and thi applic is the client applic .
and thi applic is the server applic .
client and server ar not necessarili the same , veri much the same .
client and server ar like veri differ applic .
the client is like give me inform .
and the server is respons for give give the inform to the client .
so the client is often make a request , and then the server is make a respons back .
and so , thi client server mechan , thi applic to applic commun , we could build a mail system with it .
world wide web .
or we can stream video much like we'll be stream thi lectur back and forth .
but we're go to focu on the world wide web becaus it's realli simpl , and realli eleg , and it's probabl the easiest on to understand .
and , it's the most popular .
but there ar mani other protocol go on , file transfer and other , but , the world wide web protocol , httpd , is the protocol that is the most popular .
so , the , there ar two basic question that the applic layer ha to solv .
on is , which applic get the data .
and thi is done us a mechan call port , and port allow a ip address , or a singl comput , or a singl server , to serv up multipl servic , and then for a client to be abl to dial up much like a telephon extens , and pick the servic that thei ar interest in .
onc you've connect to the servic that you're interest in , like the world wide web servic , then you need to know the protocol to talk to that .
port and tcp ar like a telephon extens number .
again , that , like i said , thei , you can connect to an ip address but then you can connect to a port within it .
and so if you think about a telephon number , and an extens , it's sort of a , a further refin .
an ip address give us a particular server , a piec of hardwar connect to the internet , and then a port within that tell us what applic we're go to talk to .
so , let's talk about port and connect .
so , if i add a server , and thi kind of a , a arbitrari server .
here , here is a singl server , www . umich . edu .
and it ha on ip address connect into the cloud .
we can have mani client talk to it .
and , we have mani servic run on thi server like send email , or log in to that server , or retriev webpag , or retriev my mail from that server .
and there ar port , so , incom email is done gener in port <num> , remot log in is <num> or <num> , web server depend on whether it's secur or not ar <num> or <num> , and , the person mail box is on port <num> or <num> .
and so these comput don't just connect to an ip address , but thei connect to a port within an ip address .
so some common tcp port that we have ar the on i just mention .
and you can take a look at these on the internet .
the variou port .
okai ?
now , onc we have a connect to the web server , or to the mail server , or to the post offic server , we have to know how to talk to it .
and that's what's call an applic protocol .
and that is , the rule for convers , the rule for convers .
so , tcp give us thi reliabl connect , we now can connect to the server that we desir to connect to by us port , and the question is , what ar we go to to sai across that connect , and what we sai across that connect , who talk first , what do you send , what come back , depend on the kind of server that you ar talk to .
we're go to plai mostli with the world wide , the world wide web .
oop , i click the wrong button there , the world wide web server , becaus it's the simplest , and it's the most obviou as to what's go on .
so the world wide web client , and the world wide , which ar otherwis known as browser , the world wide web client , and the world wide web server commun us a protocol call http .
as a matter of fact , if you look at the top of your url it's http , someth , dot dot dot , right ?
and , and so basic , there is a specif for how thi is done .
so when thei wrote down , i'm go to write the first web browser and the first web server , thei also wrote a document about how that piec of softwar would talk to thi other piec of softwar .
and the , and it's a veri simpl concept , http ha a protocol where you make a connect to the , from the client to the server .
the client request a document .
the server feed out the document .
and then the connect is drop .
okai ?
so it's veri simpl .
we'll actual simul thi .
thi is call the http request respons cycl .
okai ?
and so the wai it work , is , you're in a browser , and you click on a link , the browser's an applic , it's the client , run on your comput , so , so thi is kind of your comput down here , okai .
you click on a link , then the browser maker a connect to the web server and send a request to , for the document .
the web server look up , doe whatev , and send the document back , and then the document is displai on your screen .
okai .
so , let me show you sort of how thi work with a web browser .
so here is a canon webpag .
so here's a browser , here's the url that i went and got , you can get thi url as well , you can even look at the sourc .
so if you look at thi sourc there is my html .
but on of the thing that's in thi sourc is a link .
and if i hover over top of thi link , whoop , i gotta go like that to hover over the top of the link .
you can see , at the bottom of my screen , you can see it's go to tell you that we're about to go retriev page2 . htm .
now , thi browser is run on my laptop .
it is a web client .
it is an http client .
and i'm about to click on thi piec of softwar run on my comput .
and then it is go to make a connect out the back of it , retriev a document and then show me the other document .
so it's go to happen real fast .
i'll click on second page .
it request , and got a document back , and show me the document .
so that's the content of the second document , okai .
and so that is the request respons cycl that is trigger , that is trigger by me make a click somewher in my browser .
the , the browser see the click , it open a connect , thi is sort of the internet over here , it make a connect , request a document , the document come back , and then the new document is displai .
the request , respons cycl .
click , request , respons , displai .
click , request , respons , displai .
so let's take a look in some more detail as to what's realli go on here .
so , the command that is be sent up to the server , across thi connect , and rememb that thi part here's the internet right there .
the command is a get command .
and the document is base on the url i click on that the browser know about , and sai get page2 . html , and what come back is html .
and that is a markup languag that describ how thi doc , how thi page is suppos to be shown .
so let's sai that we want some more detail on how thi realli work , right .
let's sai that we want to write a web browser and we want to be a good citizen and we want to talk properli to the the web .
well , we would go back to the ietf , the internet engin task forc , and we would go grab the document that sai hei , if you want to write a browser , thi is what you do .
thi is what you do if you want to write a browser .
you can go grab rfc <num> .
which is the hypertext transport protocol version <num> .
now i'm sure there's more complex superseed version of it , but if we read it , and read it , and read it , we spent a lot of time , we'd get down to section <num> . <num> , and it would sai , if you ar make a request for a document thi is the request line .
it ha the letter g e t , follow by a space , follow by the url you're look for , follow by a space , follow by the version , okai ?
so that is the rule .
that is what you're suppos to send down thi connect .
it'll give us some more exampl on page <num> .
and so , we could read all thi , and we could write a web browser .
but what we're go to do , is we're go to fake be a web browser , we're go to cheat .
we're go to hack it .
we're go to pretend to be a web browser .
we're go to send the command , to the web browser .
now , i'm go to do thi on a macintosh , you could also do it on window , if you instal telnet client , okai .
so the kei is you instal a telnet client .
now most peopl would sai that relnet is insecur , and it is , it's a veri old protocol , becaus all it doe is it open a tcp connect to a host on a port that i specifi , and whatev i type goe across that tcp connect .
so it's a great wai to hack , especi older , less secur protocol .
so becaus http is gener a public protocol , it's not realli highli protect , so it's much simpler to hack it .
hack secur protocol is , requir write softwar rather than type command .
so if you're on window you have to instal telnet , t e l n e t .
so what i'm go to show you in a second , is i'm go to show you hack .
and i'm go to telnet to www . drchuck . com , port <num> .
what i'm sai is , connect me to thi server on the internet , and connect me to port <num> , becaus i want to do http connect , and then i will send on command .
i'm go to send that command .
and then the web server will give me back the page .
okai ?
it's probabl easier for me to just do it .
so let's take a look .
i am go to simul what the web browser doe when it's request , well actual , we'll go to the second page , and when it's request the first page it's do a get for page on .
okai .
so that's what we're go to do , except now we're go to do it in a termin .
so i'm go to type telnet , whoop , i alwai type thi wrong .
t e l n e t , www . dr chuck . com , port <num> .
okai .
so now i am connect to the webserv on dr chuck . com .
i could , for exampl , type yo , what is up , dude .
now that would suggest i have not read the protocol specif for the http protocol , so i do not know that i'm suppos to type the word get here .
i'm go to type yo , what is up dude .
and it goe , you ar not from my countri .
you ar not from my planet .
i do not know what you said .
of cours that , the wai web server ar sai thi , is thei're sai bad request .
your browser sent a request that thi server could not understand .
it is , the request header is miss a colon separ .
you do not compli , go awai .
but we did talk .
it just told us that whatev we were sai is gibberish to it .
and that's okai , becaus we have read the document , and so we can do it .
so let's do it .
so now i'm go to do is telnet to dr chuck . com on port <num> .
go to dr chuck , hook onto port <num> , so we can talk to the web server , and now i am go to behav .
i read the specif .
i'm go to type g e t , get , space , on space , http www . dr chuck . com page1 . htm , http , space <num> , dot , i think there's a slash there , whoop , oh no , no , no , get it right , get it right .
slash <num> dot <num> .
i think i got that right .
so that is what i'm suppos to type if i am a real browser .
now i have to actual type anoth new line , so i'll type anoth new line , and now whoa , oh , i gave it the wrong page .
look , look , look , look , look .
i want to do , i told it to get page . htm .
so let's do it again , do it again .
i'm not veri good at thi , my browser is much better at it .
so i type get http www . dr chuck . com page1 . htm , space , http <num> .
i believ that's it .
let's hope i got it right thi time .
and then anoth enter , and then anoth enter .
yai , i got it .
so thi time , i'd type , you know , i'd type thi , then i'd type thi .
now it gave me some header inform , it's sai thing like <num> okai mean i like you what the time is , when thi file wa last modifi .
it's an html file and it actual show me the html text .
and so we have just hack , a web server .
you can do thi to like facebook . com , and do a get .
if you get the right thing , it will give you stuff .
you can go to variou site , you can fake browser .
now , you're onli go to get so far , becaus at some point , these server know that you're not a browser , becaus a browser actual send a littl more stuff than what we just sent .
but , you get the pictur .
okai .
it's a protocol where we have rule , and if we type the right thing , if we type the right thing , we know what the specif tell us to type , we ar reward , with the inform on that server .
if we compli with the server's request , we can talk to it .
if we know how to talk , if we know what port to talk to , and we know what protocol to talk to that port we can write a client that meet the need of that server and extract the data .
so thi is , i like , i like command line , i like sort of old school user interfac , and thi is a scene from on of the matrix movi , that you mai recal .
i can't put it in here becaus of copyright re , requir .
i might have a url , or mayb student will come up with a url .
you can probabl search for the triniti hack scene .
peopl put it up and then it get taken down and someon els put it up .
so let me tell you a littl stori about thi scene .
thi scene wa actual written by a former student of mine , who work on all three matrix movi do it work on the movi .
and thei were in australia shoot the , the , the three , the second set of three movi , and he saw thi scene .
and the scene wa suppos to us a minor report style wai for her to hack into the , the power grid , and shut it down .
and he said , that's not the wai that you hack into comput .
all good hacker us a text base interfa , interfac , some old thing .
and that's a throwback interfac .
so the wachowski brother told him rewrit it .
so he actual download the exact hack softwar , it call nmap , which stand for network map .
it is map the port .
it , probe the port and see what on the port .
see what version of softwar's on each of the port .
figur out what the , what the weak of those thing ar , and even automat exploit the weak .
so he wrote a script that download thi thing that automat break into comput .
by the wai , the good gui us thi and the bad gui us thi same thing .
the good gui us it to test all of the comput on their campu and make sure that thei ar okai , and the bad gui us to break into the on that the good gui aren't smart enough to fix .
and so , thi wa kind of cool , and , and the peopl who wrote nmap were realli quit amaz when thei saw the movi .
thei even figur out what version it wa and thing like that .
and so it actual trigger a seri of follow on scene that us actual real hack softwar nmap hack softwar .
so , i don't know if we've got a url for thi or not , whatev url i come up with even the on in the n , nmap peopl come up with , whatev it is goe awai becaus of copyright , but you can find it , becaus someon alwai put it back up .
so , okai , so , mayb you can go and mayb the nmap peopl will know it or mayb you just have to search for the triniti hack scene .
so you can us telnet and you can hack , legitim hack a web server .
so , basic the applic layer is a rich place , and there's lot of thing that happen in the applic layer .
we have thi pipe abstract , it's kind of like a , a string with two tin can , and we can shout into on end and stuff come out the other end .
later we'll talk about ad secur to that , and we us these port number to allow to , multipl differ server , or servic on a comput that we can connect to .
so we kind of now reach the top of the architectur of the internet .
we've talk about ethernet , the link layer , the fiber and all the divers wireless , all of the wonder thing that happen there .
the internet work layer , which is thi kind of geograph hop thing that's unreli .
the tcp layer that retransmit automat if necessari .
and then the applic layer , which is what we do with all thi network .
it's realli impress that thi came out of research work from the 1970s .
and that most of the architectur that were realli present , most of the idea of the architectur from the 70s ar realli still present with us todai .
as the nsf net came out , these architectur evolv a littl bit , the last few tweak , and there have been tweak go on ever sinc , but the , realli the last few critic tweak happen in the late 1980s .
the the number of web host or the number of host on the internet goe from six in <num> , to sort of a billion in <num> .
and , and it's pretti impress that roughli the same architectur that wa design with six comput is still mostli function in a , in mostli the same pattern , all these year later with bill , billion of comput .
and so , if you start look at the network now , it almost look like a live creatur with vein , and nerv , and it sort of almost puls , and you see thing like , you can search on the internet for how the internet react to hurrican sandi , when , like , new york citi wa just like shut off for three dai .
the internet just kind of like , rout around it .
yeah a lot of stuff went across the atlant ocean from new york citi and yeah , it found differ path , and you know , yeah , new york wa down , but the rest of it wasn't , in mani wai pretti amaz .
and , we certainli see other situat where govern try to shut the internet down by go into the server room , and shut off , you know , what thei think is the onli connect , but then more connect pop up .
and so it's , it's veri much a almost a live thing .
it's billion of comput , and hundr of thousand of router .
and , and , it's , hundr of million of simultan connect go on all the time .
includ the on we're do right now , probabl .
and , it's trillion of byte a dai to move across , and it's , it's , it's not perfect , but it kind of work .
you can think of it as like , the largest , engi collect , engin thing that we've done togeth as human , we built thi .
it's all on thing , and yet it's so mani differ piec .
and we just kind of keep , glu them togeth , and glu more thing on more thing .
and it wa , it realli wa creat almost like life itself .
it's veri organ .
it's design to heal itself , rather than be perfect .
becaus thing that try to be perfect ar fragil , and thei break too easili .
but thing that ar design to heal , can heal .
and you're never perfectli correct .
you're never all the wai up , and you're never all the wai down .
and so that's what's interest about the internet .
oop , went the wrong wai .
and so , we kind of come to the end of thi , where we start out with like machin , and pullei and gear , and sprai oil at , and , type a few charact on a keyboard , to thi thing , where we , sort of just take for grant that we can watch basketbal anywher on the planet , just with a coupl of swipe of the , of the kei .
and in a sens , it's just that same human urg to commun at a distanc .
and so the last thing that i'll close with is anoth video from van jacobsom .
now , thi is about a techniqu he call content centric network .
and not everybodi agre with van jacobson on thi .
you can ask peopl and thei'll sai it's a good idea .
that , i don't present thi as the futur , i present thi more to get you think that there is a futur that might be differ than the present .
that what i just told you , that seem , seem like oh , it's perfect .
and the , and when , and vint cerf in <num> , he figur thi out .
and , , it wa the perfect thing , right ?
and , the answer is , it might not be .
and we , as engin , and we as the peopl of the internet , we must understand that , in <num> year , it might be all differ .
becaus , <num> year ago , it wa all differ .
and <num> year befor that , it wa differ yet again .
and so noth's perfect .
and so we should never be complac , and assum that what we have is trivial or perfect , or even the right answer .
so we should continu to question .
and so it's realli interest to hear , again , from jan jacobson , who sort of did thi great innov in <num> that save us , and yet he think that these ar issu , and thei're issu that need to be save again .
and i think , in mani wai , he's right .
the question is not so much whether he's right or wrong , the question is , what will the ultim solut that we pick be produc .
so , so , take a look at van jacobson , and what he can , what he is think about as term of the issu in the futur , that we're go to need to solv , when he talk about content center network .
we're have massiv scale problem todai .
try to join togeth the veri inform centric web model , with the veri host centric tcp ip model .
if you look at how the net ha evolv it , it start as a telephon system for comput .
the , the model wa , comput want to exchang data peopl want their comput to be abl to exchang data .
the model we had for commun for <num> year , year had been the phone system .
so he said , okai , thei want to have a convers , becaus commun is convers over long distanc .
and so , let's make protocol and infrastructur that allow comput to have a convers .
first cut of that , thing like the arpanet .
network that would handl differ bandwidth thei didn't requir all of the global clock distribut of a tel , telephoni network .
instead , thei substitut buffer and on crucial thing come out of paul baran wa unlik the phone system where commun wa all about build a wire .
you know , hop by hop , link by link between the two endpoint , basic instruct the switch system on how to make on long wire .
paul said , don't do it that wai .
just identifi the endpoint and let the network take care of get the data there .
okai , so , thi is great .
it is , just complet chang the world .
but the bulk of that chang wa , didn't happen in the 70s , and 80s , and earli 90s when the net wa first grow out .
it happen in the late 90s and the 2000s , when the web took off , and it had noth whatsoev to do with comput have a convers model .
it had to do with peopl creat and consum content and it , the web sort of show us for the first time what happen if we leav behind thi 18th centuri model of telephoni and instead we start to look at , not the wire , but the inform in the wire .
and , and the web gave us thi structur where you could name inform , not the process of get it but the inform itself .
sai i want thi webpag , i want thi youtub video , i want thi amazon person page and you will get back a set of content , somet hing that repres that name that you gave .
what if we recast the wai we think about the low level infrastructur ?
not , don't sai the web is an overlai on top of tcp ip , which is the wai it's implement todai .
but sai , if <num> plu of what we do is web like stuff , is there a model that let us do the same stuff at the packet level ?
could we make it the basi of our commun , rather than sai it ha to be an overlai ?
see , you can creat video , you can put them on your own websit and you have to prai that thei never get popular .
becaus , if thei get popular , your isp is almost immedi go to shut you down , becaus your link will be complet satur .
you know , what we us to call a slashdot effect .
that's intrins to the convers model , right ?
we don't do broadcast tv by make phone call to a tv station .
if you want to put media distribut over tcp ip you have to figur out some wai to lie to the network so that youtub . com , which tcp think is a locat is identifi by an ip address .
you gotta make sure that it's not a locat , that it's spread across the entir planet .
so while we spent most of the 90s grow the internet and have the protocol work for us .
now , if you look at youtub , googl , amazon , facebook , twitter , all of these veri heavili us servic .
that manifest themselv to the net as an ip address , look like a singl locat .
but if thei're a singl locat with hundr of million of user , the traffic in a convers model alwai scale like the popular .
it scale like the number of consum and you're do twitter updat or a video that want to be seen by million .
you , you can't deploi it in a convers model and we spend all our time fool the net .
inform that's sort of qualit the same as all name or ident inform , but it's spread randomli across the whole damn packet .
so we've got sourc and destin address that can eventu , we think of as layer three , so it's up at front to be us as by the network layer .
then we've got port that ar a layer four , and so , thei're a littl deeper in , becaus thei're suppos to be us by the end node to a particular applic .
then , insid of that , we've got sequenc number which ar be us when you get to the applic for it to reassembl the larger unit .
and , insid of that , we've got url , which ar us by a entir level part of the applic than on transport part of the applic .
you've just got all of thi inform .
it's all fundament name inform .
it's , what do these bit mean ?
well , if you pull togeth the sourc address , the port , the sequenc number , the url , the all give you context for the inform , thei're all the name of the inform .
what if , rather than have , you know , amazon load balanc , which is try to figur out , all right , which of my <num> , <num> unus machin is current handl thi custom request .
so i , i have to look at the address , i have to look at the port , i have to look at the sequenc number , i have to look at the cooki , in order to dispatch thi sucker , to where it's go .
what if i sai packet have a name on the front and all of that inform just get collect to the name .
and at ani point in the network you look at as much of that name as you need to look at to do your job .
if just the front part will work , becaus all you're do is gross level stir , just look at the front .
if you need to look at more of it , it , we don't have layer , what we have is a center structur inform .
there's , we know that we're go to be look at differ part of it for differ reason , so we put topolog sensit inform like amazon . com , stick that at the front caus you can us that to make scalabl write tabl .
but when it get there , we don't want to sai there's a transport protocol and , you know , variou layer .
just sai , yeah , there's a job that i'm do when i get to amazon . com and it requir me to look at thi much .
if you don't care where you're get the data , if all that matter to you is what the data is , not where it come from .
then all of thi memori that ha to be in the network as buffer in order to , to manag the multiplexion of the network .
suddenli that becom a viabl sourc of data .
you know , the wai it happen todai is you're watch a youtub video , that mean the bit leav some server at youtub .
thei go into the downstream gatewai's memori .
thei get pull out of that memori , put into a wire , go into the next hop gatewai's memori , and thei're go , bounc memori to memori through all these interconnect wire till thei get to you .
if the two of us ar watch the same video , then , the immedi upstream gatewai get on copi of the video go to me , and anoth separ copi of exactli the same video go to you .
thei both went through that gatewai's memori .
it , becaus of thi convers extract we're put on becaus the gatewai doesn't know that we're consum the same content , what it see is two differ convers .
it can't look in it memori , and sai , oh , i've got that , i can give it to you .
you have to fetch a new copi and you have to fetch it all the wai from youtub .
i mean , that's what give us the abysm scale is the , the , have the load scale like the popular is strictli a function of , the data can onli origin at on place .
and if you just care about the data , just start go toward that place .
and as soon as you run into the data , okai , now you've got a copi , you're done with your distribut .
hello and welcom to our secur lectur .
i'm charl sever and i encourag you to grab the power point and remix them and us them in your own cours .
us the video , us everyth in your own cours .
you don't have to teach thi whole cours it's quit a bit .
so so let's start out by meet some nice peopl .
these peopl ar alic and bob and thei simpli want to commun some inform you know , left to their own devic .
and thei don't want the rest of the world to know about what thei're commun and so thei want to encrypt it in some wai .
now , in the cryptograph , cryptographi world , thei all i'll call these two peopl the good peopl alic and bob .
and thei simpli ar a and b , kind of , veri computerask variabl name , a and b , alic and bob .
and then there ar some bad gui .
right , there's the bad gui and , and often thei ar call c , like , carol or carlo or charli , or , or someth like that .
and thei're even chuck .
even chuck is a bad gui .
or thei ar ev , ev for the eavesdropp .
and the idea is somewher in the middl here .
somewher in the middl , you have some person with bad intent .
here we have triniti from the matrix , and she look as , she look as bad as you can look .
right ?
so alic and bob seem to be real happi peopl .
thei're just try to get you know , get thing done and send some inform without be bother .
and then , and then triniti's there eavesdrop .
and , but there's other thing .
you can eavesdrop , you can sort of redirect the messag and chang it .
there's all kind of thing that the bad gui in the middl is go to do .
and so alic and bob ar far awai from each other and thei have to commun secur .
and thei , it's a , it's a , it's liter gantlet of problem that thei have to face .
and variou peopl with bad intent , with bad purpos , sometim just want to see what's go on versu want to chang what's go on .
versu complet redirect commun .
so alic , bob and then a whole seri of bad gui with variou bad gui and girl with variou evil intent .
so it's alwai fun to talk about secur becaus the question is , you , and what doe secur mean to you and what doe it mean to me .
and whenev you're think about secur , you gotta figur out sort of , who is out to get you and why ar thei out to get you .
and for us averag peopl , we ar so bore that liter pretti much the onli thing the world want from us .
is thei want to steal our , you know , thei want to steal our credit card number .
and and then bui stuff with them for just a coupl of dai befor the credit card compani shut them down .
now , if you're run for public offic there's a whole bunch of your oppon that ar go to want to break into your email .
and and , and that happen right .
those kind of shenanigan happen .
so , if you're interest , or influenti , or run for public offic , you have a differ problem than if you're just kind of a mere civilian like us .
and so , at the end of the dai , you can worri about secur , and you can kind of wear tinfoil cloth or someth .
but at the end of the dai , you and i ar so bore that nobodi realli care .
but it's good to assum that thei're out to get you , right .
that , that , you try to be as secur as you can , and be awar of your environ and be as secur as you possibl can with your inform .
and , with your commun .
so who is out to get us ?
well , the govern .
so now we're go to actual turn the tabl , right ?
in the veri first lectur , we were the good gui .
the good gui were the on that were try to break the cryptographi .
and the bad gui were the on that were try to hide their , their , their bad messag .
and the govern were the good gui .
and bletchlei park .
and thei , thei broke the code , and thei , thei save western civil .
yai , good gui !
well , now , we're the german .
we're the japanes .
we're tryin' to commun .
peopl're watchin' .
and guess what ?
it's the same peopl .
the govern , the govern's most like interest in what you're do .
again most of us ar so bore the govern realli doesn't care at all .
but the govern probabl ha the best secur break equip on the planet right now , better than the crimin .
and so , it's , it's just an interest flip of the model , right ?
where now , we ar try to commun , and the govern with all of their bomba and littl rotat devic .
sit in some warehous somewher that we don't know is take our privat commun and thei're try to break them .
and we're in a war try to make our commun more and more secur while the govern sai woah , we have to invent , like , electron comput .
becaus we have to have bigger comput , becaus the peopl at , us good gui who ar do the encrypt .
we're try to come up with more and more clever wai to encrypt , and the govern ha to keep come up with wai to decrypt .
and you could cast thi as crimin versu good folk .
you could cast it as govern versu govern .
at the end of the dai , it's an arm race , and it's , it's rather symmetr as to which side you're on , right ?
i mean , we start out with the peopl try to hide the inform were the bad gui , and now we're the good gui .
why ar we the good gui ?
becaus it's us .
as soon as we decid it's us , we're the good gui .
here's a littl , here's a littl pictur i took a coupl of year ago when i visit bletchlei park thi actual lead to the video a year and a half later .
and in thi my friend who work at the open univers , who also doe massiv open onlin cours that's joel he's now retir .
he's the tour guid there and , and a dear and person friend .
and and anoth of my dear and person friend whose face you can't see is right here .
hi name is chuck .
he current work at shazam in london .
and , and he and i just got awai for the weekend and went up to bletchlei park and took a tour .
now , just , just a littl interest connect i sort of mention in a previou lectur about the matrix .
so you notic that chuck here is wear a jacket from the movi matrix .
i mention he wa the on that wrote the hack scene with triniti .
so here we all ar togeth .
we're at bletchlei park .
alan ture had an offic in thi , thi is on of alan ture's offic at bletchlei park .
here's joel , open , open teach and learn .
here is chuck work on the matrix .
and here's triniti , right ?
except that now triniti's our enemi instead of our friend , although in the movi , we were root for triniti .
but , we're the on's try to protect what we're do from the triniti's of the world .
we're the good gui now , and triniti is the bad girl .
okai she's the bad ladi try to break into our stuff and we're protect ourselv against triniti .
so tabl have complet turn okai .
so befor we go too far you know you'll run into your organ with lot of peopl who ar like secur expert .
and i find secur expert gener veri annoi .
becaus thei , like , think thei're smarter than thei ar .
secur expert have thi theori that more secur is better .
and the realiti is , is that perfect serv , secur is unachiev .
if you want perfect secur , like , lock yourself in a room and whisper to somebodi .
oh wait a sec .
and then the guard will come in and hear you , or whatev .
there'll be a microphon .
so the notion that perfect secur and that you , your compani can spend more and more and more monei of it budget on secur .
just becaus the secur expert think that you should is realli kind of a fallaci .
secur is a cost benefit analysi , and so , if you think of credit card compani , you know , what's the secur of thi number .
i won't show you the number .
but , what if i lose thi number ?
what's the consequ ?
i've had mani credit card that got compromis .
i don't exactli know how .
thei've got softwar insid of the comput compani that captur .
like when all of a sudden i live in michigan and a bunch of charg at the new jersei walmart ar show up and i never got on a plane .
i'm amaz at how rare it is that your ident actual get lost perman .
so i'm realli impress with how the bank ar capabl .
and so thei have thi number that make it real conveni for us to bui .
we can type it into a web form , we can do all these thing , and on in zillion time it get compromis .
and , so , thei lose <num> buck .
but billion of dollar of commerc happen .
so , there is alwai a secur versu cost .
if basic for me to us thi credit card , i'd had to have sort of a , a person guard from the , the compani with me all the time .
it'd be veri expens for me to bui stuff on amazon and have it ship to my hous .
and so , understand that when you start get into convers with secur , you , profession .
sometim thei're the kind that understand that secur is natur imperfect .
and everyth is a cost benefit analysi , rather than more secur is alwai better .
so more is not alwai better .
that's just my littl speech about secur in case you get stuck in a convers with some pompou secur expert .
thei're mostli pompou .
so databas administr ar pompou too .
but i hop you're not , not , you're not a databas administr secur expert .
but um , the best secur expert that i've ever met ar the on that understand thi .
and thei can , thei can , thei can character everi issu in term of a cost benefit analysi .
and then you'd know , you'd know , you'd know , know that you've on into on that is realli smart and bright .
so , the terminolog that we're go to us for the rest of the segment of thi lectur , we're go to be solv two basic problem .
on is confidenti , confidenti .
and confidenti is the , the , the leakag of inform .
so , if i wa to want to send thi credit card number to on of you watch right now without the rest of you see my credit card number .
the , the mere reveal of that inform is the problem .
so i want to come up with a wai to send it to you .
so that no on except the on person that i want to see it get it .
that's confidenti .
the other problem is on of integr .
and that is , in a sens , know that a , that the inform that you got come from who you thought it came from .
and b that it wasn't modifi on the wai .
so there ar thing like digit signatur that sort of fall into thi categori and other mechan that we'll talk about .
so these , these two thing of confidenti and integr , will run through the rest of the lectur that we have on secur .
okai .
so , come up next , we're just , we're go to start dive right in .
so the first topic that we're go to talk about is confidenti , encrypt and decrypt .
and of cours , thi wa what wa go on at bletchlei park in world war ii .
so the terminolog that we'll us in thi is plain text and ciphertext .
and the idea is whether it's text or other inform , there is the inform that we actual want to transmit whether it's a credit card number or someth els .
and then there is the encrypt version of that , and we'll call that the ciphertext .
and the ciphertext is what we assum is reveal to intermedi parti .
whether thei ar stop it , and chang it , or thei're just watch it .
it's still , the ciphertext is the stuff that we ar just by the natur of the commun we ar forc to reveal it , or there is a probabl that we'll reveal it .
so it is hopefulli unintellig , and hopefulli it is difficult to go from the ciphertext to the plain text , except if you ar the actual intend recipi , or imposs .
encrypt is the act of go from plain text to ciphertext .
and return the ciphertext back to the plain text is decrypt .
and there is a kei .
some kind of a kei , which is realli sort of a , some data plu a techniqu plu an algorithm that goe back and forth .
so there ar two kind of system that we'll talk about in the upcom lectur .
on is call a secret kei , and the other is call a public kei .
the secret kei is the on we talk about at the veri begin .
the secret kei wa realli us , from the roman and caesar , on up to world war ii .
the public kei encrypt realli is much more recent , in the <num>'s and the <num>'s and we'll talk about that later on .
so the first thing we'll talk about is the share secret , or secret kei .
the secret kei is also call symmetr kei , which mean that both parti have to be in possess of the same inform .
you basic us the same kei materi to encrypt as you do to decrypt .
the the public kei is asymmetr , which mean you us on kei to encrypt , and a differ kei to decrypt .
we'll get to that later .
and so the problem that secret kei ha , that led to the need to invent a public kei , is the fact that you need to at some point have a secur commun .
whether you're sit in a room togeth and you hand each other code book , whatev it is , you have to have a wai to distribut the kei in a secur manner .
the public kei , which we'll get to later , ha a wai of distribut the kei in a in a us insecur medium .
and you'll see when we get there it's like , so obviou and clever , you wonder why nobodi thought of it until you know veri recent .
so , here is the path .
right ?
you had some plain text , you you have sai the word candi that you want to send .
you're go to encrypt with a shift , where you , you just go to the next later letter , so c becom d , a becom b , n becom o , and so now we have the d , b , o , e , z .
that is the plain text come from alic .
alic send it in the danger , danger , nasti wide world of you know router or radio with with mors code , or whatev it is we're go to do , whatev it is were go to do , where the messag might be intercept by somebodi in ev .
now there not intercept the plain text , we assum that thi part here is secur , and thi part here is secur .
it's onli danger while it's in flight , somehow , in the middl .
and we onli worri about ev get it .
and then , then at some point , becaus bob ha the kei which is subtract on , bob goe from each of the ciphertext letter back to the plain text letter .
and voila , out come the plain text again .
and so , ev's problem is i'm , ev is onli hand , well no , sorri , sorri .
ev's not , ev's not given the kei , ev is given the ciphertext and noth els , and she must , like bletchlei park , must deriv whatev it is .
deriv the kei , deriv the plain text , whatev it is .
that's ev's goal .
the caesar cipher , is the kind of the oldest , most wide us form of encrypt .
it us the notion of a shift .
the shift number is just as i've shown .
a shift of <num> , mean a becom b and x becom y , and l becom l becom m .
so , you just take and move a fix posit down the al .
thi wa us for a surprisingli long period of time .
and there ar some pretti good youtub video that kind of you can , if you want to see more about sort of the , the how thi work and the math behind it , and how you break it .
it's , it's pretti fascin .
i mean , final it's just , it's complet breakabl .
and we'll actual go to break it here pretti soon , ourselv .
so the caesar cipher .
so i want to paus and let you see a youtub video , here from a , belov movi call the christma stori , where littl ralphi get hi littl orphan anni secret decod ring .
and littl orphan anni send a decod messag , an encod ciphertext , through the radio .
everyon can hear it , but onli those peopl who have the secret decod ring can decrypt the messag .
and you can see that it is a , a caesar cipher it ha a shift .
you'll note that the first thing thei sai befor thei sai the encrypt messag in the radio is that you're suppos to connect b and <num> , or someth like that , and then you rotat the two wheel of the secret decod ring to the b13 .
and then you can read across the secret decod ring and decrypt the messag as it's decrypt , and then he slowli decrypt it .
and then , of cours , there is the delight moment where he realiz the crash , crass commerci that that , that ar the complet lack of interest mean in , in all of thi .
so , without further ado , let's take a look at ralphi and a christma stori .
we'll be right back .
so , i hope you like that , hope you like that .
and so off we go .
we're go to have a secret decod ring for thi class .
i would love to be abl to send you all , oop , come down .
i would love to be abl to send you all a littl mechan wheel to move the stuff back and forth .
but instead i us the internet , and i'm go to send you a pdf , and at thi point you might want to paus the video , and grab thi pdf .
okai ?
grab it .
secretdecod . pdf .
dr chuck . com secretdecod . pdf .
and download it , and you might even want to print it out .
becaus we're go to , at thi moment do a code break exercis .
okai ?
and so let me tell you how to us thi secret decod ring .
so the top line here is the plain text .
and if you recal caesar shift ha a , a , a shift number .
and so to encod , you go from plain text , let's sai i want to do chuck .
all right , i want to encod chuck .
and i want to encod it with a shift of two .
so a shift of two mean we select thi .
and we basic go c is our plain text , and then down we go e .
so then we go e is our first letter .
and then h is our second letter , so we go down and that mean h becom j .
yeah , and so u becom w .
so now i'm do my encrypt .
so e h w is the encrypt ciphertext .
so , let me clear that , and write back down here .
oop , mayb , a differ , differ color .
e h w .
now to decrypt , rememb , you need to know the shift .
so , we somehow commun separ and secur , what the shift wa .
and so , now we want , we have receiv our ciphertext .
we receiv our ciphertext , and we need to decrypt it .
ok ?
and so we know that the shift is two , so we go to e , we go in the shift row , and then we go up to the plain text row , and that sai the first on is c .
then we go to h , we go to the the encod text row .
and we go back up to the plain text row , and so that's an h .
oh , wait , wait , wait .
it's not h w .
what am i think ?
thi should have been a j .
i got thi wrong .
sorri about that .
so , that's wrong .
here's a j , move up to the h .
then the w , let's see if i got w right , yeah .
so w is my last ciphertext , and it goe up to the u .
ok ?
dot , dot , dot , dot , dot .
so you see the pattern that our in encod is plain text down to shift posit , and our decod is shift posit back up to plain text .
ok ?
and , so thi is our secret decod ring .
so go grab it and download it , so that you can particip in the next exercis .
so now you ar go to be cast in the role of bletchlei park .
ok , readi ?
so here is your first code break exercis .
ok .
so here we go .
so you're bletchlei park , right ?
you just intercept thi ciphertext .
u b u p b t u .
whoa , it's encrypt .
it's clearli meaningless .
so , how ar you go to be decrypt it ?
well , the techniqu is , take a look , and decrypt it with all the shift number .
right ?
you're go to do thi by hand , you're go to be a comput yourself .
you're go to do all the shift encrypt , and just like in bletchlei park , you know you've succeed when the plain text make sens .
right when the plain text make no sens , then you haven't succeed .
but in some point the plain text make sens .
so what you need to do is take your secret decod ring , and you need to decrypt it with a shift of on , a shift of two , a shift of three , a shift of four , and if you have your famili member around , you can put out multipl copi of the secret decod ring , and you can assign differ shift to differ famili member .
so you have to decrypt thi <num> time .
have to decrypt it <num> time .
and then you'd look at all the <num> decrypt , and then you decid which on make the most sens .
ok ?
so , don't peek , decrypt thi on .
i made it easi on you .
ok ?
so , we'll stop now , and give you a littl bit of time to decrypt thi on .
don't start paus until you actual have decrypt it .
ok ?
ok , thi is your last chanc for spoiler alert .
so here we ar .
we're about to decrypt it .
here we go .
i did make it easi on you .
it wa a shift of on .
if wa a shift of on .
if you start at <num> , you're kind of foolish .
right ?
so you start at on , and you go , like , oh great , so now , i'm go to decrypt it .
i'll start at on .
here's the plain text , thi should be pp .
that's the plain text .
so i'll start with u .
if it's on , then i go up , and it's t .
and the second on is p , so i go up , and it's o , t o .
keep go , sai toast .
so you sai to yourself , well that's a word , so it must be it .
well hello .
what ar you do here ?
do you want to sai hi to my student ?
meow .
thi is the cat .
thi is eddi cat .
he like to come up into my offic , and look .
so do you know anyth about encrypt ?
hm ?
do you know anyth about encrypt ?
so you us a shift of on , and then you go from the encrypt text up to the plain text .
meow .
ok .
you ar clearli not interest in my lectur .
so that wa my cat .
hello , sorri , i can't open a window for you , becaus i'm do a lectur .
ok .
so , , , you're go like just keep bug that window , until i kick you out of the room aren't you ?
so , you're go to have to get kick out .
out you go .
he's wa go to keep hit , keep hit that , until i open it for him .
ok .
so , so now you've broken thi code .
and again , just like in bletchlei park , you onli knew that you broke it , if it made sens .
and and so , luckili the , in bletchlei park the messag were longer , and thei were often look for canon thing that thei would sai everydai .
so here we go .
and and so that's the break of that on .
and it turn out the shift of on wa the thing that we did .
so here is your second task .
thi on's longer , and it not a shift of on .
and so , so thi is a situat where you would realli have to get your whole famili go on thi .
right ?
where you gotta do <num> decrypt of thi , and it will , you know , make sens to you .
you decrypt it <num> time .
right ?
and so , thi on's go to be harder .
i guess you could just , just decrypt on word , but it's just not a shift of on .
but now we're go to do anoth trick .
ok ?
so , i don't want you to try all <num> .
becaus there's , there's a mistak in thi .
there is a leakag of inform , that make it so that you can , figur out what the right decrypt to try it might be .
so thi is english .
thi is an english sentenc .
so stare at it for a while , and find a more optim wai to decrypt it , than try all <num> shift pattern .
ok ?
so there is a wai to optim thi .
a wai to cleverli figur out what might be the best shift , or how not to have to decrypt the entir messag <num> time , to reduc the complex .
and that's becaus we've leak some inform here , that should be pretti obviou to you .
ok ?
so , let me give you a moment to break thi on .
it shouldn't take you too long , and you shouldn't have to forc your whole famili to decrypt thi stuff .
ok ?
so here we go .
give you a chanc to decrypt it .
ok , thi is your last chanc befor the reveal .
you readi ?
here we go .
so here is the decrypt text .
the shift turn out to be <num> , it's a shift of <num> .
and the , the weak of thi whole thing is thi , right here .
in the english languag , what is a singl charact , we're not encrypt the space you'll notic , becaus the space come across .
so what is the on singl charact , word , that we have in the english languag , that's capit ?
well , that's usual i .
i need a jet , monei and a jet .
what is the on thing that we do in the english languag that is a singl charact word that is all lowercas , that's lower case typic , unless it's at the begin of a sentenc ?
and that is the letter a .
so basic , you didn't have to decrypt the whole messag .
you see some weird pattern , and you go like thi .
i just have to figur out , and then you go look .
and you look in the row <num> , the plain text .
and you go , like oh .
where's , you go look at the i , becaus you guess at plain text .
and then you just look down until you see the v .
and within second , liter , within second , if you do it right , within second , you know it's a shift of <num> .
and then it's a trivial matter to convert it .
so , you could figur out the shift code within second .
and these , thi wa how bletchlei park figur it out .
and thi is why the known plain text wa so import .
becaus you'd onli have to figur out , like , on letter , if you knew what the plain text wa .
and often thei would know by length , and certain other thing .
oh , thi is , i , i think we can guess what thi plain text wa that thi particular oper would send .
and thi ha to do with the leakag of inform .
it's not the , it's not the mathemat perfect , or lack of perfect in the secur kei .
it's some other leak , it's some other thing .
when thei're go like , oh , wait a sec , i can take advantag of someth .
it wa just equal encrypt as ani other messag , but becaus i gave you thi clue , of an uppercas singl charact word and a lower case singl charact word .
upper , lower case singl charact word and upper case singl charact word , i greatli reduc the amount of effort that you had to put in .
ok ?
now , what's cool about thi , you can go to thi websit , www . rot13 . com , is that , long ago , befor facebook and befor twitter and befor all these thing we had these thing call newsgroup .
and thei were kind of thi weird kind of , collect email list that we had .
and thi wa , like , in the <num>'s .
and it wa even us in store forward network .
where , it wa kind of like facebook in store forward network .
mean that it might take four hour for you to see the statu updat .
but we kind of of would subscrib to these collect thing .
and there wa on that wa basic the dirti joke .
and the thing about dirti joke wa , part of the , part of what we were try to do in thi thing , wa , you weren't suppos to swear .
and there wa softwar that would filter out swear word .
from , if , if you put a swear word in to a dirti joke it would not forward the messag .
and so we had to have a wai to encrypt messag that includ swear word .
so that we could tell dirti joke to each other , for those who want to subscrib to the dirti joke list .
and so thei came up with thi rote <num> .
so we came up with a simpl caesar cipher , with a shift of <num> .
<num> beautifulli , of cours , is <num> divid by <num> .
so it's a symmetr shift .
the shift in by <num> , is the same as shift out .
so , of all the caesar's cipher , a shift of <num> , the encrypt and the decrypt ar exactli the same calcul .
and so we would we would type our dirti joke into , rot13 , and convert it to rot13 , and we would send it in rot13 .
and then we would , if we want to decrypt it .
but what becam funni after a while , wa , we were so us to read rot13 , that it almost becam like a second languag .
right ?
we could , we could read second , we could start read the dirti joke in rot13 , and we would laugh befor we translat them up .
so rot13 , ha an interest sort of histor thing .
and you can go to rot13 and sort of like encrypt , whatev you want to sai .
and i'll probabl have some question to ask you , where you will have to do some rot13 encrypt .
and so that's the end of thi lectur , where we talk about caesar cipher and the variou techniqu , and how caesar cipher work .
and , so we'll be back and talk about cryptograph hash .
so now , we just finish talk about basic confidenti us simpl caesar cipher .
and we'll get better befor , we'll be more sophist than that becaus caesar cipher ar trivial breakabl , obvious .
but now , we're go to switch from confidenti integr .
and we're worri about the , the messag , just to review , that confidenti mean we're hide inform .
we just don't want ev to see it becaus ev see the , the cipher text and we want her to never be abl to extract the plain text .
and as we sai in the last lectur you , if i'm just us a caesar cipher , i mean there wa littl or noth i could do to stop you from do it .
all you do is enough work and you would figur out the shift , and then you'd have everyth .
so it would take you , you know , you write a program , it would take you like a thousandth of a second to check all possibl thing and you're done .
so , that's confidenti .
now , we're go to talk about integr , right ?
and we're go to kind of assum confidenti .
or perhap assum it's not necessari , becaus we're transport it in a lock box .
or in a , in a , whatev .
but let's just sai i had some some , some piec of paper , right ?
and , and you'd want to know if thi piec of paper realli came from me .
well , we would us thing like a signatur , right ?
or we would us a bit of wax where we would push the our seal on it and the seal onli belong to us .
but , but realli did signatur can be forg you know , peopl can steal the wax imprint thing .
i mean , in roman time , thei would wear it around their neck to make sure that no on stole it .
but you could also just creat a fake on so you could seal your letter with the wax but , and you break the wax seal .
but in the comput world , we need someth , right ?
we need a situat where where perhap , i mean , my wife had to get a , a prescript .
and thei sent her an email with a prescript in it .
and thi prescript had on the end of it a digit signatur , wa just a bunch of number .
and you think to yourself wow , you know , here's thi prescript .
and at the end it , just ha a bunch of number , and that's the digit signatur from the doctor .
and how doe that owrk ?
well , it work surprisingli well .
and , and that messag can be forward , she can print it out , she can scan it , she can send it to a pharmacist by email .
as long as that signatur is in there , we can know that the data origin came from the doctor .
and that , that you didn't , no on modifi it to be a differ kind of prescript .
like a differ amount or a differ drug .
and , and the , that would invalid the signatur .
and how exactli is that done ?
well , it's done us a techniqu call cryptograph hash .
and it is a bit of comput softwar , a bit of code , that take a larg amount of text and reduc it down to some small set of number .
a larg block of data to a fix length set of number .
and , and the messag is the big thing .
and the digest is the littl thing .
it sort of , it's like it digest it and sort of give you thi littl tini thing .
now the , the kei is there ar mani differ techniqu to , to map from a messag to the hash or the digest .
and some ar better than other .
and it turn out that there is a long term whole field of mathemat and comput scienc that's dedic to understand what a good cryptograph hash might be .
and so , there ar , there ar these well known cryptograph hash like , you mai have heard of like sha1 or md5 .
each of those is the result of mani mani year of research , of think through what a good cryptograph hash is .
so , for exampl , on cryptograph hash might be i sign it with the number of charact in the messag .
that might be someth that sai like , well , at least thei didn't expand or contract the number of charact in the messag .
but then at some point , that would be such an obviou thing , that you would chang the signatur as well .
so , you want to make it so you can't chang the messag and chang the signatur , becaus then you're sort of properli forg a signatur .
so , the hash function that take the messag to creat the digest , that's someth that is a scientif , mathemat research effort to get the thing right , okai ?
so , here is an exampl of a hash function .
now , thi hash function take as messag input on on side , right ?
it take messag input of and thi is can be short medium or extrem long messag .
and the digest is alwai a fix size .
it's alwai a fix size , right ?
some get longer than other differ messag hash function give differ length , but thei're all fix .
and thei're fix even if the input is megabyt .
it can be megabyt , hundr of megabyt .
and you can still run all of that through the hash function and get a , a digest , okai ?
and so the kei thing is , is to make it so that for ani chang in the input , the digest also chang , okai ?
and so , here we have the red fox jump over the blue dog , right ?
and that's the hash that come out .
and if we chang on letter , you know , the v to u , the hash chang dramat .
so thi suggest thi is a good crypt to graphic hash function , right ?
the length didn't chang .
all the charact ar the same , but on charact chang , and the hash function chang complet , okai ?
and here is anoth flip of charact , right ?
where the , from here to here , let's get a better color here .
which color is that ?
from here to here , the v and the e were just toggl .
and yet , from here to here , the hash function is complet differ .
and so , the hash function need to gener quit differ hash , even with tini perturb of the input .
you're not even allow to chang on charact or add or remov a charact .
and thei know a cryptograph hash function is bad if thei can take two differ messag and send it through and get the same digest .
and so , there's a lot of research to try to as soon as thei come up with on of these thing .
there is a massiv amount of research to try to disprov it , to sai that's a bad on .
and the bad on is if two differ messag come in and thei come out with the same hash function , then that's bad .
becaus it mean that it's provabl that the signatur could us , the same signatur could be us to sign two differ input messag , okai ?
so , thi hash function is a bit of comput code , right ?
and , you know , sha1 , you can go look on wikipedia for sha1 , or md5 .
these ar kind of classic hash function .
and when you read the sha1 or md5 wikipedia , thei'll talk about the fact that it's been decid it's kind of flaw .
and so there's like sha1 , don't us it .
it's not cool .
now you can us it for less critic thing , you just have to be awar of what it's limit ar .
so , sha256 is better than sha1 .
so , what happen is there's continu research and there's continu improv in the mathemat of these hash function .
and thei're get realli good at it becaus we've been us these thing from veri , veri , veri long time .
now , if you want to plai ooh , let me clear thi up .
so i've got a simpl sha1 calcul and you can , you'll be us thi in homework .
the sha1 calcul take as input , some kind of a plain text , and it produc output when you hit the thing .
so , you can put in poni or fluffi , or whatev , or even a whole bunch of stuff and it produc a sha1 , okai ?
so basic , get readi to us thi becaus the next upcom exercis ar go to us thi .
and you can reach sha1 , about sha1 on wikipedia .
and you can find out like ye , scene is less than perfect .
and you should us sha256 or whatev .
but actual , lot of applic in less than critic situat know that , you know , for short and reason length string , you know , the flaw ar mathemat found .
but , thei're not commonli run into .
so , sha1 is not horribl , ha just been proven , sort of less than ideal .
and so for highli sensit inform , you would never us sha1 .
but for simpl thing sha1 , even thing like md5 ar commonli us .
like for hash password , so no hash password .
so , the first applic of thi that we're go to talk about is hash password .
so , you go to a new site , even coursera . org , and it ask you to creat an account .
creat a password .
now , you're not suppos to , but lot of peopl us the same password for lot of system .
and so , if your coursera password were somehow mistakenli reveal , thei might get your linkedin password as well .
and so it is consid veri bad form , veri , veri bad form to actual ever store your password in the coursera databas in plain text .
becaus if the databas wa somehow compromis , then all the bad gui would get all of the plain text password .
and again , mayb us them not just on coursera , becaus you can chang your password on coursera , but us them on linkedin and twitter , and whatev .
and youtub and steal all your account by compromis on account .
becaus you made the mistak that lot of peopl do , of us the same password in a lot of differ place .
becaus we're tire of make up a new password for each place .
so , you're not allow to store the plain text password in the databas .
that's bad practic and we don't want to do that .
so , the best practic is to store a hash version of it .
to run , take the plain text of the password when you're creat your account , run a cryptograph hash on it , store the cryptograph hash .
and then when you log in next , you present to the system your plain text password .
and it run your present password through a cryptograph hash , same cryptograph hash .
and then , compar it with the hash password in the databas .
if thei match you must've present the same plain text both time .
thi is a wai that thei can verifi that you've repres the same plain text again without them ever store the plain text , okai ?
that's why a respect system will never send you your password .
it's i've almost start do thi where i as soon as i go to a new system and i set my password .
i set it to crap , and then i have them send me a messag to reset my password .
and if thei send me the actual plain text of the password , it's like , and i us some crap password .
i've actual got to the point where i'm tire of reus my password .
and my techniqu , i don't know if it's a good on or bad on , is i just put crap in for my password .
and then everi time i us the system , i have it send me a new password , or reset the password .
i mean , i realli think we should just chang it so that when you log in it just come to your email and you click a link .
i don't know , i'm no an expert on thi stuff , you know ?
so , but a respect comput system will never , ever , ever send you your plain text password becau thei don't possess it .
and thei can't deriv it , these cryptograph hash ar not backward .
you can't make them go backward .
let's go back here .
thei're onli a a on wai hash .
becaus thi might be on megabyt of data , and thi might be , well let's see .
four time , thi is <num> charact , <num> charact of data , on megabyt squeez down to forti charact .
there is no wai to go backward , the inform is lost .
the hash , you know , distinct and uniqu , right ?
but you cannot go backward .
it's a on wai oper .
you can go from the frame text to the hash , but you can't go from the hash to the plain text , which is veri differ than encrypt and decrypt , right ?
in decrypt , you had to be abl to pull plain text back out from the encrypt text .
thi is not encrypt .
thi is calcul a special digest that is uniqu connect to the plain text messag .
but you need to run the pain text through the hash again and then compar , okai ?
so , let's do some homework .
well , so , no .
let me , let me , let me , let me first show you the , how thi work in the hash password .
so , so let's sai for exampl , you're log into coursera . org and creat a profil for the first time , and it sai pleas give me your password .
and you choos a singularli bad password as fluffi , okai ?
so fluffi , and you can type , go type fluffi into drchuck . com sha1 . php in anoth window .
if you type fluffi and you encrypt it with sha1 , you get thi as the hash password .
and then , thi is what thei store in coursera's databas .
and so that is , rhei don't know .
thei never store fluffi .
thei , thei would not do that .
that would be so bad if thei did that .
so , thei start thi .
and if i get thi , it's veri difficult revers engin it to fluffi .
it is also even harder if you make your password long .
best password ar like sentenc not just eight charact , but thei're like long sentenc of stuff that's rather difficult to predict .
so , thi is what's store in the coursera databas .
some ugli string which is a cryptograph hash digest of your password .
so , you now , log out and thi is gone .
that's onli in your mind and thi is sit in the databas .
so you log in , you log back in the coursera and you forget your password , so you type in poni .
if you run poni to sha1 , you get thi as the cryptograph hash of the word poni .
and you look and you compar and you go nope , that is not the right password .
i don't know what the right password is , i can't give you a hint .
i can't tell you hei , you , you put shift on your password , why don't you try take that off ?
you know , you seem to have cap lock on becaus it doesn't know what your password is , but it doe know that poni is not your password .
then , what it doe , right ?
so , thi is what's store in the databas .
then you go , oh my secretari , that's right , i us fluffi for my password on coursera .
so then coursera run that through sha1 , it get the cryptograph hash of the plain text that you enter .
and then , it compar it to what it ha store as the cryptograph , as the plain , as the as your hash password .
and it match .
so then it sai , yehei , i'll let you back in .
the fluffi onli exist in your mind .
unless you foolishli like wrote it on a post it note , and stuck it up on your comput , which you shouldn't do as well .
but whatev it wa , coursera never store it , right ?
coursera never store it .
coursera onli store thi .
and that again is why cursera can never tell you what your password is or ani reson site can never tell you what your password is .
it can onli tell you , it can onli let you chang it again .
which is easi .
chang again you just decid oh , it send you mail , you give it a new password and recomput a sha1 for that on and store that sha1 .
you have to get password reset to happen , okai ?
okai , so the next thing that i want to talk about is i want to talk about digit signatur .
how we can us thi for messag integr ?
so , we've got the notion of a cryptograph cach , which is a calcul take a larg block of text .
so far , we've onli us it on small block of text , okai ?
but now , we're go to us it on larger block of text where we're go to ensur messag integr .
which mean we're go to figur out if thi messag actual came from the person we think that it came from , okai ?
so , we're go to us integr now .
i mean , in a sens , what the system wa do when you were type in a password wa it wa insur that you were realli the person on the other end of the line , right ?
hi , i'm log in as dr .
chuck and here's my password , fluffli .
by give you the password , i'm prove that to coursera that i'm realli dr .
chuck .
so , that's a form of integr , right ?
identif is a form of integr , right ?
it's no differ than show your driver's licens .
it sai ye , thi is realli me .
okai , but now we're go to do it in a wai that we're go to send a messag .
so , it's not just a password .
we're not realli solv just the password problem , but we're actual go to us it to make sure that the messag , a , came from the right person .
and b , wa not modifi in transit .
thi is kind of the doctor sign the prescript digit .
and then , send you an email with your prescript that you can just print the email and take it , take it to your take it to your pharmacist .
so again , messag integr .
when you get a messag , did it come from , who did it come from ?
and do you , did it come from who you realli thought it came from ?
or wa it alter in transit ?
okai , so if you go back to our littl exampl from a christma stori the messag from anni wa eat more ovaltin .
now , the question realli becom , did it realli come from anni , right ?
becaus littl orphan anni didn't necessarili sai it .
littl orphan anni's hand the messag to somebodi els and then thei read it .
so , did that person chang the messag ?
becaus mayb there wa actual a secret messag from anni , and mayb anni wrote it , and it realli wa an import secret messag .
but then , somebodi like the advertis chang it and sent it to you as if it had came from anni .
so the , we're not realli worri so much now about the plaint text , that is the fine plain text .
the question is , did it realli come form littl orphan anni becaus we ar receiv thi from an insecur media ?
like anni is out here somewher but anni hand it to somebodi and hand it to somebodi .
hand it to somebodi that sent it across radio , yadda yadda yadda .
the question is , did the messag origin come from anni long , long ago hand through mani peopl or not ?
thi is again like the seal that you put on with the lax .
did it realli come from that person or not ?
is it realli anni , just sai , yeah thi is anni ?
that's too easi .
you can sai less ovaltin or mayb anni want to sai i hate ovaltin , right ?
that's , might be what , but we don't know if anni said eat more ovaltin or not , right ?
becaus what we saw wa eat more ovaltin and seen the scene that come from anni .
we got to know that came from anni or not , okai ?
so , simpl messag sign us share secret .
and we'll , we'll move to a better techniqu later .
but we're go to start with a simpl techniqu of share secret .
is that we have a share secret , that we're go to us for messag sign .
it'll probabl be differ than the cryptic , encrypt secret , okai ?
so now , we get togeth with anni in a share room .
and she tell us what the shift is go to be , and then she tell us what our share signatur secret is go to be , and then we separ .
so , the techniqu that you do is , befor we send the messag , we can concaten the secret to the messag , right ?
so , eat more ovaltin , and then put the secret on the end of the messag .
and then , you comput the digest of the messag , plu the secret concaten togeth .
then , you remov the secret from the messag , and then you send the messag plu the digest across the insecur .
and in my wife's exampl , thi wa the littl signatur number that came from her doctor , wa the digest .
but it wa the digest , not just of the messag , but of the messag plu the secret .
the secret didn't come across the messag plu the digest came across .
so , let's look at thi when we look at how , when we receiv a messag .
so , we receiv a messag and we see a digest at the end of the messag and it's across an insecur transport .
so , we take the digest off the messag , take the digest off the messag , and we add the secret back on the messag .
we know the secret , anni know the secret , but the peopl in the middl who transport the messag do not know the secret .
so it's final arriv in our locat , we see the digest , we pull that off and hold on to it .
we add the secret to it .
we can take the concaten messag plu secret , we run it through sha1 .
we get a digest local .
and then we compar that digest to the receiv digest .
and the onli wai to make the digest match is to know the secret .
now , mayb somebodi like made anni tell them the secret , which mean thei can forg the messag .
but , if the secret is not been compromis somehow .
the onli wai to creat the digest is to know the secret , right ?
and so , we can compar the receiv digest to the known other the , the , the , the known digest that we comput on our end in a secur wai .
becaus we and anni ar the onli on in possess of the secret .
so , here we go .
so , you can plai with thi on sha1 . php , dr .
chuck .
and so , if the messag is that anni want us to send , or anni want us to get is eat more ovaltin , and the secret is santa .
so what the , what you do is you take the messag .
concaten the secret , and then run that through sha1 .
thi is all happen in , in anni's secur room , and she come up with a , a digest .
now , i'm not , there's , it ; s longer than thi but that's just a first <num> charact of it .
and then , what she doe is she remov the secret and then concaten the digest , okai ?
and that's what get sent across the insecur medium .
it could be mani step , could be mani peopl , it could be on paper , it could be mors code , it could be phone call .
who know , radio , but we , we just , thi is the danger , right ?
thi is , we do not know if the messag is harm in anywai as it move across thi medium , okai ?
so then , what we do is we receiv the messag , right ?
we don't know if it's a good messag or a bad messag .
so , we see that it's a messag and it ha a digest on the end of the messag and we split that out .
we split the digest out and we hold onto the digest separ , okai ?
and now , we have the messag minu the digest .
and so , then what we do is we add the secret back on becaus onli anni and us know the secret , right ?
and , anni and us know the secret , we all know how to do sha1 .
ad so , we take thi messag and we run it through sha1 .
and we get a digest that we've comput local .
thi is the receiv digest , that's the local digest .
and then we compar and we sai thi is great .
that must've came from man .
and we know that it came from man even if it came through a danger set of step .
and we can't trust ani of the peopl that transport the messag .
we , thei're all untrustworthi .
but we know that no matter what happen , that origin , at that moment , anni did thi , okai ?
anni made thi digest becaus without know the word santa , there is noth .
and thi could be like megabyt of data .
and thi is a real tini , you know , <num> charact thing here .
the digest is small , the messag is larg .
so , you can't go backward to get it .
there's no backward here .
now , if you can steal the secret from anni , then all bet ar off , of cours .
so we , we have to assum that anni's okai .
and that , you know , anni wa not compromis like in jame bond movi , for exampl .
where i wa try to get the secret from the good gui , okai ?
so , let's go and do thi again , right ?
so , here we go .
we want to send the eat more ovaltin .
and the secret santa .
and so , we do the same thing , and we end up with , end up with that .
and then she concaten it .
and thi is all done , you know , in anni's bedroom , in secret thing .
and then she send it , okai ?
she send it to us , but a diabol , diabol courier sai , i have a thing about ovaltin , and i'm go to chang the more to less .
so , i'm go to chang thi messag to be eat less ovaltin , right ?
so eat less ovaltin , bad , evil .
i don't know how to draw evil .
i'm a terribl artist , van't draw evil .
so some untrust courier ha chang the word more to less .
so we see the thing that sai , and we don't know , right ?
we didn't see the courier that wa carri a box .
who know what thei did , but thei chang it .
and thei gave us a new copi .
so , we receiv thi messag from a untrust medium .
there's our untrust medium .
and it is our job to decid if it realli came from anni or not .
so , what we do is just like we did befor .
we break the messag and the digest into piec , and then we add the known secret to the end of it , all right ?
so , we've ad the known secret to the end of it right here .
now , we run it through the sha1 calcul .
and you can take , here we go .
there we go .
and go ahead and try thi if you want .
mayb you have thi up in a separ window , sha1 . php .
put less ovaltin santa in , and you'll get a differ signatur becaus you chang even a singl charact , and sha1 will give us a differ digest .
that's cryptograph hash in action , right ?
even the tiniest chang in megabyt of data will chang the cryptograph hash .
that's the beauti of sha1 , md5 and , you know sha256 and the other .
there is no match .
so , we know that thi messag did not , either did not come from anni or wa modifi in transit .
so we can tell the differ , and we do not have to trust the medium , right ?
okai , so let's see what we've got come up next here , okai ?
so , here is the encrypt techniqu , and let's just stop and let you do on of these on your own .
and sai that we've got two messag from anni .
and i want you to stop and i want you to calcul , santa is the , santa is the secret , okai ?
santa is the secret .
and i want you to tell me if free cooki or free candi actual came from anni or not .
on of them is a valid messag from anni , and the other is not a valid messag from anni , okai ?
so , i want you to take a moment , us the sha1 calcul .
and i want you to try and figur out which of these is valid , and wihch of these is not valid .
give you a minut .
okai , on last chanc befor we do the reveal .
okai , here we go .
so , here come the messag from insecur medium , free cooki , with that as the messag digest .
we , and we got the other on , free candi .
with that as the messag digest .
so , what we do is we take an , take off the digest and add the word santa to each on .
and then we run the sha1 on each on .
and then we get the two sha1s .
here's the on and here's the two .
and then what we do , most importantli , is we compar them with the receiv sha1 .
and when you compar them with the receiv sha1 or the receiv the messag digest , or the receiv messag signatur , you see right awai that on is good and on is bad .
it's as simpl as that , right ?
on of these is good , and on of these is bad .
so digit signatur ar , ar actual realli surprisingli simpl , and surprisingli easi to do without a lot of complex technolog .
the onli complex technolog in here is realli the , the clever mathemat that make these cryptograph hash work effect .
it the simpl concaten of a secret .
now , you want your secret to be kind of longer than thi and more random than that .
but ultim , the notion of a digit signatur is actual a simpl and , and rather eleg and beauti notion that realli leverag thi notion of cryptograph cach in a realli cool manner .
so , that kind of sum up our first half lectur , where we realli talk more about the techniqu of both integr and confidenti .
but we've done it all with share , a secret kei , right ?
where we have the same kei , we have a moment where we're togeth in a secur manner , and we exchang the code book .
whether it's anni or , or the caesar , or whatev where we know what the shift is , right ?
so , everi pair of commun peopl or system need a , a kei .
now , in the internet , with everybodi bui from everybodi els and us credit card , it's just not practic .
you just could not have a secret kei for amazon , i guess it kind of work with a password .
now that's dif , we'll get to that in a second .
the password doesn't solv everyth becaus then you would have to actual visit amazon to get your password set up .
and so , the problem is , is that you , you , you , we have to us an insecur medium to establish the first secret as it were .
and so , it just wa never go to work .
so , we need a differ approach for the internet , and that's what we're go to talk about in the next lectur , okai ?
see you then .
